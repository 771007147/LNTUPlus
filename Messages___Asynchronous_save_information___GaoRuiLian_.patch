Index: web/views/404.jsp
===================================================================
--- web/views/404.jsp	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ web/views/404.jsp	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
@@ -1,17 +0,0 @@
-<%--
-  Created by IntelliJ IDEA.
-  User: apple
-  Date: 2019/2/6
-  Time: 上午11:20
-  To change this template use File | Settings | File Templates.
---%>
-<%@ page contentType="text/html;charset=UTF-8" language="java" %>
-<html>
-<head>
-    <title>404</title>
-</head>
-<body>
-
-<h1>404 not found</h1>
-</body>
-</html>
Index: web/views/success.jsp
===================================================================
--- web/views/success.jsp	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ web/views/success.jsp	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
@@ -1,12 +0,0 @@
-<%@ page language="java" contentType="text/html; charset=UTF-8"
-         pageEncoding="UTF-8" %>
-<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<html>
-<head>
-    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
-    <title>Spring MVC</title>
-</head>
-<body>
-<h4>Success Page</h4>
-</body>
-</html>
\ No newline at end of file
Index: .idea/dataSources.local.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/dataSources.local.xml	(date 1550387360000)
+++ .idea/dataSources.local.xml	(date 1550387360000)
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="dataSourceStorageLocal">
+    <data-source name="gongdaplus@localhost" uuid="8641894d-6edb-4579-872b-a82146479227">
+      <database-info product="MySQL" version="5.7.20" jdbc-version="4.0" driver-name="MySQL Connector Java" driver-version="mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e )" dbms="MYSQL" exact-version="5.7.20" exact-driver-version="5.1">
+        <extra-name-characters>#@</extra-name-characters>
+        <identifier-quote-string>`</identifier-quote-string>
+      </database-info>
+      <case-sensitivity plain-identifiers="mixed" quoted-identifiers="mixed" />
+      <secret-storage>master_key</secret-storage>
+      <user-name>root</user-name>
+      <introspection-schemas>*:</introspection-schemas>
+    </data-source>
+  </component>
+</project>
\ No newline at end of file
Index: src/main/java/com/lntuplus/dao/PortDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/dao/PortDao.java	(date 1551945957000)
+++ src/main/java/com/lntuplus/dao/PortDao.java	(date 1551945957000)
@@ -0,0 +1,6 @@
+package com.lntuplus.dao;
+
+public interface PortDao {
+
+    int insert(String port);
+}
Index: src/main/java/com/lntuplus/model/HelloModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/model/HelloModel.java	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ src/main/java/com/lntuplus/model/HelloModel.java	(date 1552380475000)
@@ -5,8 +5,7 @@
 public class HelloModel implements Serializable {
     private String updateTime;
     private String title;
-    private String imgUrl_16;
-    private String imgUrl_21;
+    private String imgUrl;
     private String url;
 
     public String getUpdateTime() {
@@ -25,20 +24,12 @@
         this.title = title;
     }
 
-    public String getImgUrl_16() {
-        return imgUrl_16;
-    }
-
-    public void setImgUrl_16(String imgUrl_16) {
-        this.imgUrl_16 = imgUrl_16;
-    }
-
-    public String getImgUrl_21() {
-        return imgUrl_21;
+    public String getImgUrl() {
+        return imgUrl;
     }
 
-    public void setImgUrl_21(String imgUrl_21) {
-        this.imgUrl_21 = imgUrl_21;
+    public void setImgUrl(String imgUrl) {
+        this.imgUrl = imgUrl;
     }
 
     public String getUrl() {
Index: src/main/java/com/lntuplus/model/ExamModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/model/ExamModel.java	(date 1555233452000)
+++ src/main/java/com/lntuplus/model/ExamModel.java	(date 1555233452000)
@@ -0,0 +1,80 @@
+package com.lntuplus.model;
+
+import java.util.Date;
+
+public class ExamModel implements Comparable<ExamModel> {
+    private int number;
+    private String course;
+    private String term;
+    private Date dateTime;
+    private String date;
+    private String time;
+    private String address;
+
+    public int getNumber() {
+        return number;
+    }
+
+    public void setNumber(int number) {
+        this.number = number;
+    }
+
+    public String getCourse() {
+        return course;
+    }
+
+    public void setCourse(String course) {
+        this.course = course;
+    }
+
+    public String getTerm() {
+        return term;
+    }
+
+    public void setTerm(String term) {
+        this.term = term;
+    }
+
+    public Date getDateTime() {
+        return dateTime;
+    }
+
+    public void setDateTime(Date dateTime) {
+        this.dateTime = dateTime;
+    }
+
+    public String getDate() {
+        return date;
+    }
+
+    public void setDate(String date) {
+        this.date = date;
+    }
+
+    public String getTime() {
+        return time;
+    }
+
+    public void setTime(String time) {
+        this.time = time;
+    }
+
+    public String getAddress() {
+        return address;
+    }
+
+    public void setAddress(String address) {
+        this.address = address;
+    }
+
+    @Override
+    public int compareTo(ExamModel o) {
+        if (this.getDateTime().before(o.getDateTime())) {
+            return 1;
+        }
+        if (this.getDateTime().after(o.getDateTime())) {
+            return -1;
+        }
+        return 0;
+    }
+}
Index: src/main/java/com/lntuplus/controller/ScoreRankController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/controller/ScoreRankController.java	(date 1555231791000)
+++ src/main/java/com/lntuplus/controller/ScoreRankController.java	(date 1555231791000)
@@ -0,0 +1,9 @@
+package com.lntuplus.controller;
+
+import org.springframework.stereotype.Controller;
+import org.springframework.web.bind.annotation.RequestMapping;
+
+@Controller
+@RequestMapping(value = "/rank")
+public class ScoreRankController {
+}
Index: src/main/java/com/lntuplus/model/SignModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/model/SignModel.java	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ src/main/java/com/lntuplus/model/SignModel.java	(date 1555233452000)
@@ -1,7 +1,5 @@
 package com.lntuplus.model;
 
-import java.util.Date;
-
 public class SignModel {
     private int number;
     private String name;
@@ -13,6 +11,8 @@
     public SignModel() {
     }
 
+    ;
+
     public SignModel(int number, String day, int no) {
         this.number = number;
         this.day = day;
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/workspace.xml	(date 1555233320000)
+++ .idea/workspace.xml	(date 1555233320000)
@@ -0,0 +1,1451 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ArtifactsWorkspaceSettings">
+    <artifacts-to-build>
+      <artifact name="lntuplus" />
+    </artifacts-to-build>
+  </component>
+  <component name="ChangeListManager">
+    <list default="true" id="759dc6db-6f36-4e5f-9c8f-581358465c47" name="Default Changelist" comment="feat: commit all files.&#10;&#10;Use Mybatis control DB.&#10;&#10;GaoRuiLian.">
+      <change afterPath="$PROJECT_DIR$/.idea/artifacts/lntuplus.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/dataSources.local.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_annotations_2_9_0.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_core_2_9_8.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_databind_2_9_8.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_mchange_c3p0_0_9_5_2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_mchange_mchange_commons_java_0_2_11.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_zaxxer_HikariCP_java6_2_3_13.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_apache_logging_log4j_log4j_api_2_11_2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_apache_logging_log4j_log4j_core_2_11_2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_slf4j_slf4j_api_1_7_7.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/action/AsyncAction.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/action/ExamAction.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/action/SaveAction.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/action/ScoreAction.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/action/ScoreRankAction.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/action/StuInfoAction.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/action/TableAction.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/CETController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/ChooseTableController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/ExamController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/FeedbackController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/LoginController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/ScoreController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/ScoreRankController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/StuInfoController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/TableController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/TimeController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/WeekController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/dao/PortDao.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/model/ActivityModel.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/model/ExamModel.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/model/GPAModel.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/model/ScoreModel.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/model/StuInfoModel.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/model/TableModel.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/service/PortService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/utils/Constants.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/utils/OkHttpUtils.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/mappers/article-mapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/mappers/everyday-mapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/mappers/notice-mapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/mappers/port-mapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/mappers/save-mapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/web/META-INF/MANIFEST.MF" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/web/WEB-INF/view/sign.jsp" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/artifacts/LNTUPlus_war_exploded.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/artifacts/LNTUPlus_exploded.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__org_quartz_scheduler_quartz_2_4_0.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_quartz_scheduler_quartz_2_3_0.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/LNTUPlus.iml" beforeDir="false" afterPath="$PROJECT_DIR$/LNTUPlus.iml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/lntuplus/action/ArticleAction.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/action/ArticleAction.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/lntuplus/action/AutoLogin.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/action/LoginAction.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/lntuplus/action/ClassRoomAction.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/action/ClassRoomAction.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/lntuplus/action/Evaluate.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/action/Evaluate.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/lntuplus/action/EverydayTextAction.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/action/EverydayAction.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/lntuplus/action/Feedback.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/action/FeedbackAction.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/lntuplus/action/GetMessages.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/action/GetMessages.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/lntuplus/action/HelloAction.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/action/HelloAction.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/lntuplus/action/SchoolNoticeAction.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/action/NoticeAction.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/lntuplus/action/SignAction.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/action/SignAction.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/ArticleController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/ArticleController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/ClassRoomController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/ClassRoomController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/EverydayTextController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/EverydayController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/HelloController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/HelloController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/SchoolNoticeController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/NoticeController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/SignController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/SignController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/lntuplus/model/ArticleModel.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/model/ArticleModel.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/lntuplus/model/EverydayTextModel.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/model/EverydayModel.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/lntuplus/model/HelloModel.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/model/HelloModel.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/lntuplus/model/SchoolNoticeModel.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/model/NoticeModel.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/lntuplus/model/SignModel.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/model/SignModel.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/lntuplus/service/SchoolNoticeService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/service/NoticeService.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/lntuplus/utils/GsonUtils.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/utils/GsonUtils.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/lntuplus/utils/TimeUtils.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/lntuplus/utils/TimeUtils.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/mappers/sign-mapper.xml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/mappers/sign-mapper.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/mybatis-config.xml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/mybatis-config.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/web/WEB-INF/dispatcher-servlet.xml" beforeDir="false" afterPath="$PROJECT_DIR$/web/WEB-INF/dispatcher-servlet.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/web/WEB-INF/web.xml" beforeDir="false" afterPath="$PROJECT_DIR$/web/WEB-INF/web.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/web/index.jsp" beforeDir="false" afterPath="$PROJECT_DIR$/web/index.jsp" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/web/views/404.jsp" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/web/views/success.jsp" beforeDir="false" />
+    </list>
+    <ignored path="$PROJECT_DIR$/out/" />
+    <ignored path="$PROJECT_DIR$/target/" />
+    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="DatabaseView">
+    <option name="SHOW_INTERMEDIATE" value="true" />
+    <option name="GROUP_DATA_SOURCES" value="true" />
+    <option name="GROUP_SCHEMA" value="true" />
+    <option name="GROUP_CONTENTS" value="false" />
+    <option name="SORT_POSITIONED" value="false" />
+    <option name="SHOW_EMPTY_GROUPS" value="false" />
+    <option name="AUTO_SCROLL_FROM_SOURCE" value="false" />
+    <option name="HIDDEN_KINDS">
+      <set />
+    </option>
+    <expand />
+    <select />
+  </component>
+  <component name="DefaultGradleProjectSettings">
+    <option name="isMigrated" value="true" />
+  </component>
+  <component name="FileEditorManager">
+    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
+      <file pinned="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/action/AsyncAction.java">
+          <provider selected="true" editor-type-id="text-editor">
+            <state relative-caret-position="711">
+              <caret line="51" column="27" lean-forward="true" selection-start-line="51" selection-start-column="27" selection-end-line="51" selection-end-column="27" />
+              <folding>
+                <element signature="imports" expanded="true" />
+              </folding>
+            </state>
+          </provider>
+        </entry>
+      </file>
+      <file pinned="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/action/ScoreAction.java">
+          <provider selected="true" editor-type-id="text-editor">
+            <state relative-caret-position="708">
+              <caret line="41" column="43" lean-forward="true" selection-start-line="41" selection-start-column="43" selection-end-line="41" selection-end-column="43" />
+              <folding>
+                <element signature="imports" expanded="true" />
+              </folding>
+            </state>
+          </provider>
+        </entry>
+      </file>
+      <file pinned="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/model/ExamModel.java">
+          <provider selected="true" editor-type-id="text-editor">
+            <state relative-caret-position="396">
+              <caret line="32" selection-start-line="32" selection-end-line="32" />
+              <folding>
+                <element signature="e#599#600#0" expanded="true" />
+                <element signature="e#626#627#0" expanded="true" />
+                <element signature="e#666#667#0" expanded="true" />
+                <element signature="e#698#699#0" expanded="true" />
+              </folding>
+            </state>
+          </provider>
+        </entry>
+      </file>
+      <file pinned="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/utils/TimeUtils.java">
+          <provider selected="true" editor-type-id="text-editor">
+            <state relative-caret-position="666">
+              <caret line="41" column="27" lean-forward="true" selection-start-line="41" selection-start-column="27" selection-end-line="41" selection-end-column="27" />
+            </state>
+          </provider>
+        </entry>
+      </file>
+      <file pinned="false" current-in-tab="true">
+        <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/action/SaveAction.java">
+          <provider selected="true" editor-type-id="text-editor">
+            <state relative-caret-position="568">
+              <caret line="109" column="45" lean-forward="true" selection-start-line="109" selection-start-column="45" selection-end-line="109" selection-end-column="45" />
+              <folding>
+                <element signature="imports" expanded="true" />
+              </folding>
+            </state>
+          </provider>
+        </entry>
+      </file>
+      <file pinned="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/utils/DBSessionFactory.java">
+          <provider selected="true" editor-type-id="text-editor">
+            <state relative-caret-position="648">
+              <caret line="43" lean-forward="true" selection-start-line="43" selection-end-line="43" />
+            </state>
+          </provider>
+        </entry>
+      </file>
+      <file pinned="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/action/ClassRoomAction.java">
+          <provider selected="true" editor-type-id="text-editor">
+            <state relative-caret-position="90">
+              <caret line="20" column="13" selection-start-line="20" selection-start-column="13" selection-end-line="20" selection-end-column="13" />
+            </state>
+          </provider>
+        </entry>
+      </file>
+      <file pinned="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/service/PortService.java">
+          <provider selected="true" editor-type-id="text-editor">
+            <state relative-caret-position="274">
+              <caret line="18" column="63" selection-start-line="18" selection-start-column="63" selection-end-line="18" selection-end-column="63" />
+              <folding>
+                <element signature="imports" expanded="true" />
+              </folding>
+            </state>
+          </provider>
+        </entry>
+      </file>
+      <file pinned="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/src/main/resources/mappers/save-mapper.xml">
+          <provider selected="true" editor-type-id="text-editor">
+            <state relative-caret-position="640">
+              <caret line="105" column="57" selection-start-line="105" selection-start-column="57" selection-end-line="105" selection-end-column="57" />
+            </state>
+          </provider>
+        </entry>
+      </file>
+      <file pinned="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/model/GPAModel.java">
+          <provider selected="true" editor-type-id="text-editor">
+            <state relative-caret-position="72">
+              <caret line="4" column="13" selection-start-line="4" selection-start-column="13" selection-end-line="4" selection-end-column="13" />
+              <folding>
+                <element signature="e#182#183#0" expanded="true" />
+                <element signature="e#211#212#0" expanded="true" />
+                <element signature="e#255#256#0" expanded="true" />
+                <element signature="e#291#292#0" expanded="true" />
+                <element signature="e#321#322#0" expanded="true" />
+                <element signature="e#347#348#0" expanded="true" />
+                <element signature="e#385#386#0" expanded="true" />
+                <element signature="e#415#416#0" expanded="true" />
+                <element signature="e#444#445#0" expanded="true" />
+                <element signature="e#471#472#0" expanded="true" />
+                <element signature="e#509#510#0" expanded="true" />
+                <element signature="e#541#542#0" expanded="true" />
+              </folding>
+            </state>
+          </provider>
+        </entry>
+      </file>
+    </leaf>
+  </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="Jsp File" />
+        <option value="FxmlFile" />
+        <option value="Tag Library Descriptor" />
+        <option value="spring-beans.schema" />
+        <option value="Class" />
+      </list>
+    </option>
+  </component>
+  <component name="FindInProjectRecents">
+    <findStrings>
+      <find>(List)</find>
+      <find>weeks</find>
+      <find>buildingname</find>
+      <find>new TimeUtils().getTime()</find>
+      <find>.git</find>
+      <find>schoolNoticeModel</find>
+      <find>update</find>
+      <find>resp.close</find>
+      <find>number</find>
+      <find>tt</find>
+      <find>parsetable</find>
+      <find>, item.length()</find>
+      <find>(Element)</find>
+      <find>Evaluate.this.</find>
+      <find>evaluateData</find>
+      <find>requestbody</find>
+      <find>getuseableport</find>
+      <find>System.out.pr</find>
+      <find>nowweek</find>
+      <find>quartz</find>
+      <find>response</find>
+      <find>filePath</find>
+      <find>DEFAULT_SIZE</find>
+      <find>getwidth</find>
+      <find>size</find>
+      <find>getbufferedimage</find>
+      <find>system.out.pr</find>
+      <find>system.out</find>
+      <find>Thread.</find>
+      <find>gpa</find>
+    </findStrings>
+    <replaceStrings>
+      <replace>mItemUrl</replace>
+      <replace>mClient</replace>
+      <replace>noticeMain</replace>
+      <replace>new TimeUtils().getTime()</replace>
+      <replace>sBuildingName</replace>
+      <replace>TimeUtils.getTime()</replace>
+      <replace>noticeModel</replace>
+      <replace>updateHashcode</replace>
+      <replace>itme</replace>
+      <replace>s</replace>
+      <replace>mNumber</replace>
+      <replace>map</replace>
+    </replaceStrings>
+  </component>
+  <component name="Git.Settings">
+    <option name="PREVIOUS_COMMIT_AUTHORS">
+      <list>
+        <option value="GaoRuiLian &lt;771007147@qq.com&gt;" />
+        <option value="GaoRuiLian" />
+      </list>
+    </option>
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="IdeDocumentHistory">
+    <option name="CHANGED_PATHS">
+      <list>
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/WeekNoController.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/TimeController.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/model/HelloModel.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/WeekController.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/EverydayController.java" />
+        <option value="$PROJECT_DIR$/src/main/resources/mappers/article-mapper.xml" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/model/ActivityModel.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/action/ArticleAction.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/ArticleController.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/utils/OkHttpUtils.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/utils/Constants.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/HelloController.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/ClassRoomController.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/action/ClassRoomAction.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/action/Feedback.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/action/FeedbackAction.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/FeedbackController.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/NoticeTestController.java" />
+        <option value="$PROJECT_DIR$/pom.xml" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/NoticeController.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/action/HelloAction.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/action/LoginAction.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/action/SignAction.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/model/SignModel.java" />
+        <option value="$PROJECT_DIR$/web/WEB-INF/view/sign.jsp" />
+        <option value="$PROJECT_DIR$/src/main/resources/mappers/notice-mapper.xml" />
+        <option value="$PROJECT_DIR$/src/main/resources/mappers/sign-mapper.xml" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/SignController.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/model/ScoreModel.java" />
+        <option value="$PROJECT_DIR$/web/index.jsp" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/utils/TimeUtils.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/action/SaveThread.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/model/StuInfoModel.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/service/NoticeService.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/service/PortService.java" />
+        <option value="$PROJECT_DIR$/web/WEB-INF/web.xml" />
+        <option value="$PROJECT_DIR$/web/WEB-INF/dispatcher-servlet.xml" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/service/SaveService.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/action/ExamAction.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/action/StuInfoAction.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/action/TableAction.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/action/NoticeAction.java" />
+        <option value="$PROJECT_DIR$/src/main/resources/mybatis-config.xml" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/LoginController.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/model/ExamModel.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/controller/ScoreRankController.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/action/AsyncAction.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/model/GAPModel.java" />
+        <option value="$PROJECT_DIR$/src/main/resources/mappers/save-mapper.xml" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/action/ScoreAction.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/lntuplus/action/SaveAction.java" />
+      </list>
+    </option>
+  </component>
+  <component name="LogFilters">
+    <option name="FILTER_ERRORS" value="false" />
+    <option name="FILTER_WARNINGS" value="false" />
+    <option name="FILTER_INFO" value="true" />
+    <option name="FILTER_DEBUG" value="true" />
+    <option name="CUSTOM_FILTER" />
+  </component>
+  <component name="MavenImportPreferences">
+    <option name="importingSettings">
+      <MavenImportingSettings>
+        <option name="importAutomatically" value="true" />
+      </MavenImportingSettings>
+    </option>
+  </component>
+  <component name="MavenProjectNavigator">
+    <treeState>
+      <expand>
+        <path>
+          <item name="" type="16c1761:MavenProjectsStructure$RootNode" />
+          <item name="LNTUPlus" type="9519ce18:MavenProjectsStructure$ProjectNode" />
+        </path>
+        <path>
+          <item name="" type="16c1761:MavenProjectsStructure$RootNode" />
+          <item name="LNTUPlus" type="9519ce18:MavenProjectsStructure$ProjectNode" />
+          <item name="Lifecycle" type="58874e2:MavenProjectsStructure$LifecycleNode" />
+        </path>
+        <path>
+          <item name="" type="16c1761:MavenProjectsStructure$RootNode" />
+          <item name="LNTUPlus" type="9519ce18:MavenProjectsStructure$ProjectNode" />
+          <item name="Dependencies" type="f4be9f2a:MavenProjectsStructure$DependenciesNode" />
+        </path>
+      </expand>
+      <select />
+    </treeState>
+  </component>
+  <component name="ProjectFrameBounds">
+    <option name="y" value="23" />
+    <option name="width" value="2463" />
+    <option name="height" value="1336" />
+  </component>
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
+    <ConfirmationsSetting value="2" id="Add" />
+  </component>
+  <component name="ProjectView">
+    <navigator proportions="" version="1">
+      <foldersAlwaysOnTop value="true" />
+    </navigator>
+    <panes>
+      <pane id="Scope" />
+      <pane id="PackagesPane" />
+      <pane id="ProjectPane">
+        <subPane>
+          <expand>
+            <path>
+              <item name="LNTUPlus" type="b2602c69:ProjectViewProjectNode" />
+              <item name="LNTUPlus" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="LNTUPlus" type="b2602c69:ProjectViewProjectNode" />
+              <item name="LNTUPlus" type="462c0819:PsiDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="LNTUPlus" type="b2602c69:ProjectViewProjectNode" />
+              <item name="LNTUPlus" type="462c0819:PsiDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="main" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="LNTUPlus" type="b2602c69:ProjectViewProjectNode" />
+              <item name="LNTUPlus" type="462c0819:PsiDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="main" type="462c0819:PsiDirectoryNode" />
+              <item name="java" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="LNTUPlus" type="b2602c69:ProjectViewProjectNode" />
+              <item name="LNTUPlus" type="462c0819:PsiDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="main" type="462c0819:PsiDirectoryNode" />
+              <item name="java" type="462c0819:PsiDirectoryNode" />
+              <item name="lntuplus" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="LNTUPlus" type="b2602c69:ProjectViewProjectNode" />
+              <item name="LNTUPlus" type="462c0819:PsiDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="main" type="462c0819:PsiDirectoryNode" />
+              <item name="java" type="462c0819:PsiDirectoryNode" />
+              <item name="lntuplus" type="462c0819:PsiDirectoryNode" />
+              <item name="action" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="LNTUPlus" type="b2602c69:ProjectViewProjectNode" />
+              <item name="LNTUPlus" type="462c0819:PsiDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="main" type="462c0819:PsiDirectoryNode" />
+              <item name="java" type="462c0819:PsiDirectoryNode" />
+              <item name="lntuplus" type="462c0819:PsiDirectoryNode" />
+              <item name="controller" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="LNTUPlus" type="b2602c69:ProjectViewProjectNode" />
+              <item name="LNTUPlus" type="462c0819:PsiDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="main" type="462c0819:PsiDirectoryNode" />
+              <item name="java" type="462c0819:PsiDirectoryNode" />
+              <item name="lntuplus" type="462c0819:PsiDirectoryNode" />
+              <item name="model" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="LNTUPlus" type="b2602c69:ProjectViewProjectNode" />
+              <item name="LNTUPlus" type="462c0819:PsiDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="main" type="462c0819:PsiDirectoryNode" />
+              <item name="java" type="462c0819:PsiDirectoryNode" />
+              <item name="lntuplus" type="462c0819:PsiDirectoryNode" />
+              <item name="service" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="LNTUPlus" type="b2602c69:ProjectViewProjectNode" />
+              <item name="LNTUPlus" type="462c0819:PsiDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="main" type="462c0819:PsiDirectoryNode" />
+              <item name="java" type="462c0819:PsiDirectoryNode" />
+              <item name="lntuplus" type="462c0819:PsiDirectoryNode" />
+              <item name="utils" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="LNTUPlus" type="b2602c69:ProjectViewProjectNode" />
+              <item name="LNTUPlus" type="462c0819:PsiDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="main" type="462c0819:PsiDirectoryNode" />
+              <item name="resources" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="LNTUPlus" type="b2602c69:ProjectViewProjectNode" />
+              <item name="LNTUPlus" type="462c0819:PsiDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="main" type="462c0819:PsiDirectoryNode" />
+              <item name="resources" type="462c0819:PsiDirectoryNode" />
+              <item name="mappers" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="LNTUPlus" type="b2602c69:ProjectViewProjectNode" />
+              <item name="LNTUPlus" type="462c0819:PsiDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="test" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="LNTUPlus" type="b2602c69:ProjectViewProjectNode" />
+              <item name="LNTUPlus" type="462c0819:PsiDirectoryNode" />
+              <item name="web" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="LNTUPlus" type="b2602c69:ProjectViewProjectNode" />
+              <item name="LNTUPlus" type="462c0819:PsiDirectoryNode" />
+              <item name="web" type="462c0819:PsiDirectoryNode" />
+              <item name="WEB-INF" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="LNTUPlus" type="b2602c69:ProjectViewProjectNode" />
+              <item name="LNTUPlus" type="462c0819:PsiDirectoryNode" />
+              <item name="web" type="462c0819:PsiDirectoryNode" />
+              <item name="WEB-INF" type="462c0819:PsiDirectoryNode" />
+              <item name="view" type="462c0819:PsiDirectoryNode" />
+            </path>
+          </expand>
+          <select />
+        </subPane>
+      </pane>
+    </panes>
+  </component>
+  <component name="PropertiesComponent">
+    <property name="DatabaseDriversLRU" value="mysql" />
+    <property name="Downloaded.Files.Path.Enabled" value="false" />
+    <property name="Repository.Attach.JavaDocs" value="false" />
+    <property name="Repository.Attach.Sources" value="false" />
+    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
+    <property name="WebServerToolWindowFactoryState" value="false" />
+    <property name="aspect.path.notification.shown" value="true" />
+    <property name="com.android.tools.idea.instantapp.provision.ProvisionBeforeRunTaskProvider.myTimeStamp" value="1553935499698" />
+    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
+    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
+    <property name="nodejs_package_manager_path" value="npm" />
+    <property name="project.structure.last.edited" value="Libraries" />
+    <property name="project.structure.proportion" value="0.15" />
+    <property name="project.structure.side.proportion" value="0.26091954" />
+    <property name="run.code.analysis.last.selected.profile" value="pProject Default" />
+    <property name="settings.editor.selected.configurable" value="settings.github" />
+  </component>
+  <component name="RecentsManager">
+    <key name="CopyFile.RECENT_KEYS">
+      <recent name="$PROJECT_DIR$/web/WEB-INF/view" />
+      <recent name="$PROJECT_DIR$/src/main/java/com/lntuplus/utils" />
+      <recent name="$PROJECT_DIR$/web/views" />
+      <recent name="$PROJECT_DIR$/web/WEB-INF" />
+      <recent name="$PROJECT_DIR$/src/main/resources" />
+    </key>
+    <key name="MoveFile.RECENT_KEYS">
+      <recent name="$PROJECT_DIR$/web/WEB-INF/views" />
+      <recent name="$PROJECT_DIR$/web" />
+      <recent name="$PROJECT_DIR$/src/main/java/com/lntuplus" />
+    </key>
+  </component>
+  <component name="RunDashboard">
+    <option name="ruleStates">
+      <list>
+        <RuleState>
+          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
+        </RuleState>
+        <RuleState>
+          <option name="name" value="StatusDashboardGroupingRule" />
+        </RuleState>
+      </list>
+    </option>
+  </component>
+  <component name="RunManager" selected="Tomcat Server.Tomcat9">
+    <configuration name="Tomcat9" type="#com.intellij.j2ee.web.tomcat.TomcatRunConfigurationFactory" factoryName="Local" APPLICATION_SERVER_NAME="Tomcat 9.0.12" ALTERNATIVE_JRE_ENABLED="false">
+      <option name="OPEN_IN_BROWSER_URL" value="http://localhost:8080/lntuplus/" />
+      <option name="BROWSER_ID" value="98ca6316-2f89-46d9-a9e5-fa9e2b0625b3" />
+      <option name="START_JAVASCRIPT_DEBUGGER" value="true" />
+      <option name="UPDATING_POLICY" value="restart-server" />
+      <deployment>
+        <artifact name="LNTUPlus:exploded">
+          <settings>
+            <option name="CONTEXT_PATH" value="/lntuplus" />
+          </settings>
+        </artifact>
+      </deployment>
+      <server-settings>
+        <option name="BASE_DIRECTORY_NAME" value="Unnamed_LNTUPlus_3" />
+      </server-settings>
+      <predefined_log_file enabled="true" id="Tomcat" />
+      <predefined_log_file enabled="true" id="Tomcat Catalina" />
+      <predefined_log_file id="Tomcat Manager" />
+      <predefined_log_file id="Tomcat Host Manager" />
+      <predefined_log_file id="Tomcat Localhost Access" />
+      <RunnerSettings RunnerId="Debug">
+        <option name="DEBUG_PORT" value="54685" />
+      </RunnerSettings>
+      <ConfigurationWrapper VM_VAR="JAVA_OPTS" RunnerId="Cover">
+        <option name="USE_ENV_VARIABLES" value="true" />
+        <STARTUP>
+          <option name="USE_DEFAULT" value="true" />
+          <option name="SCRIPT" value="" />
+          <option name="VM_PARAMETERS" value="" />
+          <option name="PROGRAM_PARAMETERS" value="" />
+        </STARTUP>
+        <SHUTDOWN>
+          <option name="USE_DEFAULT" value="true" />
+          <option name="SCRIPT" value="" />
+          <option name="VM_PARAMETERS" value="" />
+          <option name="PROGRAM_PARAMETERS" value="" />
+        </SHUTDOWN>
+      </ConfigurationWrapper>
+      <ConfigurationWrapper VM_VAR="JAVA_OPTS" RunnerId="Debug">
+        <option name="USE_ENV_VARIABLES" value="true" />
+        <STARTUP>
+          <option name="USE_DEFAULT" value="true" />
+          <option name="SCRIPT" value="" />
+          <option name="VM_PARAMETERS" value="" />
+          <option name="PROGRAM_PARAMETERS" value="" />
+        </STARTUP>
+        <SHUTDOWN>
+          <option name="USE_DEFAULT" value="true" />
+          <option name="SCRIPT" value="" />
+          <option name="VM_PARAMETERS" value="" />
+          <option name="PROGRAM_PARAMETERS" value="" />
+        </SHUTDOWN>
+      </ConfigurationWrapper>
+      <ConfigurationWrapper VM_VAR="JAVA_OPTS" RunnerId="Run">
+        <option name="USE_ENV_VARIABLES" value="true" />
+        <STARTUP>
+          <option name="USE_DEFAULT" value="true" />
+          <option name="SCRIPT" value="" />
+          <option name="VM_PARAMETERS" value="" />
+          <option name="PROGRAM_PARAMETERS" value="" />
+        </STARTUP>
+        <SHUTDOWN>
+          <option name="USE_DEFAULT" value="true" />
+          <option name="SCRIPT" value="" />
+          <option name="VM_PARAMETERS" value="" />
+          <option name="PROGRAM_PARAMETERS" value="" />
+        </SHUTDOWN>
+      </ConfigurationWrapper>
+      <method v="2">
+        <option name="BuildArtifacts" enabled="true">
+          <artifact name="LNTUPlus:exploded" />
+        </option>
+      </method>
+    </configuration>
+    <configuration name="index.jsp" type="#com.intellij.j2ee.web.tomcat.TomcatRunConfigurationFactory" factoryName="Local" temporary="true" APPLICATION_SERVER_NAME="Tomcat 9.0.12" ALTERNATIVE_JRE_ENABLED="false">
+      <option name="OPEN_IN_BROWSER_URL" value="http://localhost:8080/index.jsp" />
+      <deployment>
+        <artifact name="LNTUPlus:exploded">
+          <settings>
+            <option name="CONTEXT_PATH" value="/" />
+          </settings>
+        </artifact>
+      </deployment>
+      <server-settings>
+        <option name="BASE_DIRECTORY_NAME" value="index_jsp_LNTUPlus" />
+      </server-settings>
+      <predefined_log_file enabled="true" id="Tomcat" />
+      <predefined_log_file enabled="true" id="Tomcat Catalina" />
+      <predefined_log_file id="Tomcat Manager" />
+      <predefined_log_file id="Tomcat Host Manager" />
+      <predefined_log_file id="Tomcat Localhost Access" />
+      <RunnerSettings RunnerId="Debug">
+        <option name="DEBUG_PORT" value="64046" />
+      </RunnerSettings>
+      <ConfigurationWrapper VM_VAR="JAVA_OPTS" RunnerId="Cover">
+        <option name="USE_ENV_VARIABLES" value="true" />
+        <STARTUP>
+          <option name="USE_DEFAULT" value="true" />
+          <option name="SCRIPT" value="" />
+          <option name="VM_PARAMETERS" value="" />
+          <option name="PROGRAM_PARAMETERS" value="" />
+        </STARTUP>
+        <SHUTDOWN>
+          <option name="USE_DEFAULT" value="true" />
+          <option name="SCRIPT" value="" />
+          <option name="VM_PARAMETERS" value="" />
+          <option name="PROGRAM_PARAMETERS" value="" />
+        </SHUTDOWN>
+      </ConfigurationWrapper>
+      <ConfigurationWrapper VM_VAR="JAVA_OPTS" RunnerId="Debug">
+        <option name="USE_ENV_VARIABLES" value="true" />
+        <STARTUP>
+          <option name="USE_DEFAULT" value="true" />
+          <option name="SCRIPT" value="" />
+          <option name="VM_PARAMETERS" value="" />
+          <option name="PROGRAM_PARAMETERS" value="" />
+        </STARTUP>
+        <SHUTDOWN>
+          <option name="USE_DEFAULT" value="true" />
+          <option name="SCRIPT" value="" />
+          <option name="VM_PARAMETERS" value="" />
+          <option name="PROGRAM_PARAMETERS" value="" />
+        </SHUTDOWN>
+      </ConfigurationWrapper>
+      <ConfigurationWrapper VM_VAR="JAVA_OPTS" RunnerId="Run">
+        <option name="USE_ENV_VARIABLES" value="true" />
+        <STARTUP>
+          <option name="USE_DEFAULT" value="true" />
+          <option name="SCRIPT" value="" />
+          <option name="VM_PARAMETERS" value="" />
+          <option name="PROGRAM_PARAMETERS" value="" />
+        </STARTUP>
+        <SHUTDOWN>
+          <option name="USE_DEFAULT" value="true" />
+          <option name="SCRIPT" value="" />
+          <option name="VM_PARAMETERS" value="" />
+          <option name="PROGRAM_PARAMETERS" value="" />
+        </SHUTDOWN>
+      </ConfigurationWrapper>
+      <method v="2">
+        <option name="Make" enabled="true" />
+        <option name="BuildArtifacts" enabled="true">
+          <artifact name="LNTUPlus:exploded" />
+        </option>
+      </method>
+    </configuration>
+    <list>
+      <item itemvalue="Tomcat Server.Tomcat9" />
+      <item itemvalue="Tomcat Server.index.jsp" />
+    </list>
+    <recent_temporary>
+      <list>
+        <item itemvalue="Tomcat Server.index.jsp" />
+      </list>
+    </recent_temporary>
+  </component>
+  <component name="SvnConfiguration">
+    <configuration />
+  </component>
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="759dc6db-6f36-4e5f-9c8f-581358465c47" name="Default Changelist" comment="" />
+      <created>1549033079706</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1549033079706</updated>
+      <workItem from="1549033081841" duration="5292000" />
+      <workItem from="1549168190947" duration="48000" />
+      <workItem from="1549181795775" duration="2960000" />
+      <workItem from="1549249991025" duration="16398000" />
+      <workItem from="1549459870289" duration="5035000" />
+      <workItem from="1549532239815" duration="5216000" />
+      <workItem from="1549592734779" duration="2315000" />
+      <workItem from="1549891551907" duration="3036000" />
+      <workItem from="1549973661357" duration="11761000" />
+      <workItem from="1550062308921" duration="10461000" />
+      <workItem from="1550148921179" duration="4196000" />
+      <workItem from="1550154050378" duration="83000" />
+      <workItem from="1550296570598" duration="14283000" />
+      <workItem from="1550492118586" duration="3959000" />
+      <workItem from="1550672741506" duration="17267000" />
+      <workItem from="1550897607521" duration="31473000" />
+      <workItem from="1551096605827" duration="16563000" />
+      <workItem from="1551655136807" duration="9020000" />
+      <workItem from="1551704498882" duration="8349000" />
+      <workItem from="1551926542827" duration="23343000" />
+      <workItem from="1552116665833" duration="13082000" />
+      <workItem from="1552286789985" duration="8496000" />
+      <workItem from="1552393045050" duration="7895000" />
+      <workItem from="1552726175756" duration="29000" />
+      <workItem from="1552726239575" duration="4040000" />
+      <workItem from="1552912768774" duration="1496000" />
+      <workItem from="1552925648247" duration="2799000" />
+      <workItem from="1553083445051" duration="4324000" />
+      <workItem from="1553131850950" duration="457000" />
+      <workItem from="1553146618770" duration="3628000" />
+      <workItem from="1553321710072" duration="4683000" />
+      <workItem from="1553403757344" duration="1787000" />
+      <workItem from="1553655693419" duration="1202000" />
+      <workItem from="1553738710307" duration="28000" />
+      <workItem from="1553738772322" duration="1356000" />
+      <workItem from="1553751111562" duration="4240000" />
+      <workItem from="1553759769266" duration="5432000" />
+      <workItem from="1553823291374" duration="10517000" />
+      <workItem from="1553935564685" duration="3133000" />
+      <workItem from="1554016103980" duration="135000" />
+      <workItem from="1554016637264" duration="7829000" />
+      <workItem from="1554083818169" duration="21790000" />
+      <workItem from="1554253796704" duration="14334000" />
+      <workItem from="1554697133716" duration="4541000" />
+      <workItem from="1554719174877" duration="5349000" />
+      <workItem from="1554783309488" duration="6454000" />
+      <workItem from="1554810804702" duration="4237000" />
+      <workItem from="1554861523899" duration="1940000" />
+      <workItem from="1555224791994" duration="3790000" />
+    </task>
+    <task id="LOCAL-00001" summary="feat: first commit.&#10;&#10;Use Mybatis control DB.&#10;&#10;GaoRuiLian.">
+      <created>1550675009105</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1550675009105</updated>
+    </task>
+    <task id="LOCAL-00002" summary="feat: commit all files.&#10;&#10;Use Mybatis control DB.&#10;&#10;GaoRuiLian.">
+      <created>1550677123407</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1550677123408</updated>
+    </task>
+    <option name="localTasksCounter" value="3" />
+    <servers />
+  </component>
+  <component name="TimeTrackingManager">
+    <option name="totallyTimeSpent" value="340081000" />
+  </component>
+  <component name="TodoView">
+    <todo-panel id="selected-file">
+      <is-autoscroll-to-source value="true" />
+    </todo-panel>
+    <todo-panel id="all">
+      <are-packages-shown value="true" />
+      <is-autoscroll-to-source value="true" />
+    </todo-panel>
+  </component>
+  <component name="ToolWindowManager">
+    <frame x="0" y="23" width="2463" height="1336" extended-state="0" />
+    <editor active="true" />
+    <layout>
+      <window_info active="true" content_ui="combo" id="Project" order="0" sideWeight="0.4974925" visible="true" weight="0.12102437" />
+      <window_info id="Structure" order="1" sideWeight="0.50328225" side_tool="true" weight="0.27682403" />
+      <window_info id="Designer" order="2" />
+      <window_info id="Image Layers" order="3" />
+      <window_info id="UI Designer" order="4" />
+      <window_info id="Favorites" order="5" side_tool="true" />
+      <window_info id="Capture Tool" order="6" />
+      <window_info id="Web" order="7" sideWeight="0.5025075" side_tool="true" weight="0.1604448" />
+      <window_info anchor="bottom" id="Message" order="0" />
+      <window_info anchor="bottom" id="Find" order="1" weight="0.32786885" />
+      <window_info anchor="bottom" id="Run" order="2" sideWeight="0.49284694" visible="true" weight="0.3175241" />
+      <window_info anchor="bottom" x="0" y="560" width="2560" height="302" id="Debug" order="3" sideWeight="0.49563146" weight="0.4493569" />
+      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
+      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
+      <window_info anchor="bottom" id="TODO" order="6" weight="0.32943013" />
+      <window_info anchor="bottom" id="Application Servers" order="7" weight="0.32839838" />
+      <window_info anchor="bottom" id="Spring" order="8" />
+      <window_info anchor="bottom" id="Terminal" order="9" weight="0.32974428" />
+      <window_info anchor="bottom" id="Event Log" order="10" sideWeight="0.5071531" side_tool="true" weight="0.32080537" />
+      <window_info anchor="bottom" id="Messages" order="11" sideWeight="0.49722" weight="0.32062256" />
+      <window_info anchor="bottom" id="Java Enterprise" order="12" />
+      <window_info anchor="bottom" id="Database Changes" order="13" show_stripe_button="false" />
+      <window_info anchor="bottom" id="Version Control" order="14" />
+      <window_info anchor="bottom" id="Docker" order="15" show_stripe_button="false" />
+      <window_info anchor="bottom" id="Duplicate detector" order="16" weight="0.32885906" />
+      <window_info anchor="right" id="Commander" order="0" weight="0.4" />
+      <window_info anchor="right" id="Ant Build" order="1" weight="0.24964234" />
+      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
+      <window_info anchor="right" id="Palette" order="3" />
+      <window_info anchor="right" id="Capture Analysis" order="4" />
+      <window_info anchor="right" id="Maven Projects" order="5" weight="0.32962668" />
+      <window_info anchor="right" id="Database" order="6" weight="0.32934132" />
+      <window_info anchor="right" id="Palette&#9;" order="7" />
+      <window_info anchor="right" id="Theme Preview" order="8" />
+      <window_info anchor="right" id="Maven" order="9" weight="0.3298611" />
+    </layout>
+  </component>
+  <component name="TypeScriptGeneratedFilesManager">
+    <option name="version" value="1" />
+  </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="feat: first commit.&#10;&#10;Use Mybatis control DB.&#10;&#10;GaoRuiLian." />
+    <MESSAGE value="feat: commit all files.&#10;&#10;Use Mybatis control DB.&#10;&#10;GaoRuiLian." />
+    <option name="LAST_COMMIT_MESSAGE" value="feat: commit all files.&#10;&#10;Use Mybatis control DB.&#10;&#10;GaoRuiLian." />
+    <option name="REFORMAT_BEFORE_PROJECT_COMMIT" value="true" />
+  </component>
+  <component name="XDebuggerManager">
+    <breakpoint-manager>
+      <breakpoints>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>jar://$MAVEN_REPOSITORY$/com/github/xuwei-k/html2image/0.1.0/html2image-0.1.0-sources.jar!/gui/ava/html/image/generator/HtmlImageGenerator.java</url>
+          <line>149</line>
+          <properties />
+          <option name="timeStamp" value="1" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>jar://$MAVEN_REPOSITORY$/com/github/xuwei-k/html2image/0.1.0/html2image-0.1.0-sources.jar!/gui/ava/html/image/generator/HtmlImageGenerator.java</url>
+          <line>150</line>
+          <properties />
+          <option name="timeStamp" value="2" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>jar://$MAVEN_REPOSITORY$/com/github/xuwei-k/html2image/0.1.0/html2image-0.1.0-sources.jar!/gui/ava/html/image/generator/HtmlImageGenerator.java</url>
+          <line>151</line>
+          <properties />
+          <option name="timeStamp" value="3" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>jar://$MAVEN_REPOSITORY$/com/github/xuwei-k/html2image/0.1.0/html2image-0.1.0-sources.jar!/gui/ava/html/image/generator/HtmlImageGenerator.java</url>
+          <line>152</line>
+          <properties />
+          <option name="timeStamp" value="4" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>jar://$MAVEN_REPOSITORY$/com/github/xuwei-k/html2image/0.1.0/html2image-0.1.0-sources.jar!/gui/ava/html/image/generator/HtmlImageGenerator.java</url>
+          <line>154</line>
+          <properties />
+          <option name="timeStamp" value="5" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>jar://$MAVEN_REPOSITORY$/com/github/xuwei-k/html2image/0.1.0/html2image-0.1.0-sources.jar!/gui/ava/html/image/generator/HtmlImageGenerator.java</url>
+          <line>153</line>
+          <properties />
+          <option name="timeStamp" value="6" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>jar://$MAVEN_REPOSITORY$/com/github/xuwei-k/html2image/0.1.0/html2image-0.1.0-sources.jar!/gui/ava/html/image/generator/HtmlImageGenerator.java</url>
+          <line>44</line>
+          <properties />
+          <option name="timeStamp" value="7" />
+        </line-breakpoint>
+      </breakpoints>
+    </breakpoint-manager>
+  </component>
+  <component name="antWorkspaceConfiguration">
+    <option name="IS_AUTOSCROLL_TO_SOURCE" value="false" />
+    <option name="FILTER_TARGETS" value="false" />
+  </component>
+  <component name="editorHistoryManager">
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/utils/Constants.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="378">
+          <caret line="21" column="27" lean-forward="true" selection-start-line="21" selection-start-column="27" selection-end-line="21" selection-end-column="27" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/resources/mappers/port-mapper.xml">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="162">
+          <caret line="9" column="4" selection-start-line="9" selection-start-column="4" selection-end-line="9" selection-end-column="4" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="jar:///Library/Java/JavaVirtualMachines/jdk1.8.0_141.jdk/Contents/Home/src.zip!/java/util/Map.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="148">
+          <caret line="211" column="6" selection-start-line="211" selection-start-column="6" selection-end-line="211" selection-end-column="6" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/action/HelloAction.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="263">
+          <caret line="17" column="43" selection-start-line="17" selection-start-column="43" selection-end-line="17" selection-end-column="43" />
+          <folding>
+            <element signature="imports" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/resources/mappers/article-mapper.xml">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="234">
+          <caret line="13" column="32" selection-end-line="16" selection-end-column="9" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/utils/OkHttpUtils.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="87">
+          <caret line="105" column="62" lean-forward="true" selection-start-line="105" selection-start-column="12" selection-end-line="105" selection-end-column="62" />
+          <folding>
+            <element signature="imports" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/controller/ScoreController.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="114">
+          <caret line="31" column="86" lean-forward="true" selection-start-line="31" selection-start-column="86" selection-end-line="31" selection-end-column="86" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/model/SignModel.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="306">
+          <caret line="17" selection-start-line="17" selection-end-line="17" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/web/index.jsp">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="215">
+          <caret line="63" column="64" selection-start-line="63" selection-start-column="64" selection-end-line="63" selection-end-column="64" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/resources/mappers/notice-mapper.xml">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="199">
+          <caret line="15" column="12" lean-forward="true" selection-start-line="15" selection-start-column="12" selection-end-line="15" selection-end-column="12" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/resources/mappers/hello-mapper.xml">
+      <provider selected="true" editor-type-id="text-editor" />
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/resources/mappers/everyday-mapper.xml">
+      <provider selected="true" editor-type-id="text-editor" />
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/controller/StuInfoController.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="445">
+          <caret line="40" column="64" selection-start-line="40" selection-start-column="64" selection-end-line="40" selection-end-column="64" />
+          <folding>
+            <element signature="imports" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/model/HelloModel.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="72">
+          <caret line="4" column="13" selection-start-line="4" selection-start-column="13" selection-end-line="4" selection-end-column="13" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/controller/TableController.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="108">
+          <caret line="22" column="13" selection-start-line="22" selection-start-column="13" selection-end-line="22" selection-end-column="13" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/model/ScoreModel.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="252">
+          <caret line="16" column="21" selection-start-line="16" selection-start-column="21" selection-end-line="16" selection-end-column="21" />
+          <folding>
+            <element signature="imports" expanded="true" />
+            <element signature="e#1026#1027#0" expanded="true" />
+            <element signature="e#1062#1063#0" expanded="true" />
+            <element signature="e#1160#1161#0" expanded="true" />
+            <element signature="e#1192#1193#0" expanded="true" />
+            <element signature="e#1901#1902#0" expanded="true" />
+            <element signature="e#1932#1933#0" expanded="true" />
+            <element signature="e#2511#2512#0" expanded="true" />
+            <element signature="e#2542#2543#0" expanded="true" />
+            <element signature="e#3145#3146#0" expanded="true" />
+            <element signature="e#3176#3177#0" expanded="true" />
+            <element signature="e#3299#3300#0" expanded="true" />
+            <element signature="e#3330#3331#0" expanded="true" />
+            <element signature="e#3450#3451#0" expanded="true" />
+            <element signature="e#3481#3482#0" expanded="true" />
+            <element signature="e#3526#3527#0" expanded="true" />
+            <element signature="e#3566#3567#0" expanded="true" />
+            <element signature="e#3741#3742#0" expanded="true" />
+            <element signature="e#3772#3773#0" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="jar://$MAVEN_REPOSITORY$/org/mybatis/mybatis/3.5.0/mybatis-3.5.0.jar!/org/apache/ibatis/session/SqlSession.class">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="52">
+          <caret line="6" lean-forward="true" selection-start-line="6" selection-end-line="6" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/action/FeedbackAction.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="270">
+          <caret line="21" column="34" selection-start-line="21" selection-start-column="34" selection-end-line="21" selection-end-column="34" />
+          <folding>
+            <element signature="imports" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/controller/SignController.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="504">
+          <caret line="47" column="29" selection-start-line="47" selection-start-column="29" selection-end-line="47" selection-end-column="29" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/controller/NoticeController.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="234">
+          <caret line="32" column="11" selection-start-line="32" selection-start-column="11" selection-end-line="32" selection-end-column="11" />
+          <folding>
+            <element signature="imports" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/model/StuInfoModel.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="666">
+          <caret line="37" column="15" selection-start-line="37" selection-start-column="15" selection-end-line="37" selection-end-column="15" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/model/NoticeModel.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="36">
+          <caret line="2" column="13" selection-start-line="2" selection-start-column="13" selection-end-line="2" selection-end-column="13" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="jar:///Library/Java/JavaVirtualMachines/jdk1.8.0_141.jdk/Contents/Home/src.zip!/java/io/PrintStream.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="12528">
+          <caret line="747" column="16" selection-start-line="747" selection-start-column="16" selection-end-line="747" selection-end-column="16" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/pom.xml">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="1494">
+          <caret line="83" column="29" selection-start-line="83" selection-start-column="29" selection-end-line="83" selection-end-column="29" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/web/WEB-INF/dispatcher-servlet.xml">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="558">
+          <caret line="31" column="21" selection-start-line="31" selection-start-column="21" selection-end-line="31" selection-end-column="21" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/web/WEB-INF/applicationContext.xml">
+      <provider selected="true" editor-type-id="text-editor" />
+    </entry>
+    <entry file="jar:///Library/Java/JavaVirtualMachines/jdk1.8.0_141.jdk/Contents/Home/src.zip!/java/util/concurrent/Future.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="367">
+          <caret line="142" column="6" lean-forward="true" selection-start-line="142" selection-start-column="6" selection-end-line="142" selection-end-column="6" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/action/ExamAction.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="558">
+          <caret line="43" column="19" selection-start-line="43" selection-end-line="44" />
+          <folding>
+            <element signature="imports" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/action/TableAction.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="5616">
+          <caret line="325" column="26" selection-start-line="325" selection-start-column="26" selection-end-line="325" selection-end-column="26" />
+          <folding>
+            <element signature="imports" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/action/LoginAction.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="504">
+          <caret line="41" column="9" selection-start-line="41" selection-start-column="9" selection-end-line="41" selection-end-column="9" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/service/SaveService.java" />
+    <entry file="file://$PROJECT_DIR$/web/WEB-INF/web.xml">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="306">
+          <caret line="17" column="47" selection-start-line="17" selection-start-column="47" selection-end-line="17" selection-end-column="47" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/action/StuInfoAction.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="684">
+          <caret line="52" column="26" selection-start-line="52" selection-start-column="26" selection-end-line="52" selection-end-column="26" />
+          <folding>
+            <element signature="imports" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/resources/mybatis-config.xml">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="594">
+          <caret line="33" column="33" selection-start-line="33" selection-start-column="33" selection-end-line="33" selection-end-column="33" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/service/NoticeService.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="288">
+          <caret line="28" column="23" selection-start-line="28" selection-start-column="23" selection-end-line="28" selection-end-column="23" />
+          <folding>
+            <element signature="imports" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/action/SignAction.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="612">
+          <caret line="46" column="44" selection-start-line="46" selection-start-column="38" selection-end-line="46" selection-end-column="44" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/action/NoticeAction.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="1782">
+          <caret line="112" column="26" selection-start-line="112" selection-start-column="26" selection-end-line="112" selection-end-column="26" />
+          <folding>
+            <element signature="imports" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/action/ScoreRankAction.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="36">
+          <caret line="2" column="28" selection-start-line="2" selection-start-column="28" selection-end-line="2" selection-end-column="28" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/controller/ScoreRankController.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="126">
+          <caret line="7" column="34" lean-forward="true" selection-start-line="7" selection-start-column="34" selection-end-line="7" selection-end-column="34" />
+          <folding>
+            <element signature="imports" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/resources/mappers/sign-mapper.xml">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="288">
+          <caret line="16" selection-start-line="16" selection-end-line="16" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/controller/LoginController.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="691">
+          <caret line="129" column="72" selection-start-line="129" selection-start-column="38" selection-end-line="129" selection-end-column="72" />
+          <folding>
+            <element signature="imports" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/action/ClassRoomAction.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="90">
+          <caret line="20" column="13" selection-start-line="20" selection-start-column="13" selection-end-line="20" selection-end-column="13" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/utils/TimeUtils.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="666">
+          <caret line="41" column="27" lean-forward="true" selection-start-line="41" selection-start-column="27" selection-end-line="41" selection-end-column="27" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/service/PortService.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="274">
+          <caret line="18" column="63" selection-start-line="18" selection-start-column="63" selection-end-line="18" selection-end-column="63" />
+          <folding>
+            <element signature="imports" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/utils/DBSessionFactory.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="648">
+          <caret line="43" lean-forward="true" selection-start-line="43" selection-end-line="43" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/model/ExamModel.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="396">
+          <caret line="32" selection-start-line="32" selection-end-line="32" />
+          <folding>
+            <element signature="e#599#600#0" expanded="true" />
+            <element signature="e#626#627#0" expanded="true" />
+            <element signature="e#666#667#0" expanded="true" />
+            <element signature="e#698#699#0" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/model/GPAModel.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="72">
+          <caret line="4" column="13" selection-start-line="4" selection-start-column="13" selection-end-line="4" selection-end-column="13" />
+          <folding>
+            <element signature="e#182#183#0" expanded="true" />
+            <element signature="e#211#212#0" expanded="true" />
+            <element signature="e#255#256#0" expanded="true" />
+            <element signature="e#291#292#0" expanded="true" />
+            <element signature="e#321#322#0" expanded="true" />
+            <element signature="e#347#348#0" expanded="true" />
+            <element signature="e#385#386#0" expanded="true" />
+            <element signature="e#415#416#0" expanded="true" />
+            <element signature="e#444#445#0" expanded="true" />
+            <element signature="e#471#472#0" expanded="true" />
+            <element signature="e#509#510#0" expanded="true" />
+            <element signature="e#541#542#0" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/resources/mappers/save-mapper.xml">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="640">
+          <caret line="105" column="57" selection-start-line="105" selection-start-column="57" selection-end-line="105" selection-end-column="57" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/action/AsyncAction.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="711">
+          <caret line="51" column="27" lean-forward="true" selection-start-line="51" selection-start-column="27" selection-end-line="51" selection-end-column="27" />
+          <folding>
+            <element signature="imports" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/action/ScoreAction.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="708">
+          <caret line="41" column="43" lean-forward="true" selection-start-line="41" selection-start-column="43" selection-end-line="41" selection-end-column="43" />
+          <folding>
+            <element signature="imports" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/lntuplus/action/SaveAction.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="568">
+          <caret line="109" column="45" lean-forward="true" selection-start-line="109" selection-start-column="45" selection-end-line="109" selection-end-column="45" />
+          <folding>
+            <element signature="imports" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+  </component>
+  <component name="masterDetails">
+    <states>
+      <state key="ArtifactsStructureConfigurable.UI">
+        <settings>
+          <artifact-editor />
+          <last-edited>lntuplus</last-edited>
+          <splitter-proportions>
+            <option name="proportions">
+              <list>
+                <option value="0.26091954" />
+              </list>
+            </option>
+          </splitter-proportions>
+        </settings>
+      </state>
+      <state key="FacetStructureConfigurable.UI">
+        <settings>
+          <last-edited>Web (LNTUPlus)|Web</last-edited>
+          <splitter-proportions>
+            <option name="proportions">
+              <list>
+                <option value="0.26091954" />
+              </list>
+            </option>
+          </splitter-proportions>
+        </settings>
+      </state>
+      <state key="GlobalLibrariesConfigurable.UI">
+        <settings>
+          <splitter-proportions>
+            <option name="proportions">
+              <list>
+                <option value="0.4183908" />
+              </list>
+            </option>
+          </splitter-proportions>
+        </settings>
+      </state>
+      <state key="JdkListConfigurable.UI">
+        <settings>
+          <last-edited>1.8</last-edited>
+          <splitter-proportions>
+            <option name="proportions">
+              <list>
+                <option value="0.4183908" />
+              </list>
+            </option>
+          </splitter-proportions>
+        </settings>
+      </state>
+      <state key="ModuleStructureConfigurable.UI">
+        <settings>
+          <last-edited>LNTUPlus</last-edited>
+          <splitter-proportions>
+            <option name="proportions">
+              <list>
+                <option value="0.26091954" />
+              </list>
+            </option>
+          </splitter-proportions>
+        </settings>
+      </state>
+      <state key="ProjectJDKs.UI">
+        <settings>
+          <splitter-proportions>
+            <option name="proportions">
+              <list>
+                <option value="0.2" />
+              </list>
+            </option>
+          </splitter-proportions>
+        </settings>
+      </state>
+      <state key="ProjectLibrariesConfigurable.UI">
+        <settings>
+          <last-edited>Spring-4.3.18.RELEASE</last-edited>
+          <splitter-proportions>
+            <option name="proportions">
+              <list>
+                <option value="0.26091954" />
+              </list>
+            </option>
+          </splitter-proportions>
+        </settings>
+      </state>
+    </states>
+  </component>
+</project>
\ No newline at end of file
Index: src/main/java/com/lntuplus/model/TableModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/model/TableModel.java	(date 1555233452000)
+++ src/main/java/com/lntuplus/model/TableModel.java	(date 1555233452000)
@@ -0,0 +1,77 @@
+package com.lntuplus.model;
+
+public class TableModel {
+    private String course;
+    private String time;
+    private String teacher;
+    private String address;
+    private String singleDouble;
+    private String start;
+    private String end;
+
+    public void setNull() {
+        this.course = new String();
+        this.time = "";
+        this.teacher = "";
+        this.address = "";
+        this.singleDouble = "";
+        this.start = "";
+        this.end = "";
+    }
+
+    public String getCourse() {
+        return course;
+    }
+
+    public void setCourse(String course) {
+        this.course = course;
+    }
+
+    public String getTime() {
+        return time;
+    }
+
+    public void setTime(String time) {
+        this.time = time;
+    }
+
+    public String getTeacher() {
+        return teacher;
+    }
+
+    public void setTeacher(String teacher) {
+        this.teacher = teacher;
+    }
+
+    public String getAddress() {
+        return address;
+    }
+
+    public void setAddress(String address) {
+        this.address = address;
+    }
+
+    public String getSingleDouble() {
+        return singleDouble;
+    }
+
+    public void setSingleDouble(String singleDouble) {
+        this.singleDouble = singleDouble;
+    }
+
+    public String getStart() {
+        return start;
+    }
+
+    public void setStart(String start) {
+        this.start = start;
+    }
+
+    public String getEnd() {
+        return end;
+    }
+
+    public void setEnd(String end) {
+        this.end = end;
+    }
+}
Index: src/main/java/com/lntuplus/model/EverydayTextModel.java
===================================================================
--- src/main/java/com/lntuplus/model/EverydayTextModel.java	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ src/main/java/com/lntuplus/model/EverydayModel.java	(date 1550903088000)
@@ -1,15 +1,15 @@
 package com.lntuplus.model;
 
-public class EverydayTextModel {
-    private String title;
+public class EverydayModel {
+    private String text;
     private String author;
 
-    public String getTitle() {
-        return title;
+    public String getText() {
+        return text;
     }
 
-    public void setTitle(String title) {
-        this.title = title;
+    public void setText(String text) {
+        this.text = text;
     }
 
     public String getAuthor() {
Index: src/main/java/com/lntuplus/model/ScoreModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/model/ScoreModel.java	(date 1555233452000)
+++ src/main/java/com/lntuplus/model/ScoreModel.java	(date 1555233452000)
@@ -0,0 +1,265 @@
+package com.lntuplus.model;
+
+import java.io.Serializable;
+import java.util.Date;
+import java.util.function.DoubleBinaryOperator;
+
+public class ScoreModel implements Comparable<ScoreModel>, Serializable {
+    private String number;
+    private String course;
+    private String mode;
+    private String year;
+    private String score;
+    private double credit;
+    private String cNumber;
+    private int cNo;
+    private String examType;
+    private String properties;
+    private String remark;
+    private String delayed;
+    private String openUnit;
+    private String teacher;
+    private String scoreInfo;
+    private String normalScore;
+    private String midScore;
+    private String endScore;
+    private int examRoom;
+    private int seatNum;
+    private Date datetime;
+
+    public String getNumber() {
+        return number;
+    }
+
+    public void setNumber(String number) {
+        this.number = number;
+    }
+
+    public String getCourse() {
+        return course;
+    }
+
+    public void setCourse(String course) {
+        this.course = course;
+    }
+
+    public String getMode() {
+        return mode;
+    }
+
+    public void setMode(String mode) {
+        this.mode = mode;
+    }
+
+    public String getYear() {
+        return year;
+    }
+
+    public void setYear(String year) {
+        this.year = year;
+    }
+
+    public String getScore() {
+        return score;
+    }
+
+    public void setScore(String score) {
+        this.score = score;
+    }
+
+    public double getCredit() {
+        return credit;
+    }
+
+    public void setCredit(double credit) {
+        this.credit = credit;
+    }
+
+    public String getcNumber() {
+        return cNumber;
+    }
+
+    public void setcNumber(String cNumber) {
+        this.cNumber = cNumber;
+    }
+
+    public int getcNo() {
+        return cNo;
+    }
+
+    public void setcNo(int cNo) {
+        this.cNo = cNo;
+    }
+
+    public String getExamType() {
+        return examType;
+    }
+
+    public void setExamType(String examType) {
+        this.examType = examType;
+    }
+
+    public String getProperties() {
+        return properties;
+    }
+
+    public void setProperties(String properties) {
+        this.properties = properties;
+    }
+
+    public String getRemark() {
+        return remark;
+    }
+
+    public void setRemark(String remark) {
+        this.remark = remark;
+    }
+
+    public String getDelayed() {
+        return delayed;
+    }
+
+    public void setDelayed(String delayed) {
+        this.delayed = delayed;
+    }
+
+    public String getOpenUnit() {
+        return openUnit;
+    }
+
+    public void setOpenUnit(String openUnit) {
+        this.openUnit = openUnit;
+    }
+
+    public String getTeacher() {
+        return teacher;
+    }
+
+    public void setTeacher(String teacher) {
+        this.teacher = teacher;
+    }
+
+    public String getScoreInfo() {
+        return scoreInfo;
+    }
+
+    public void setScoreInfo(String scoreInfo) {
+        this.scoreInfo = scoreInfo;
+    }
+
+    public String getNormalScore() {
+        return normalScore;
+    }
+
+    public void setNormalScore(String normalScore) {
+        this.normalScore = normalScore;
+    }
+
+    public String getMidScore() {
+        return midScore;
+    }
+
+    public void setMidScore(String midScore) {
+        this.midScore = midScore;
+    }
+
+    public String getEndScore() {
+        return endScore;
+    }
+
+    public void setEndScore(String endScore) {
+        this.endScore = endScore;
+    }
+
+    public int getExamRoom() {
+        return examRoom;
+    }
+
+    public void setExamRoom(int examRoom) {
+        this.examRoom = examRoom;
+    }
+
+    public int getSeatNum() {
+        return seatNum;
+    }
+
+    public void setSeatNum(int seatNum) {
+        this.seatNum = seatNum;
+    }
+
+    public Date getDatetime() {
+        return datetime;
+    }
+
+    public void setDatetime(Date datetime) {
+        this.datetime = datetime;
+    }
+
+    @Override
+    public int compareTo(ScoreModel o) {
+        int yearA = Integer.parseInt(this.getYear().substring(0, 4));
+        String termA = this.getYear().substring(4);
+        double scoreA = transformScore(this.getScore());
+        int yearB = Integer.parseInt(o.getYear().substring(0, 4));
+        String termB = o.getYear().substring(4);
+        double scoreB = transformScore(o.getScore());
+        if (yearA > yearB) {
+            return -1;
+        }
+        if (yearA < yearB) {
+            return 1;
+        }
+        if (termA.equals("秋") && termB.equals("春")) {
+            return -1;
+        }
+        if (termA.equals("春") && termB.equals("秋")) {
+            return 1;
+        }
+        if (scoreA > scoreB) {
+            return -1;
+        }
+        if (scoreB > scoreA) {
+            return 1;
+        }
+        return 0;
+    }
+
+    private double transformScore(String value) {
+        double v;
+        switch (value) {
+            case "":
+                v = 0;
+                break;
+            case "优秀":
+                v = 95;
+                break;
+            case "优":
+                v = 95;
+                break;
+            case "良":
+                v = 85;
+                break;
+            case "中":
+                v = 75;
+                break;
+            case "及格":
+                v = 60;
+                break;
+            case "合格":
+                v = 85;
+                break;
+            case "不及格":
+                v = 0;
+                break;
+            case "不合格":
+                v = 0;
+                break;
+            case "实践成绩未提交":
+                v = 0;
+                break;
+            default:
+                v = Double.valueOf(value);
+        }
+        return v;
+    }
+}
Index: src/main/java/com/lntuplus/model/StuInfoModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/model/StuInfoModel.java	(date 1554368237000)
+++ src/main/java/com/lntuplus/model/StuInfoModel.java	(date 1554368237000)
@@ -0,0 +1,285 @@
+package com.lntuplus.model;
+
+import java.io.Serializable;
+
+public class StuInfoModel implements Serializable {
+    private long number;
+    private String password;
+    private String nationality;
+    private String name;
+    private String place;
+    private String engName;
+    private String birth;
+    private String typeOfID;
+    private String politicalStatus;
+    private String card;
+    private String vehicleInterval;
+    private String sex;
+    private String nation;
+    private String academic;
+    private String professional;
+    private String iClass;
+    private String stuType;
+    private String examArea;
+    private String score;
+    private String registrationNumber;
+    private String school;
+    private String languageType;
+    private String comeDate;
+    private String enrollmentType;
+    private String goDate;
+    private String trainingMode;
+    private String address;
+    private String phone;
+    private String email;
+    private String origin;
+    private String imgUrl;
+
+    public long getNumber() {
+        return number;
+    }
+
+    public void setNumber(int number) {
+        this.number = number;
+    }
+
+    public String getPassword() {
+        return password;
+    }
+
+    public void setPassword(String password) {
+        this.password = password;
+    }
+
+    public String getNationality() {
+        return nationality;
+    }
+
+    public void setNationality(String nationality) {
+        this.nationality = nationality;
+    }
+
+    public String getName() {
+        return name;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    public String getPlace() {
+        return place;
+    }
+
+    public void setPlace(String place) {
+        this.place = place;
+    }
+
+    public String getEngName() {
+        return engName;
+    }
+
+    public void setEngName(String engName) {
+        this.engName = engName;
+    }
+
+    public String getBirth() {
+        return birth;
+    }
+
+    public void setBirth(String birth) {
+        this.birth = birth;
+    }
+
+    public String getTypeOfID() {
+        return typeOfID;
+    }
+
+    public void setTypeOfID(String typeOfID) {
+        this.typeOfID = typeOfID;
+    }
+
+    public String getPoliticalStatus() {
+        return politicalStatus;
+    }
+
+    public void setPoliticalStatus(String politicalStatus) {
+        this.politicalStatus = politicalStatus;
+    }
+
+    public String getCard() {
+        return card;
+    }
+
+    public void setCard(String card) {
+        this.card = card;
+    }
+
+    public String getVehicleInterval() {
+        return vehicleInterval;
+    }
+
+    public void setVehicleInterval(String vehicleInterval) {
+        this.vehicleInterval = vehicleInterval;
+    }
+
+    public String getSex() {
+        return sex;
+    }
+
+    public void setSex(String sex) {
+        this.sex = sex;
+    }
+
+    public String getNation() {
+        return nation;
+    }
+
+    public void setNation(String nation) {
+        this.nation = nation;
+    }
+
+    public String getAcademic() {
+        return academic;
+    }
+
+    public void setAcademic(String academic) {
+        this.academic = academic;
+    }
+
+    public String getProfessional() {
+        return professional;
+    }
+
+    public void setProfessional(String professional) {
+        this.professional = professional;
+    }
+
+    public String getiClass() {
+        return iClass;
+    }
+
+    public void setiClass(String iClass) {
+        this.iClass = iClass;
+    }
+
+    public String getStuType() {
+        return stuType;
+    }
+
+    public void setStuType(String stuType) {
+        this.stuType = stuType;
+    }
+
+    public String getExamArea() {
+        return examArea;
+    }
+
+    public void setExamArea(String examArea) {
+        this.examArea = examArea;
+    }
+
+    public String getScore() {
+        return score;
+    }
+
+    public void setScore(String score) {
+        this.score = score;
+    }
+
+    public String getRegistrationNumber() {
+        return registrationNumber;
+    }
+
+    public void setRegistrationNumber(String registrationNumber) {
+        this.registrationNumber = registrationNumber;
+    }
+
+    public String getSchool() {
+        return school;
+    }
+
+    public void setSchool(String school) {
+        this.school = school;
+    }
+
+    public String getLanguageType() {
+        return languageType;
+    }
+
+    public void setLanguageType(String languageType) {
+        this.languageType = languageType;
+    }
+
+    public String getComeDate() {
+        return comeDate;
+    }
+
+    public void setComeDate(String comeDate) {
+        this.comeDate = comeDate;
+    }
+
+    public String getEnrollmentType() {
+        return enrollmentType;
+    }
+
+    public void setEnrollmentType(String enrollmentType) {
+        this.enrollmentType = enrollmentType;
+    }
+
+    public String getGoDate() {
+        return goDate;
+    }
+
+    public void setGoDate(String goDate) {
+        this.goDate = goDate;
+    }
+
+    public String getTrainingMode() {
+        return trainingMode;
+    }
+
+    public void setTrainingMode(String trainingMode) {
+        this.trainingMode = trainingMode;
+    }
+
+    public String getAddress() {
+        return address;
+    }
+
+    public void setAddress(String address) {
+        this.address = address;
+    }
+
+    public String getPhone() {
+        return phone;
+    }
+
+    public void setPhone(String phone) {
+        this.phone = phone;
+    }
+
+    public String getEmail() {
+        return email;
+    }
+
+    public void setEmail(String email) {
+        this.email = email;
+    }
+
+    public String getOrigin() {
+        return origin;
+    }
+
+    public void setOrigin(String origin) {
+        this.origin = origin;
+    }
+
+    public String getImgUrl() {
+        return imgUrl;
+    }
+
+    public void setImgUrl(String imgUrl) {
+        this.imgUrl = imgUrl;
+    }
+}
Index: src/main/java/com/lntuplus/action/AsyncAction.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/action/AsyncAction.java	(date 1555233452000)
+++ src/main/java/com/lntuplus/action/AsyncAction.java	(date 1555233452000)
@@ -0,0 +1,72 @@
+package com.lntuplus.action;
+
+import com.lntuplus.model.ExamModel;
+import com.lntuplus.model.StuInfoModel;
+import com.lntuplus.model.TableModel;
+import com.lntuplus.utils.Constants;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.scheduling.annotation.Async;
+import org.springframework.scheduling.annotation.AsyncResult;
+import org.springframework.stereotype.Service;
+
+import java.util.List;
+import java.util.Map;
+import java.util.concurrent.Future;
+
+@Service
+public class AsyncAction {
+
+    @Autowired
+    private SaveAction mSaveAction;
+
+    @Async
+    public Future<Map<String, Object>> getStuInfo(String port, String session, String password) {
+        System.out.println("获取学生信息..");
+        Map<String, Object> stuInfoMap = new StuInfoAction().get(port, session);
+        if (stuInfoMap.get(Constants.STRING_SUCCESS).equals(Constants.STRING_SUCCESS)) {
+            StuInfoModel stuInfoData = (StuInfoModel) stuInfoMap.get(Constants.STRING_DATA);
+            stuInfoData.setPassword(password);
+            mSaveAction.saveStuInfo(stuInfoData);
+        }
+        System.out.println("获取学生信息完毕");
+        return new AsyncResult<>(stuInfoMap);
+    }
+
+    @Async
+    public Future<Map<String, Object>> getScore(String port, String session, String number) {
+        System.out.println("获取学生成绩..");
+        Map<String, Object> scoreMap = new ScoreAction().get(port, session, number);
+        if (scoreMap.get(Constants.STRING_SUCCESS).equals(Constants.STRING_SUCCESS)) {
+            List<Map<String, Object>> scoreData = (List<Map<String, Object>>) scoreMap.get(Constants.STRING_DATA);
+            double gpa = (double) scoreMap.get(Constants.STRING_GPA);
+            mSaveAction.saveScore(scoreData);
+            mSaveAction.saveGPA(number, gpa);
+        }
+        System.out.println("获取学生成绩完毕");
+        return new AsyncResult<>(scoreMap);
+    }
+
+    @Async
+    public Future<Map<String, Object>> getExam(String port, String session, String number) {
+        System.out.println("获取学生考试..");
+        Map<String, Object> examMap = new ExamAction().get(port, session, number);
+        if (examMap.get(Constants.STRING_SUCCESS).equals(Constants.STRING_SUCCESS)) {
+            List<ExamModel> examData = (List<ExamModel>) examMap.get(Constants.STRING_DATA);
+            mSaveAction.saveExam(examData);
+        }
+        System.out.println("获取学生考试完毕");
+        return new AsyncResult<>(examMap);
+    }
+
+    @Async
+    public Future<Map<String, Object>> getTable(String port, String session) {
+        System.out.println("获取学生课表..");
+        Map<String, Object> tableMap = new TableAction().get(port, session);
+        if (tableMap.get(Constants.STRING_SUCCESS).equals(Constants.STRING_SUCCESS)) {
+
+        }
+        List<List<List<TableModel>>> tableData = (List<List<List<TableModel>>>) tableMap.get(Constants.STRING_DATA);
+        System.out.println("获取学生课表完毕");
+        return new AsyncResult<>(tableMap);
+    }
+}
Index: src/main/java/com/lntuplus/action/GetMessages.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/action/GetMessages.java	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ src/main/java/com/lntuplus/action/GetMessages.java	(date 1555233452000)
@@ -13,7 +13,10 @@
 import java.util.Queue;
 import java.util.concurrent.TimeUnit;
 
+import com.lntuplus.model.ExamModel;
 import com.lntuplus.utils.ComBean;
+import com.lntuplus.utils.OkHttpUtils;
+import com.lntuplus.utils.TimeUtils;
 import okhttp3.Call;
 import okhttp3.FormBody.Builder;
 import okhttp3.Headers;
@@ -58,16 +61,19 @@
     private String forumShow = "1";
     private List lineHeight = new ArrayList();
 
+    private OkHttpUtils mOkHttpUtils;
+
     public GetMessages(String number, String password) {
+        mOkHttpUtils = OkHttpUtils.getInstance();
         this.number = number;
         this.password = password;
-        ip = choosePort();
+        ip = mOkHttpUtils.getUseablePort();
         if (ip.equals("session")) {
             success = "session";
             return;
         }
-        addIP();
-        session = getSessionId();
+        jointUrl();
+        session = mOkHttpUtils.getSession(sessionUrl);
         if (success.equals("session")) {
             return;
         }
@@ -110,7 +116,7 @@
         }
     }
 
-    private void addIP() {
+    private void jointUrl() {
         // TODO Auto-generated method stub
         sessionUrl = ip + "/common/security/check1.jsp";
         loginUrl = ip + "/j_acegi_security_check";
@@ -121,72 +127,6 @@
         checkUrl = ip + "/frameset.jsp";
     }
 
-    private String choosePort() {
-        OkHttpClient client = new OkHttpClient().newBuilder().connectTimeout(2, TimeUnit.SECONDS)// 设置连接超时时间
-                .readTimeout(2, TimeUnit.SECONDS)// 设置读取超时时间
-                .build();
-        ;
-        String jsessionid = null;
-        Request request = new Request.Builder().url(ip1 + "/common/security/check1.jsp").build();
-        Call call = client.newCall(request);
-        try {
-            Response resp = call.execute();
-            if (resp.isSuccessful()) {
-                System.out.println("接口1测试可用！");
-                resp.close();
-                return ip1;
-            } else {
-                System.out.println("接口1获取Session失败，测试接口2...");
-                OkHttpClient client1 = new OkHttpClient().newBuilder().connectTimeout(2, TimeUnit.SECONDS)// 设置连接超时时间
-                        .readTimeout(2, TimeUnit.SECONDS)// 设置读取超时时间
-                        .build();
-                Request request1 = new Request.Builder().url(ip2 + "/common/security/check1.jsp").build();
-                Call call1 = client1.newCall(request1);
-                try {
-                    Response resp1 = call.execute();
-                    if (resp1.isSuccessful()) {
-                        System.out.println("接口2测试可用！");
-                        resp.close();
-                        resp1.close();
-                        return ip2;
-                    } else {
-                        resp.close();
-                        resp1.close();
-                        return "session";
-                    }
-                } catch (IOException e1) {
-                    resp.close();
-                    System.out.println("接口2获取Session失败，教务在线爆炸！");
-                    return "session";
-                }
-            }
-
-        } catch (IOException e1) {
-            System.out.println("接口1获取Session失败，测试接口2...");
-            OkHttpClient client1 = new OkHttpClient().newBuilder().connectTimeout(2, TimeUnit.SECONDS)// 设置连接超时时间
-                    .readTimeout(2, TimeUnit.SECONDS)// 设置读取超时时间
-                    .build();
-            ;
-            ;
-            Request request1 = new Request.Builder().url(ip2 + "/common/security/check1.jsp").build();
-            Call call1 = client1.newCall(request1);
-            try {
-                Response resp1 = call1.execute();
-                if (resp1.isSuccessful()) {
-                    System.out.println("接口2测试可用！");
-                    resp1.close();
-                    return ip2;
-                } else {
-                    resp1.close();
-                    return "session";
-                }
-            } catch (IOException e2) {
-                System.out.println("接口2获取Session失败，教务在线爆炸！");
-                return "session";
-            }
-        }
-    }
-
     private String getAllTable(String html) {
         Document document = Jsoup.parse(html);
         String input = document.getElementsByTag("input").get(0).attr("onClick");
@@ -212,94 +152,94 @@
         return forumShow;
     }
 
-    public boolean getInfo(String number, String password) throws IOException {
-        this.number = number;
-        this.password = password;
-        session = getSessionId();
-        if (success.equals("session")) {
-            return false;
-        }
-        System.out.println(session);
-        String loginReturn = loginPost();
-        if (loginReturn == null) {
-            success = "connect";
-            System.out.println("connectError");
-            return false;
-        }
-        if (!passwordCheck(loginReturn).booleanValue()) {
-            success = "password";
-            System.out.println("passwordError");
-            return false;
-        }
-        String checkReturn = getInfo(checkUrl);
-        String examReturn = null;
-        String scoreReturn = null;
-        String infoReturn = null;
-        String tableReturn = null;
-        if (success.equals("true")) {
-            infoReturn = getInfo(stuInfoUrl);
-        }
-        if (success.equals("true")) {
-            examReturn = getInfo(examUrl);
-        }
-        if (success.equals("true")) {
-            scoreReturn = getInfo(scoreUrl);
-        }
-        if (success.equals("true")) {
-            tableReturn = getInfo(tableUrl);
-        }
-        if (success.equals("true")) {
-            parseStuInfo(infoReturn);
-            parseExam(examReturn);
-            parseScore(scoreReturn);
-            parseTable(tableReturn);
-        }
-        return true;
-    }
-
-    public void getStuInfo() {
-        this.number = number;
-        this.password = password;
-        session = getSessionId();
-        if (success.equals("connect")) {
-            return;
-        }
-        System.out.println(session);
-        String loginReturn = loginPost();
-        if (loginReturn == null) {
-            success = "connect";
-            System.out.println("connectError");
-            return;
-        }
-        if (!passwordCheck(loginReturn).booleanValue()) {
-            success = "password";
-            System.out.println("passwordError");
-            return;
-        }
-        String checkReturn = getInfo(checkUrl);
-        String examReturn = null;
-        String scoreReturn = null;
-        String infoReturn = null;
-        String tableReturn = null;
-        if (success.equals("true")) {
-            infoReturn = getInfo(stuInfoUrl);
-        }
-        if (success.equals("true")) {
-            examReturn = getInfo(examUrl);
-        }
-        if (success.equals("true")) {
-            scoreReturn = getInfo(scoreUrl);
-        }
-        if (success.equals("true")) {
-            tableReturn = getInfo(tableUrl);
-        }
-        if (success.equals("true")) {
-            parseStuInfo(infoReturn);
-            parseExam(examReturn);
-            parseScore(scoreReturn);
-            parseTable(tableReturn);
-        }
-    }
+//    public boolean getInfo(String number, String password) throws IOException {
+//        this.number = number;
+//        this.password = password;
+//        session = getSessionId();
+//        if (success.equals("session")) {
+//            return false;
+//        }
+//        System.out.println(session);
+//        String loginReturn = loginPost();
+//        if (loginReturn == null) {
+//            success = "connect";
+//            System.out.println("connectError");
+//            return false;
+//        }
+//        if (!passwordCheck(loginReturn).booleanValue()) {
+//            success = "password";
+//            System.out.println("passwordError");
+//            return false;
+//        }
+//        String checkReturn = getInfo(checkUrl);
+//        String examReturn = null;
+//        String scoreReturn = null;
+//        String infoReturn = null;
+//        String tableReturn = null;
+//        if (success.equals("true")) {
+//            infoReturn = getInfo(stuInfoUrl);
+//        }
+//        if (success.equals("true")) {
+//            examReturn = getInfo(examUrl);
+//        }
+//        if (success.equals("true")) {
+//            scoreReturn = getInfo(scoreUrl);
+//        }
+//        if (success.equals("true")) {
+//            tableReturn = getInfo(tableUrl);
+//        }
+//        if (success.equals("true")) {
+//            parseStuInfo(infoReturn);
+//            parseExam(examReturn);
+//            parseScore(scoreReturn);
+//            parseTable(tableReturn);
+//        }
+//        return true;
+//    }
+//
+//    public void getStuInfo() {
+//        this.number = number;
+//        this.password = password;
+//        session = getSessionId();
+//        if (success.equals("connect")) {
+//            return;
+//        }
+//        System.out.println(session);
+//        String loginReturn = loginPost();
+//        if (loginReturn == null) {
+//            success = "connect";
+//            System.out.println("connectError");
+//            return;
+//        }
+//        if (!passwordCheck(loginReturn).booleanValue()) {
+//            success = "password";
+//            System.out.println("passwordError");
+//            return;
+//        }
+//        String checkReturn = getInfo(checkUrl);
+//        String examReturn = null;
+//        String scoreReturn = null;
+//        String infoReturn = null;
+//        String tableReturn = null;
+//        if (success.equals("true")) {
+//            infoReturn = getInfo(stuInfoUrl);
+//        }
+//        if (success.equals("true")) {
+//            examReturn = getInfo(examUrl);
+//        }
+//        if (success.equals("true")) {
+//            scoreReturn = getInfo(scoreUrl);
+//        }
+//        if (success.equals("true")) {
+//            tableReturn = getInfo(tableUrl);
+//        }
+//        if (success.equals("true")) {
+//            parseStuInfo(infoReturn);
+//            parseExam(examReturn);
+//            parseScore(scoreReturn);
+//            parseTable(tableReturn);
+//        }
+//    }
 
     public int getCountExam() {
         return countExam;
@@ -436,18 +376,18 @@
 //					System.out.println("该新生尚未填写必填信息:"+number);
 //					return data;
 //				}
-                Evaluate evaluate = new Evaluate(number, password, session, ip);
-
-                if (evaluate.getSuccess().equals("success")) {
-                    return getInfo(scoreUrl);
-                } else if (evaluate.getSuccess().equals("newStuNoInfo")) {
-                    this.success = "newStuNoInfo";
-                    System.out.println("该新生尚未填写必填信息:" + number);
-                    return data;
-                } else {
-                    System.out.println("评课失败，学号：" + number);
-                }
-                resp.close();
+//                Evaluate evaluate = new Evaluate(number, password, session, ip);
+//
+//                if (evaluate.getSuccess().equals("success")) {
+//                    return getInfo(scoreUrl);
+//                } else if (evaluate.getSuccess().equals("newStuNoInfo")) {
+//                    this.success = "newStuNoInfo";
+//                    System.out.println("该新生尚未填写必填信息:" + number);
+//                    return data;
+//                } else {
+//                    System.out.println("评课失败，学号：" + number);
+//                }
+//                resp.close();
             }
             if (resp.isSuccessful()) {
                 data = resp.body().string();
@@ -487,33 +427,6 @@
         }
         resp.close();
         return data;
-
-    }
-
-    public String getSessionId() {
-        OkHttpClient client = new OkHttpClient();
-        String jsessionid = null;
-        Request request = new Request.Builder().url(sessionUrl).build();
-
-        Call call = client.newCall(request);
-        try {
-            Response resp = call.execute();
-            if (resp.isSuccessful()) {
-                Response data = resp;
-                Headers headers = data.headers();
-                List<String> cookies = headers.values("Set-Cookie");
-                String session = (String) cookies.get(0);
-                jsessionid = session.substring(0, session.indexOf(";"));
-            } else {
-                success = "session";
-                System.out.println("获取sessionid失败！");
-            }
-            resp.close();
-        } catch (IOException e1) {
-            success = "session";
-            System.out.println("连接超时，获取seeionid失败！");
-        }
-        return jsessionid;
     }
 
     public void parseStuInfo(String Html) {
@@ -859,22 +772,15 @@
         SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
         String nowDay = df.format(day);
         for (int i = 1; i < trs.size(); i++) {
+            ExamModel examModel = new ExamModel();
             Element e = trs.get(i);
-
             Elements tds = e.getElementsByTag("td");
-            examData[(i - 1)][0] = (tds.get(0)).text();
-            examData[(i - 1)][1] = (tds.get(1)).text().toString().substring(0,
-                    (tds.get(1)).text().toString().indexOf(" "));
-            examData[(i - 1)][2] = (tds.get(1)).text().toString()
-                    .substring((tds.get(1)).text().toString().indexOf(" ") + 1, (tds.get(1)).text().length());
-            examData[(i - 1)][3] = (tds.get(2)).text();
-            try {
-                examData[(i - 1)][4] = getDays(examData[(i - 1)][1], nowDay) + "";
-                examData[(i - 1)][5] = getWeek(examData[(i - 1)][1]);
-            } catch (Exception e1) {
-                e1.printStackTrace();
-            }
+            examModel.setCourse(tds.get(0).text());
+            examModel.setDate(tds.get(1).text().substring(0, tds.get(1).text().indexOf(" ")));
+            examModel.setTime(tds.get(1).text().substring((tds.get(1)).text().indexOf(" ") + 1, (tds.get(1)).text().length() - 1));
+            examModel.setAddress(tds.get(2).text());
         }
+
         for (int j = 0; j < examData.length - 1; j++) {
             for (int k = 0; k < examData.length - 1 - j; k++) {
                 if (Integer.valueOf(examData[k][4]) == Integer.valueOf(examData[(k + 1)][4])) {
Index: src/main/java/com/lntuplus/action/Feedback.java
===================================================================
--- src/main/java/com/lntuplus/action/Feedback.java	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ src/main/java/com/lntuplus/action/FeedbackAction.java	(date 1555233452000)
@@ -1,47 +1,32 @@
 package com.lntuplus.action;
 
-import java.text.SimpleDateFormat;
-import java.util.Date;
-import java.util.HashMap;
-import java.util.Map;
-
-import javax.servlet.http.HttpServletRequest;
-import javax.servlet.http.HttpServletResponse;
-
 import com.lntuplus.utils.ComBean;
+import com.lntuplus.utils.Constants;
 import com.lntuplus.utils.TimeUtils;
-import org.springframework.stereotype.Controller;
-import org.springframework.web.bind.annotation.RequestMapping;
-import org.springframework.web.bind.annotation.ResponseBody;
+
+import javax.servlet.http.HttpServletRequest;
+import java.util.HashMap;
+import java.util.Map;
 
-@Controller
-@RequestMapping({"/Feedback"})
-public class Feedback {
+
+public class FeedbackAction {
     private String success = "true";
-    private Map response = new HashMap();
 
-    @ResponseBody
-    @RequestMapping({"/post"})
-    public Object post(HttpServletRequest req, HttpServletResponse resp) {
-        String number = req.getParameter("number");
-        String text = req.getParameter("text");
-        String qq = req.getParameter("qq");
+    public Map<String, String> post(String number, String text, String qq) {
+        Map<String, String> map = new HashMap<>();
         ComBean cBean = new ComBean();
-        Date now = new Date();
-        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
-        String dateTime = df.format(now);
-        int flag = cBean.comUp("insert into feedback values('" + number + "','" + qq + "','" + text + "','" + new TimeUtils().getTime() + "','" + 0 + "');");
+        int flag = cBean.comUp("insert into feedback values('" + number + "','" + qq + "','" + text + "','" + TimeUtils.getTime() + "','" + 0 + "');");
         if (flag != 1) {
             success = "saveError";
-            response.put("success", success);
+            map.put(Constants.STRING_SUCCESS, success);
             System.out.println(number + "反馈信息保存失败");
-            return response;
+            return map;
         } else {
             success = "true";
-            response.put("success", success);
+            map.put(Constants.STRING_SUCCESS, Constants.STRING_SUCCESS);
             System.out.println("学号:" + number + ",QQ:" + qq + "反馈信息已保存");
             System.out.println(text);
-            return response;
+            return map;
         }
     }
 }
Index: src/main/java/com/lntuplus/action/EverydayTextAction.java
===================================================================
--- src/main/java/com/lntuplus/action/EverydayTextAction.java	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ src/main/java/com/lntuplus/action/EverydayAction.java	(date 1550911575000)
@@ -1,19 +1,17 @@
 package com.lntuplus.action;
 
-import java.util.List;
+import com.lntuplus.model.EverydayModel;
+import com.lntuplus.utils.DBSessionFactory;
+import org.apache.ibatis.session.SqlSession;
+import org.apache.ibatis.session.SqlSessionFactory;
 
-import com.lntuplus.model.EverydayTextModel;
-import com.lntuplus.utils.ComBean;
+public class EverydayAction {
 
-public class EverydayTextAction {
-
-    public EverydayTextModel get() {
-        EverydayTextModel everydayTextModel = new EverydayTextModel();
-        ComBean cBean = new ComBean();
-        List textList = cBean.get1Com("select * from everydayText;", 2);
-        everydayTextModel.setTitle(textList.get(0).toString());
-        everydayTextModel.setAuthor(textList.get(1).toString());
-        System.out.print(everydayTextModel.toString());
-        return everydayTextModel;
+    public EverydayModel get() {
+        SqlSessionFactory sqlSessionFactory = DBSessionFactory.getInstance();
+        SqlSession sqlSession = sqlSessionFactory.openSession();
+        EverydayModel everydayModel = sqlSession.selectOne("EverydayMapper.select");
+        sqlSession.close();
+        return everydayModel;
     }
 }
Index: .idea/artifacts/LNTUPlus_war_exploded.xml
===================================================================
--- .idea/artifacts/LNTUPlus_war_exploded.xml	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ .idea/artifacts/LNTUPlus_exploded.xml	(date 1553761829000)
@@ -1,6 +1,6 @@
 <component name="ArtifactManager">
-  <artifact type="exploded-war" name="LNTUPlus:war exploded">
-    <output-path>$PROJECT_DIR$/out/artifacts/LNTUPlus_war_exploded</output-path>
+  <artifact type="exploded-war" name="LNTUPlus:exploded">
+    <output-path>$PROJECT_DIR$/out/artifacts/LNTUPlus_exploded</output-path>
     <root id="root">
       <element id="directory" name="WEB-INF">
         <element id="directory" name="classes">
@@ -20,11 +20,19 @@
           <element id="library" level="project" name="Maven: commons-beanutils:commons-beanutils:1.9.3" />
           <element id="library" level="project" name="Maven: commons-logging:commons-logging:1.2" />
           <element id="library" level="project" name="Maven: commons-collections:commons-collections:3.2.2" />
-          <element id="library" level="project" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.9.8" />
           <element id="library" level="project" name="Maven: com.fasterxml.jackson.core:jackson-core:2.9.8" />
           <element id="library" level="project" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.9.8" />
           <element id="library" level="project" name="Maven: com.google.code.gson:gson:2.8.5" />
           <element id="library" level="project" name="Maven: org.mybatis:mybatis:3.5.0" />
+          <element id="library" level="project" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.9.0" />
+          <element id="library" level="project" name="Maven: org.apache.logging.log4j:log4j-api:2.11.2" />
+          <element id="library" level="project" name="Maven: org.apache.logging.log4j:log4j-core:2.11.2" />
+          <element id="library" level="project" name="Maven: com.mchange:c3p0:0.9.5.2" />
+          <element id="library" level="project" name="Maven: com.mchange:mchange-commons-java:0.2.11" />
+          <element id="library" level="project" name="Maven: com.zaxxer:HikariCP-java6:2.3.13" />
+          <element id="library" level="project" name="Maven: org.quartz-scheduler:quartz:2.3.0" />
+          <element id="library" level="project" name="Maven: org.slf4j:slf4j-api:1.7.7" />
+          <element id="library" level="project" name="Maven: com.github.xuwei-k:html2image:0.1.0" />
         </element>
       </element>
       <element id="javaee-facet-resources" facet="LNTUPlus/web/Web" />
Index: src/main/java/com/lntuplus/action/ExamAction.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/action/ExamAction.java	(date 1555233452000)
+++ src/main/java/com/lntuplus/action/ExamAction.java	(date 1555233452000)
@@ -0,0 +1,82 @@
+package com.lntuplus.action;
+
+import com.lntuplus.model.ExamModel;
+import com.lntuplus.utils.Constants;
+import com.lntuplus.utils.OkHttpUtils;
+import com.lntuplus.utils.TimeUtils;
+import okhttp3.Call;
+import okhttp3.Response;
+import org.jsoup.Jsoup;
+import org.jsoup.nodes.Document;
+import org.jsoup.nodes.Element;
+import org.jsoup.select.Elements;
+
+import java.io.IOException;
+import java.util.*;
+
+public class ExamAction {
+
+    private String mExamUrl = "/student/exam/index.jsdo?groupId=&moduleId=2030";
+    private int mNumber;
+    private Call mCall;
+    private Response mResponse;
+    private Map<String, Object> map = new HashMap<>();
+
+    public Map<String, Object> get(String port, String session, String number) {
+        this.mNumber = Integer.valueOf(number);
+        mExamUrl = port + mExamUrl;
+        mCall = OkHttpUtils.getInstance().getInfoCall(mExamUrl, session);
+        try {
+            mResponse = mCall.execute();
+            if (mResponse.isSuccessful()) {
+                String html = mResponse.body().string();
+                mResponse.close();
+                List<ExamModel> list = parseExam(html);
+                map.put(Constants.STRING_SUCCESS, Constants.STRING_SUCCESS);
+                map.put(Constants.STRING_DATA, list);
+                return map;
+            } else {
+                map.put(Constants.STRING_SUCCESS, Constants.STRING_FAILED);
+            }
+        } catch (IOException e1) {
+            map.put(Constants.STRING_SUCCESS, Constants.STRING_ERROR);
+        }
+        mResponse.close();
+        return map;
+    }
+
+    private List<ExamModel> parseExam(String Html) {
+        Document document = Jsoup.parse(Html);
+        Element element = document.getElementsByClass("infolist_tab").get(0);
+        Elements trs = element.getElementsByTag("tr");
+        List<ExamModel> list = new ArrayList<>();
+        List<ExamModel> beforeList = new ArrayList<>();
+        List<ExamModel> afterList = new ArrayList<>();
+        if (trs.size() == 1) {
+            return new ArrayList<>();
+        }
+        for (int i = 1; i < trs.size(); i++) {
+            Element e = trs.get(i);
+            Elements tds = e.getElementsByTag("td");
+            ExamModel examModel = new ExamModel();
+            examModel.setNumber(mNumber);
+            examModel.setCourse(tds.get(0).text());
+            examModel.setDateTime(TimeUtils.toDate(tds.get(1).text().substring(0, 16)));
+            examModel.setDate(tds.get(1).text().substring(0, tds.get(1).text().indexOf(" ")));
+            examModel.setTime(tds.get(1).text().substring(tds.get(1).text().indexOf(" ") + 1));
+            Date date = new Date();
+            if (date.after(examModel.getDateTime())) {
+                beforeList.add(examModel);
+            } else {
+                afterList.add(examModel);
+            }
+            examModel.setAddress(tds.get(2).text());
+        }
+        Collections.sort(beforeList);
+        Collections.sort(afterList);
+        Collections.reverse(afterList);
+        list.addAll(afterList);
+        list.addAll(beforeList);
+        return list;
+    }
+}
Index: .idea/artifacts/lntuplus.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/artifacts/lntuplus.xml	(date 1553761829000)
+++ .idea/artifacts/lntuplus.xml	(date 1553761829000)
@@ -0,0 +1,14 @@
+<component name="ArtifactManager">
+  <artifact type="war" build-on-make="true" name="lntuplus">
+    <output-path>$PROJECT_DIR$/out/artifacts/lntuplus</output-path>
+    <root id="archive" name="lntuplus.war">
+      <element id="artifact" artifact-name="LNTUPlus:exploded" />
+      <element id="dir-copy" path="$PROJECT_DIR$/web" />
+      <element id="directory" name="WEB-INF">
+        <element id="directory" name="lib">
+          <element id="library" level="project" name="Maven: com.github.xuwei-k:html2image:0.1.0" />
+        </element>
+      </element>
+    </root>
+  </artifact>
+</component>
\ No newline at end of file
Index: src/main/java/com/lntuplus/action/ArticleAction.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/action/ArticleAction.java	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ src/main/java/com/lntuplus/action/ArticleAction.java	(date 1555233452000)
@@ -1,26 +1,26 @@
 package com.lntuplus.action;
 
-import com.google.gson.Gson;
+import com.lntuplus.model.ActivityModel;
 import com.lntuplus.model.ArticleModel;
-import com.lntuplus.utils.JDBCUtils;
+import com.lntuplus.utils.DBSessionFactory;
+import org.apache.ibatis.session.SqlSession;
+import org.apache.ibatis.session.SqlSessionFactory;
 
+import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 
 public class ArticleAction {
 
-    public ArticleModel get() {
-        ArticleModel articleModel = new ArticleModel();
-        List<Map<String, Object>> activityMainList = JDBCUtils.list("select * from activitys order by updateTime desc");
-        if (activityMainList.size() > 0) {
-            articleModel.setData(activityMainList);
-            articleModel.setSuccess("success");
-            System.out.println("文章更新成功");
-        } else {
-            articleModel.setSuccess("none");
-            System.out.println("暂无文章！");
-        }
-
-        return articleModel;
+    public Map<String, Object> get() {
+        SqlSessionFactory sqlSessionFactory = DBSessionFactory.getInstance();
+        SqlSession sqlSession = sqlSessionFactory.openSession();
+        Map<String, Object> map = new HashMap<>();
+        List<ArticleModel> article = sqlSession.selectList("ArticleMapper.article");
+        map.put("article", article);
+        List<ActivityModel> activity = sqlSession.selectList("ArticleMapper.activity");
+        map.put("activity", activity);
+        sqlSession.close();
+        return map;
     }
 }
Index: src/main/java/com/lntuplus/action/SchoolNoticeAction.java
===================================================================
--- src/main/java/com/lntuplus/action/SchoolNoticeAction.java	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ src/main/java/com/lntuplus/action/NoticeAction.java	(date 1555233452000)
@@ -1,9 +1,8 @@
 package com.lntuplus.action;
 
-import com.lntuplus.model.SchoolNoticeModel;
+import com.lntuplus.utils.Constants;
+import com.lntuplus.utils.OkHttpUtils;
 import okhttp3.Call;
-import okhttp3.OkHttpClient;
-import okhttp3.Request;
 import okhttp3.Response;
 import org.jsoup.Jsoup;
 import org.jsoup.nodes.Document;
@@ -16,130 +15,110 @@
 import java.util.List;
 import java.util.Map;
 
-public class SchoolNoticeAction {
-    private static String mOptionUrl = "http://202.199.224.121:8090";
-    private static String mNoticeUrl = "http://202.199.224.121:8090/lntu/pub_message/messagesplitepageopenwindow.jsp?&fid=5100&curid=5100&curformat=c&cursort=c&fmodulecode=5100&modulecode=5100&messagefid=5100&pageformat=pagesplite&oderitem=&seq=&topage=";
-    private static String mItemUrl = "http://202.199.224.121:8090/lntu/";
-    private static OkHttpClient mClient;
+public class NoticeAction {
+
+    private static String mNoticeUrl = "http://jwzx.lntu.edu.cn";
+//    private static String mNoticeUrl = "http://202.199.224.121:8090/lntu/pub_message/messagesplitepageopenwindow.jsp?&fid=5100&curid=5100&curformat=c&cursort=c&fmodulecode=5100&modulecode=5100&messagefid=5100&pageformat=pagesplite&oderitem=&seq=&topage=";
+//    private static String mItemUrl = "http://202.199.224.121:8090/lntu/";
 
-    public SchoolNoticeModel get() {
-        SchoolNoticeModel schoolNoticeModel = new SchoolNoticeModel();
-        for (int i = 1; i <= 10; i++) {
-            schoolNoticeModel.addNoticeMain(requestMainPage(schoolNoticeModel, mNoticeUrl + i));
+    public List<Map> get() {
+        List<Map> list = requestMainPage(mNoticeUrl);
+        if (list == null) {
+            return null;
         }
-        schoolNoticeModel.setHashcode();
-        return schoolNoticeModel;
+        return list;
     }
 
-    private List<Map> requestMainPage(SchoolNoticeModel schoolNoticeModel, String url) {
-        if (mClient == null) {
-            mClient = new OkHttpClient();
-        }
-        Request request = new Request.Builder().url(url).build();
-        Call call = mClient.newCall(request);
+    private List<Map> requestMainPage(String url) {
+        Map<String, String> map = new HashMap<>();
+        Call call = OkHttpUtils.getInstance().getExecuteCall(url);
         String data;
         try {
             Response response = call.execute();
             if (response.isSuccessful()) {
                 data = response.body().string();
                 List<Map> noticeList = parseNotice(data);
-                schoolNoticeModel.setSuccess("success");
-                response.close();
+                if (noticeList == null) {
+                    return null;
+                }
                 return noticeList;
-            } else {
-                schoolNoticeModel.setSuccess("failed");
-                System.out.println("main page connect failed");
-                response.close();
-                return new ArrayList<>();
             }
 
         } catch (IOException e1) {
-            schoolNoticeModel.setSuccess("error");
             System.out.println("main page request connect error");
-            return new ArrayList<>();
+            return null;
         }
-
+        return null;
     }
 
     private List<Map> parseNotice(String html) {
         Document document = Jsoup.parse(html);
-        Element element = document.getElementsByClass("treefilename").get(0);
-        Elements tds = element.getElementsByTag("td");
-        int j = 0;
+        Element element = document.getElementsByClass("vsb-space school-news school-news1").get(0);
+        Elements lis = element.getElementsByTag("li");
+//        System.out.println(element.toString());
         List<Map> list = new ArrayList<>();
         Map<String, Object> map;
-        for (int i = 0; i < 13; i++) {
+        for (int i = 0; i < lis.size(); i++) {
             map = new HashMap<>();
-            map.put("title", (tds.get(j)).getElementsByTag("a").text());
-            String link = (tds.get(j)).getElementsByTag("a").attr("href");
-            link = mItemUrl + link.substring(link.indexOf("/") + 1);
+            map.put("title", lis.get(i).getElementsByTag("a").get(0).getElementsByTag("em").get(0).text());
+            String url = lis.get(i).getElementsByTag("a").get(0).attr("href");
+            String link = mNoticeUrl + "/" + url;
             map.put("link", link);
-            Map<String, List> page = requestPages(link);
-            map.put("page", page);
-            j++;
-            map.put("time", (tds.get(j)).text());
-            j += 2;
+            map.put("time", lis.get(i).getElementsByTag("a").get(0).getElementsByTag("span").get(0).text());
+            if (url.substring(0, 4).equals("info")) {
+                Map<String, Object> page = requestPages(link);
+                if (page == null) {
+                    return null;
+                }
+                map.put("page", page);
+            }
             list.add(map);
         }
         return list;
     }
 
-    private Map<String, List> requestPages(String link) {
-        Request request = new Request.Builder()
-                .url(link)
-                .build();
-
-        Call call = mClient.newCall(request);
-        String data;
+    private Map<String, Object> requestPages(String link) {
+        Call call = OkHttpUtils.getInstance().getExecuteCall(link);
         try {
             Response respon = call.execute();
             if (respon.isSuccessful()) {
-                data = respon.body().string();
-                Map<String, List> map = parsePages(data);
+                String data = respon.body().string();
+                Map<String, Object> map = parsePages(data);
                 respon.close();
                 return map;
-            } else {
-                System.out.println("request pages connect failed");
-                respon.close();
-                Map<String, List> map = new HashMap<>();
-                map.put("fail", new ArrayList());
-                return map;
             }
-
         } catch (IOException e1) {
             System.out.println("request pages connect error");
-            Map<String, List> map = new HashMap<>();
-            map.put("fail", new ArrayList());
-            return map;
+            return null;
         }
+        return null;
     }
 
-    private Map<String, List> parsePages(String html) {
-        Map<String, List> map = new HashMap<>();
+    private Map<String, Object> parsePages(String html) {
+        Map<String, Object> map = new HashMap<>();
         List<String> list = new ArrayList<>();
         Document document = Jsoup.parse(html);
-        Elements elements = document.getElementsByClass("thirdcontent");
-        int tableNum = elements.size();
-
-        Element main = elements.get(0);
+        Element elements = document.getElementsByClass("tr-ri tr-ri1").get(0);
+        String title = elements.getElementsByClass("tr-title").get(0).getElementsByTag("h1").get(0).text();
+        String time = elements.getElementsByClass("tr-title").get(0).getElementsByTag("h3").get(0).text();
+        time = time.substring(time.indexOf("时间：") + 3, time.indexOf("点击数"));
+        Element main = elements.getElementsByClass("v_news_content").get(0);
         Elements ps = main.getElementsByTag("p");
+        Elements ul = elements.getElementsByTag("ul");
+        if (ul.size() > 0) {
+            Element attachment = elements.getElementsByTag("ul").get(0).getElementsByTag("li").get(0).getElementsByTag("a").get(0);
+            String attachTitle = attachment.text();
+            String attachLink = mNoticeUrl + attachment.attr("href");
+            map.put("attachTitle", attachTitle);
+            map.put("attachLink", attachLink);
+        }
+
         for (int i = 0; i < ps.size(); i++) {
-            String text = (ps.get(i)).text();
-            list.add(text);
+            list.add(ps.get(i).text());
         }
+        map.put("title", title);
+        map.put("time", time);
         map.put("main", list);
-        List<Map> listMap = new ArrayList<>();
-        if (tableNum == 2) {
-            Element option = elements.get(1);
-            Elements as = option.getElementsByTag("a");
-            for (int i = 0; i < as.size(); i++) {
-                Map<String, String> mapS = new HashMap<>();
-                mapS.put("link", mOptionUrl + (as.get(i)).attr("href"));
-                mapS.put("text", (as.get(i)).text());
-                listMap.add(mapS);
-            }
-            map.put("option", listMap);
-        }
         return map;
     }
 }
Index: src/main/java/com/lntuplus/utils/TimeUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/utils/TimeUtils.java	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ src/main/java/com/lntuplus/utils/TimeUtils.java	(date 1555233452000)
@@ -1,10 +1,17 @@
 package com.lntuplus.utils;
 
+import java.text.DateFormat;
+import java.text.ParseException;
 import java.text.SimpleDateFormat;
+import java.util.Calendar;
 import java.util.Date;
 
 public class TimeUtils {
 
+    private static final int FIRST_MONDAY_DATE = 0;
+    private static final int FIRST_MONDAY_DAY = 1;
+
+
     public static String getTime() {
         Date now = new Date();
         SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
@@ -16,4 +23,76 @@
         SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
         return df.format(now);
     }
+
+    public static Date toDate(String s) {
+        DateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm");
+        Date date = new Date();
+        try {
+            date = df.parse(s);
+        } catch (ParseException e) {
+            e.printStackTrace();
+        }
+        return date;
+    }
+
+    public static String stampToDate(Long stamp) {
+        String res;
+        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+        Date date = new Date(stamp);
+        res = simpleDateFormat.format(date);
+        return res;
+    }
+
+    public static int weekNo() {
+        Date now = new Date();
+        Calendar calendar = Calendar.getInstance();
+        int year = calendar.get(Calendar.YEAR);
+        Date marchMon = firstMonDate(year, 3);
+        Date septMon = firstMonDate(year, 9);
+        long day = 86400000L;
+        long time;
+        if (now.after(marchMon) && now.before(septMon)) {
+            time = now.getTime() - marchMon.getTime();
+        } else if (now.after(septMon)) {
+            time = now.getTime() - septMon.getTime();
+        } else {
+            year -= 1;
+            Date lastYear = firstMonDate(year, 9);
+            time = now.getTime() - lastYear.getTime();
+        }
+
+        long week = time / day / 7;
+        return (int) week;
+    }
+
+    private static Calendar firstMonday(int year, int month) {
+        Calendar cal = Calendar.getInstance();
+        cal.set(Calendar.YEAR, year);
+        cal.set(Calendar.MONTH, month - 1);
+        int day = 1;
+        cal.set(Calendar.DAY_OF_MONTH, day);
+        while (cal.get(Calendar.DAY_OF_WEEK) != Calendar.MONDAY) {
+            cal.set(Calendar.DAY_OF_MONTH, ++day);
+        }
+        Date date = cal.getTime();
+
+        String dateS = new SimpleDateFormat("yyyy-MM-dd").format(date);
+//        System.out.println(dateS);
+        return cal;
+    }
+
+    public static Date firstMonDate(int year, int month) {
+        Calendar calendar = firstMonday(year, month);
+        Date date = calendar.getTime();
+        return date;
+
+    }
+
+    public static int firstMonDay(int year, int month) {
+        Calendar calendar = firstMonday(year, month);
+
+        return calendar.get(Calendar.DAY_OF_MONTH);
+
+    }
+
 }
Index: src/main/java/com/lntuplus/utils/GsonUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/utils/GsonUtils.java	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ src/main/java/com/lntuplus/utils/GsonUtils.java	(date 1550901315000)
@@ -1,6 +1,7 @@
 package com.lntuplus.utils;
 
 import com.google.gson.Gson;
+import com.google.gson.GsonBuilder;
 
 public class GsonUtils {
 
@@ -9,12 +10,12 @@
     private static Gson sGson = null;
 
     private GsonUtils() {
-        sGson = new Gson();
+        sGson = new GsonBuilder().disableHtmlEscaping().create();
     }
 
     public static Gson getInstance() {
         if (sGsonUtils == null) {
-            synchronized (DBSessionFactory.class) {
+            synchronized (Gson.class) {
                 if (sGsonUtils == null) {
                     sGsonUtils = new GsonUtils();
                 }
Index: LNTUPlus.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- LNTUPlus.iml	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ LNTUPlus.iml	(date 1554016647000)
@@ -35,6 +35,7 @@
     <orderEntry type="sourceFolder" forTests="false" />
     <orderEntry type="library" name="Spring-4.3.18.RELEASE" level="project" />
     <orderEntry type="library" name="Spring MVC-4.3.18.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Tomcat 9.0.12" level="application_server_libraries" />
     <orderEntry type="library" name="Maven: com.squareup.okhttp3:okhttp:3.12.1" level="project" />
     <orderEntry type="library" name="Maven: com.squareup.okio:okio:2.2.2" level="project" />
     <orderEntry type="library" scope="RUNTIME" name="Maven: org.jetbrains.kotlin:kotlin-stdlib:1.2.60" level="project" />
@@ -48,7 +49,16 @@
     <orderEntry type="library" name="Maven: commons-logging:commons-logging:1.2" level="project" />
     <orderEntry type="library" name="Maven: commons-collections:commons-collections:3.2.2" level="project" />
     <orderEntry type="library" name="Maven: com.google.code.gson:gson:2.8.5" level="project" />
-    <orderEntry type="library" name="Maven: org.quartz-scheduler:quartz:2.4.0" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.9.8" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.9.8" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.9.0" level="project" />
+    <orderEntry type="library" name="Maven: org.quartz-scheduler:quartz:2.3.0" level="project" />
+    <orderEntry type="library" name="Maven: com.mchange:c3p0:0.9.5.2" level="project" />
+    <orderEntry type="library" name="Maven: com.mchange:mchange-commons-java:0.2.11" level="project" />
+    <orderEntry type="library" name="Maven: com.zaxxer:HikariCP-java6:2.3.13" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.7" level="project" />
     <orderEntry type="library" name="Maven: org.mybatis:mybatis:3.5.0" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.11.2" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-core:2.11.2" level="project" />
   </component>
 </module>
\ No newline at end of file
Index: src/main/java/com/lntuplus/service/PortService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/service/PortService.java	(date 1555233452000)
+++ src/main/java/com/lntuplus/service/PortService.java	(date 1555233452000)
@@ -0,0 +1,53 @@
+package com.lntuplus.service;
+
+import com.lntuplus.utils.Constants;
+import com.lntuplus.utils.DBSessionFactory;
+import com.lntuplus.utils.OkHttpUtils;
+import com.lntuplus.utils.TimeUtils;
+import org.apache.ibatis.session.SqlSession;
+import org.apache.ibatis.session.SqlSessionFactory;
+import org.springframework.scheduling.annotation.Scheduled;
+import org.springframework.stereotype.Component;
+import org.springframework.stereotype.Controller;
+
+@Component
+public class PortService {
+    private String mPort;
+    private OkHttpUtils mOkHttpUtils = OkHttpUtils.getInstance();
+
+    @Scheduled(cron = "0/10 * * * * ?")
+    public void getPort() {
+        SqlSessionFactory sqlSessionFactory = DBSessionFactory.getInstance();
+        SqlSession sqlSession = sqlSessionFactory.openSession();
+        mPort = mOkHttpUtils.getUseablePort();
+        if (mPort.equals(Constants.STRING_FAILED) || mPort.equals(Constants.STRING_ERROR)) {
+            System.out.println(TimeUtils.getTime() + " 获取Port失败，教务在线爆炸！");
+        }
+        int count = sqlSession.selectOne("PortMapper.selectCount");
+        if (count == 0) {
+            int flag = sqlSession.insert("PortMapper.insert", mPort);
+            sqlSession.commit();
+            if (flag == 0) {
+                System.out.println(TimeUtils.getTime() + " 插入Port失败！");
+            } else {
+                System.out.println(TimeUtils.getTime() + " 插入Port成功！");
+                System.out.println(mPort);
+            }
+            return;
+        } else {
+            String port = sqlSession.selectOne("PortMapper.select");
+            if (mPort.equals(port)) {
+                return;
+            }
+            int flag = sqlSession.update("PortMapper.update", mPort);
+            sqlSession.commit();
+            if (flag == 0) {
+                System.out.println(TimeUtils.getTime() + " 更新Port失败！");
+            } else {
+                System.out.println(TimeUtils.getTime() + " 更新Port成功！");
+                System.out.println(mPort);
+            }
+        }
+        sqlSession.close();
+    }
+}
\ No newline at end of file
Index: src/main/java/com/lntuplus/utils/OkHttpUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/utils/OkHttpUtils.java	(date 1555233452000)
+++ src/main/java/com/lntuplus/utils/OkHttpUtils.java	(date 1555233452000)
@@ -0,0 +1,139 @@
+package com.lntuplus.utils;
+
+import com.lntuplus.action.LoginAction;
+import okhttp3.*;
+
+import java.io.IOException;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+import java.util.concurrent.TimeUnit;
+
+public class OkHttpUtils {
+
+    private static OkHttpUtils sOkHttpUtils;
+    private static final String PORT1 = "http://202.199.224.24:11180/newacademic";
+    private static final String PORT2 = "http://202.199.224.24:11081/academic";
+
+    private static OkHttpClient mOkHttpClient = new OkHttpClient().newBuilder()
+            .connectTimeout(4, TimeUnit.SECONDS)// 设置连接超时时间
+            .readTimeout(4, TimeUnit.SECONDS)// 设置读取超时时间
+            .build();
+
+    public static OkHttpUtils getInstance() {
+        if (sOkHttpUtils == null) {
+            synchronized (OkHttpUtils.class) {
+                if (sOkHttpUtils == null) {
+                    sOkHttpUtils = new OkHttpUtils();
+                }
+            }
+        }
+        return sOkHttpUtils;
+    }
+
+    public OkHttpClient getOkHttpClient() {
+        return mOkHttpClient;
+    }
+
+    public Call getExecuteCall(String url) {
+        Request request = new Request
+                .Builder()
+                .url(url)
+                .build();
+        Call call = mOkHttpClient.newCall(request);
+        return call;
+    }
+
+    public String getUseablePort() {
+        String ip;
+        try {
+            Call call = getExecuteCall(PORT1 + "/common/security/check1.jsp");
+            Response resp = call.execute();
+            if (resp.isSuccessful()) {
+                ip = PORT1;
+                resp.close();
+                return ip;
+            } else {
+                call = getExecuteCall(PORT1 + "/common/security/check1.jsp");
+                try {
+                    resp = call.execute();
+                    if (resp.isSuccessful()) {
+                        ip = PORT1;
+                        resp.close();
+                        return ip;
+                    } else {
+                        resp.close();
+                        return Constants.STRING_FAILED;
+                    }
+                } catch (IOException e1) {
+                    resp.close();
+                    throw new IOException();
+                }
+            }
+        } catch (IOException e1) {
+            Call call = getExecuteCall(PORT2 + "/common/security/check1.jsp");
+            try {
+                Response resp = call.execute();
+                if (resp.isSuccessful()) {
+                    ip = PORT2;
+                    resp.close();
+                    return ip;
+                } else {
+                    resp.close();
+                    return Constants.STRING_FAILED;
+                }
+            } catch (IOException e2) {
+                return Constants.STRING_ERROR;
+            }
+        }
+    }
+
+    public Call getInfoCall(String url, String session) {
+        Request mRequest = new Request.Builder().url(url).addHeader("cookie", session).build();
+        return mOkHttpClient.newCall(mRequest);
+    }
+
+    public Call getInfoCallRequestBody(String url, String session, RequestBody requestBody) {
+        Request mRequest = new Request.Builder().url(url).addHeader("cookie", session).post(requestBody).build();
+        return mOkHttpClient.newCall(mRequest);
+    }
+
+    public Map<String, String> login(String number, String password) {
+        Map<String, String> map = new HashMap<>();
+        Map<String, String> loginMap = new LoginAction().login(number, password);
+        if (!loginMap.get(Constants.STRING_SUCCESS).equals(Constants.STRING_SUCCESS)) {
+            map.put(Constants.STRING_SUCCESS, loginMap.get(Constants.STRING_SUCCESS));
+            System.out.println(TimeUtils.getTime() + " Login失败：" + loginMap.get("success"));
+
+        } else {
+            map.put(Constants.STRING_SUCCESS, Constants.STRING_SUCCESS);
+            map.put(Constants.STRING_SESSION, loginMap.get(Constants.STRING_SESSION));
+            map.put(Constants.STRING_PORT, loginMap.get(Constants.STRING_PORT));
+        }
+        return map;
+    }
+
+    public String getSession(String url) {
+        String s;
+        Call call = getExecuteCall(url);
+        try {
+            Response resp = call.execute();
+            if (resp.isSuccessful()) {
+                Response data = resp;
+                Headers headers = data.headers();
+                List<String> cookies = headers.values("Set-Cookie");
+                String session = cookies.get(0);
+                s = session.substring(0, session.indexOf(";"));
+            } else {
+                s = Constants.STRING_FAILED;
+                System.out.println(TimeUtils.getTime() + " 获取sessionid失败！");
+            }
+            resp.close();
+        } catch (IOException e1) {
+            s = Constants.STRING_ERROR;
+            System.out.println(TimeUtils.getTime() + " 连接超时，获取seeionid失败！");
+        }
+        return s;
+    }
+
+}
Index: web/WEB-INF/view/sign.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/WEB-INF/view/sign.jsp	(date 1555233452000)
+++ web/WEB-INF/view/sign.jsp	(date 1555233452000)
@@ -0,0 +1,88 @@
+<%@ page language="java" contentType="text/html; charset=UTF-8"
+         pageEncoding="UTF-8" %>
+<!DOCTYPE html>
+<%@ page import="java.util.List" %>
+<%@ page import="java.util.ArrayList" %>
+<%@ page import="com.lntuplus.model.SignModel" %>
+<%
+    List<SignModel> list = (List<SignModel>) request.getAttribute("list");
+    if (list == null) {
+        list = new ArrayList<>();
+    }
+    Integer number = (Integer) request.getAttribute("number");
+    if (number == null) {
+        number = 0;
+    }
+%>
+<html>
+<head>
+    <meta charset="utf-8">
+    <meta http-equiv="X-UA-Compatible" content="IE=edge">
+    <title>签到情况查询</title>
+    <meta name="viewport" content="initial-scale=1, maximum-scale=1">
+    <link rel="shortcut icon" href="/favicon.ico">
+    <meta name="apple-mobile-web-app-capable" content="yes">
+    <meta name="apple-mobile-web-app-status-bar-style" content="black">
+
+    <link rel="stylesheet"
+          href="//g.alicdn.com/msui/sm/0.6.2/css/sm.min.css">
+    <link rel="stylesheet"
+          href="//g.alicdn.com/msui/sm/0.6.2/css/sm-extend.min.css">
+
+</head>
+<body>
+
+<div class="content">
+    <form action="get" method="post">
+        班级：<input type="text" name="iClass"/> <br> <br>
+        日期：<input type="text" name="day"/> <br> <br>
+        第：<input type="text" name="no"/>节 <br> <br>
+        <input type="submit" value="提交"/>
+    </form>
+
+    <table style="width: 100%">
+
+        <tr>
+            <td>姓名</td>
+            <td>班级</td>
+            <td>学号</td>
+        </tr>
+        <tr>未签到人数：<% out.print(number); %></tr>
+        <%
+            for (int i = 0; i < list.size(); i++) {
+        %>
+        <tr>
+            <td>
+                <%
+                    out.print(list.get(i).getName());
+                %>
+            </td>
+            <td>
+                <%
+                    out.print(list.get(i).getiClass());
+                %>
+            </td>
+            <td>
+                <%
+                    out.print(list.get(i).getNumber());
+                %>
+            </td>
+        </tr>
+        <%
+            }
+        %>
+
+    </table>
+
+</div>
+
+
+<script type='text/javascript'
+        src='//g.alicdn.com/sj/lib/zepto/zepto.min.js' charset='utf-8'></script>
+<script type='text/javascript'
+        src='//g.alicdn.com/msui/sm/0.6.2/js/sm.min.js' charset='utf-8'></script>
+<script type='text/javascript'
+        src='//g.alicdn.com/msui/sm/0.6.2/js/sm-extend.min.js' charset='utf-8'></script>
+
+</body>
+</html>
\ No newline at end of file
Index: src/main/resources/mappers/sign-mapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/mappers/sign-mapper.xml	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ src/main/resources/mappers/sign-mapper.xml	(date 1554022469000)
@@ -14,4 +14,12 @@
     <insert id="insert" parameterType="com.lntuplus.model.SignModel">
         insert ignore into signed values (#{number}, #{name}, #{iClass}, #{day}, #{no}, #{signTime})
     </insert>
+
+    <select id="selectSigned" parameterType="com.lntuplus.model.SignModel" resultType="com.lntuplus.model.SignModel">
+        select * from signed where iClass = #{iClass} and day = #{day} and no = #{no} order by number
+    </select>
+
+    <select id="selectClass" parameterType="com.lntuplus.model.SignModel" resultType="com.lntuplus.model.SignModel">
+        select * from student where iClass = #{iClass} order by number
+    </select>
 </mapper>
Index: web/index.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/index.jsp	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ web/index.jsp	(date 1554255949000)
@@ -13,13 +13,93 @@
 </head>
 <body>
 
+<h1>WeekNo</h1>
+<form action="time/week" method="get">
+    <input type="submit" style="width:80px;"/>
+</form>
+
+<h1>CET</h1>
+<form action="cet/get" method="post">
+    <input type="text" name="number" value="1706030227">
+    <input type="text" name="password" value="211422199805033813">
+    <input type="submit" style="width:80px;"/>
+</form>
+
+<h1>CET enroll</h1>
+<form action="cet/enroll" method="post">
+    <input type="text" name="number" value="1706030227">
+    <input type="text" name="password" value="211422199805033813">
+    <input type="submit" style="width:80px;"/>
+</form>
+
+<h1>CET post</h1>
+<form action="cet/post" method="post">
+    <input type="text" name="number" value="1706030227">
+    <input type="text" name="password" value="211422199805033813">
+    <input type="text" name="notifyid" value="31284129">
+    <input type="text" name="id" value="31289162">
+    <input type="text" name="rz" value="2879190">
+    <input type="submit" style="width:80px;"/>
+</form>
+
+<h1>GetChooseTable</h1>
+<form action="choose/get" method="post">
+    <input type="text" name="number" value="1706030227">
+    <input type="text" name="password" value="211422199805033813">
+    <input type="submit" style="width:80px;"/>
+</form>
+
+<h1>ChooseTable</h1>
+<form action="choose/choose" method="post">
+    <input type="text" name="number" value="1706030227">
+    <input type="text" name="password" value="211422199805033813">
+    <input type="text" name="select" value="xx_xk_add.jsp?kkplan_xxid=90116">
+    <input type="text" name="cNumber" value="H271700004036">
+    <input type="submit" style="width:80px;"/>
+</form>
+
+<h1>Login</h1>
+<form action="login/get" method="post">
+    <input type="text" name="number" value="1606110204">
+    <input type="text" name="password" value="211402199706042428">
+    <input type="submit" style="width:80px;"/>
+</form>
+
+<h1>StuInfo</h1>
+<form action="stuinfo/get" method="post">
+    <input type="text" name="number" value="1606110204">
+    <input type="text" name="password" value="211402199706042428">
+    <input type="submit" style="width:80px;"/>
+</form>
+
+<h1>Score</h1>
+<form action="score/get" method="post">
+    <input type="text" name="number" value="1606110204">
+    <input type="text" name="password" value="211402199706042428">
+    <input type="submit" style="width:80px;"/>
+</form>
+
+<h1>Exam</h1>
+<form action="exam/get" method="post">
+    <input type="text" name="number" value="1606110204">
+    <input type="text" name="password" value="211402199706042428">
+    <input type="submit" style="width:80px;"/>
+</form>
+
+<h1>Table</h1>
+<form action="table/get" method="post">
+    <input type="text" name="number" value="1606110204">
+    <input type="text" name="password" value="211402199706042428">
+    <input type="submit" style="width:80px;"/>
+</form>
+
 <h1>Hello</h1>
 <form action="hello/get" method="get">
     <input type="submit" style="width:80px;"/>
 </form>
 
 <h1>School Notice</h1>
-<form action="schoolnotice/get" method="post">
+<form action="notice/get" method="post">
     <input type="text" name="hashcode" value="629674271">
     <input type="submit" name="schoolnotice" style="width:80px;"/>
 </form>
@@ -44,6 +124,11 @@
 <form action="article/get" method="get">
     <input type="submit" style="width:80px;"/>
 </form>
+
+<h1>Everyday</h1>
+<form action="everyday/get" method="get">
+    <input type="submit" style="width:80px;"/>
+</form>
 
 <%= request.getServletContext().getRealPath("/")%>
 </body>
Index: src/main/java/com/lntuplus/action/ScoreRankAction.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/action/ScoreRankAction.java	(date 1555231722000)
+++ src/main/java/com/lntuplus/action/ScoreRankAction.java	(date 1555231722000)
@@ -0,0 +1,4 @@
+package com.lntuplus.action;
+
+public class ScoreRankAction {
+}
Index: src/main/java/com/lntuplus/model/GPAModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/model/GPAModel.java	(date 1555232544000)
+++ src/main/java/com/lntuplus/model/GPAModel.java	(date 1555232544000)
@@ -0,0 +1,33 @@
+package com.lntuplus.model;
+
+import java.util.Date;
+
+public class GPAModel {
+    private String number;
+    private double gpa;
+    private Date date;
+
+    public String getNumber() {
+        return number;
+    }
+
+    public void setNumber(String number) {
+        this.number = number;
+    }
+
+    public double getGpa() {
+        return gpa;
+    }
+
+    public void setGpa(double gpa) {
+        this.gpa = gpa;
+    }
+
+    public Date getDate() {
+        return date;
+    }
+
+    public void setDate(Date date) {
+        this.date = date;
+    }
+}
Index: src/main/resources/mybatis-config.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/mybatis-config.xml	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ src/main/resources/mybatis-config.xml	(date 1555233452000)
@@ -3,16 +3,33 @@
         PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
         "http://mybatis.org/dtd/mybatis-3-config.dtd">
 <!-- 根标签 -->
+
+
 <configuration>
+
     <!--&amp;替换&特殊符号-->
     <properties>
-        <property name="driver" value="com.mysql.jdbc.Driver"/>
+        <property name="driver" value="com.mysql.cj.jdbc.Driver"/>
         <property name="url"
-                  value="jdbc:mysql://localhost:3306/gongdaplus?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=UTC"/>
+                  value="jdbc:mysql://localhost:3306/lntuplus?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=UTC"/>
         <property name="username" value="root"/>
         <property name="password" value="771007147"/>
     </properties>
 
+    <settings>
+        <!-- setting name="autoMappingBehavior" value="PARTIAL" / -->
+        <setting name="cacheEnabled" value="false"/>
+        <!-- setting name="lazyLoadingEnabled" value="false" / -->
+        <!-- setting name="aggressiveLazyLoading" value="true" / -->
+        <setting name="multipleResultSetsEnabled" value="false"/>
+        <!-- setting name="useColumnLabel" value="true" / -->
+        <setting name="useGeneratedKeys" value="true"/>
+        <setting name="defaultExecutorType" value="REUSE"/>
+        <!-- setting name="defaultStatementTimeout" value="" / -->
+        <setting name="mapUnderscoreToCamelCase" value="true"/>
+        <!-- setting name="safeRowBoundsEnabled" value="true" / -->
+    </settings>
+
     <!-- 环境，可以配置多个，default：指定采用哪个环境 -->
     <environments default="development">
         <!-- id：唯一标识 -->
@@ -21,10 +38,10 @@
             <transactionManager type="JDBC"/>
             <!-- 数据源，池类型的数据源 -->
             <dataSource type="POOLED">
-                <property name="driver" value="com.mysql.jdbc.Driver"/>
+                <property name="driver" value="com.mysql.cj.jdbc.Driver"/>
                 <property name="url" value="jdbc:mysql://127.0.0.1:3306/mybatis-110"/>
                 <property name="username" value="root"/>
-                <property name="password" value="123456"/>
+                <property name="password" value="771007147"/>
             </dataSource>
         </environment>
         <environment id="development">
@@ -43,5 +60,13 @@
     <mappers>
         <mapper resource="mappers/hello-mapper.xml"/>
         <mapper resource="mappers/sign-mapper.xml"/>
+        <mapper resource="mappers/notice-mapper.xml"/>
+        <mapper resource="mappers/article-mapper.xml"/>
+        <mapper resource="mappers/everyday-mapper.xml"/>
+        <mapper resource="mappers/port-mapper.xml"/>
+        <mapper resource="mappers/save-mapper.xml"/>
+
     </mappers>
-</configuration>
\ No newline at end of file
+
+</configuration>
+
Index: .idea/libraries/Maven__com_fasterxml_jackson_core_jackson_databind_2_9_8.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__com_fasterxml_jackson_core_jackson_databind_2_9_8.xml	(date 1552549993000)
+++ .idea/libraries/Maven__com_fasterxml_jackson_core_jackson_databind_2_9_8.xml	(date 1552549993000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.fasterxml.jackson.core:jackson-databind:2.9.8">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-databind/2.9.8/jackson-databind-2.9.8.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-databind/2.9.8/jackson-databind-2.9.8-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-databind/2.9.8/jackson-databind-2.9.8-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: web/WEB-INF/dispatcher-servlet.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/WEB-INF/dispatcher-servlet.xml	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ web/WEB-INF/dispatcher-servlet.xml	(date 1554722108000)
@@ -6,45 +6,37 @@
        xmlns:task="http://www.springframework.org/schema/task"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">
 
-    <!--防止返回JSON中文乱码-->
-    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
-        <property name="messageConverters">
+    <!-- task任务扫描注解 -->
+    <task:annotation-driven/>
+
+    <!-- 扫描位置 -->
+    <context:component-scan base-package="com.lntuplus"/>
+
+    <!--Default servlet-->
+    <mvc:default-servlet-handler/>
+
+    <mvc:annotation-driven>
+        <mvc:message-converters>
             <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                 <property name="supportedMediaTypes">
                     <list>
+                        <!--防止返回JSON中文乱码-->
+                        <value>text/plain;charset=utf-8</value>
+                        <value>text/html;charset=UTF-8</value>
                         <value>application/json;charset=UTF-8</value>
                     </list>
                 </property>
             </bean>
-        </property>
-    </bean>
-
-    <!-- task任务扫描注解 -->
-    <task:annotation-driven/>
-    <!-- 扫描位置 -->
-    <context:component-scan base-package="com.lntuplus.service"/>
-
-    <context:component-scan base-package="com.lntuplus"/>
-
-
-    <!--Default servlet-->
-    <mvc:default-servlet-handler/>
-
-    <mvc:annotation-driven/>
+            <!--ResponseBody 转换为JSON-->
+            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
+        </mvc:message-converters>
+    </mvc:annotation-driven>
 
     <!-- 配置视图解析器：如何把handler方法返回值解析为实际的物理视图 -->
     <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
-        <property name="prefix" value="/WEB-INF/views/"/>
+        <property name="prefix" value="/WEB-INF/view/"/>
         <property name="suffix" value=".jsp"/>
     </bean>
 
-    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">-->
-    <!--<property name="messageConverters">-->
-    <!--<list>-->
-    <!--<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>-->
-    <!--</list>-->
-    <!--</property>-->
-    <!--</bean>-->
-
 </beans>
 
Index: src/main/java/com/lntuplus/service/SchoolNoticeService.java
===================================================================
--- src/main/java/com/lntuplus/service/SchoolNoticeService.java	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ src/main/java/com/lntuplus/service/NoticeService.java	(date 1555233452000)
@@ -1,73 +1,45 @@
 package com.lntuplus.service;
 
-import com.google.gson.Gson;
-import com.google.gson.GsonBuilder;
-import com.lntuplus.action.SchoolNoticeAction;
-import com.lntuplus.model.SchoolNoticeModel;
-import com.lntuplus.utils.JDBCUtils;
+import com.lntuplus.action.NoticeAction;
 import com.lntuplus.utils.TimeUtils;
+import org.springframework.beans.factory.InitializingBean;
+import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.scheduling.annotation.Scheduled;
 import org.springframework.stereotype.Component;
+import org.springframework.stereotype.Controller;
 
+import javax.servlet.ServletContext;
 import java.util.List;
 import java.util.Map;
 
 @Component
-public class SchoolNoticeService {
-    @Scheduled(cron = "0 */1 * * * ?")
-    public void getSchoolNotices() {
-        SchoolNoticeAction schoolNoticeAction = new SchoolNoticeAction();
-        Gson gson = new GsonBuilder().disableHtmlEscaping().create();   //解决%转为\u003d
+public class NoticeService implements InitializingBean {
+
+    //全局Context
+    @Autowired
+    private ServletContext servletContext;
+
+    @Scheduled(cron = "0 0/5 * * * ?")
+    public void get() {
+        getNotice();
+    }
+
+    //首次启动执行该代码
+    @Override
+    public void afterPropertiesSet() {
+        getNotice();
+    }
+
+    private void getNotice() {
+
         System.out.println(TimeUtils.getTime() + ":开始查询教务公告...");
-        SchoolNoticeModel schoolNoticeModel = schoolNoticeAction.get();
-        Map<String, Object> noticeHashcode = JDBCUtils.query("select hashcode from schoolnotice where pNo = '0' and rNo ='0' ;");
-        if (noticeHashcode == null) {
-            boolean noticeSucc = JDBCUtils.update("insert into schoolnotice values ('" + schoolNoticeModel.getHashcode() + "','0','0','0','" + TimeUtils.getTime() + "');");
-            if (!noticeSucc) {
-                System.out.println(TimeUtils.getTime() + "保存公告HashCode失败！");
-            }
-        } else if ((int) noticeHashcode.get("hashcode") == schoolNoticeModel.getHashcode()) {
-            System.out.println(TimeUtils.getTime() + "教务公告无更新！");
-            System.out.println(TimeUtils.getTime() + ":查询教务公告完毕！");
+        List<Map> data = new NoticeAction().get();
+        if (data == null) {
+            System.out.println(TimeUtils.getTime() + ":查询教务公告失败！");
             return;
         }
-
-        for (int i = 0; i < 10; i++) {
-            int page = i + 1;
-            for (int j = 0; j < 13; j++) {
-                int number = j + 1;
-                List<Map> pageNotices = schoolNoticeModel.getNoitceItem(i);
-                if (pageNotices.size() == 0) {
-                    System.out.println("主页请求错误，Pass！pNo:" + page);
-                    break;
-                }
-                Map<String, Map<String, String>> map = pageNotices.get(j);
-                if (map.get("page").containsKey("fail")) {
-                    System.out.println("公告页请求错误，Pass！pNo:" + page + ",rNo:" + number);
-                    continue;
-                }
-                Map<String, Object> query = JDBCUtils.query(
-                        "select hashcode from schoolnotice where pNo = '"
-                                + page + "' and rNo ='" + number + "';");
-                if (query == null) {
-                    boolean success = JDBCUtils.update("insert into schoolnotice values('"
-                            + pageNotices.get(j).hashCode() + "','" + page + "','" + number + "','"
-                            + gson.toJson(pageNotices.get(j)) + "','" + TimeUtils.getTime() + "');");
-                    if (success) {
-                        System.out.println("保存教务公告成功！pNo:" + page + ",rNo:" + number);
-                    } else {
-                        System.out.println("保存教务公告失败！pNo:" + page + ",rNo:" + number);
-                    }
-                } else if ((int) query.get("hashcode") != pageNotices.get(j).hashCode()) {
-                    System.out.println(JDBCUtils.update("update schoolnotice set "
-                            + "hashcode = '" + pageNotices.get(j).hashCode()
-                            + "',notices = '" + gson.toJson(pageNotices.get(j))
-                            + "',datetime = '" + TimeUtils.getTime()
-                            + "' where pNo = '" + page + "' and rNo = '" + number + "';"));
-                    System.out.println("更新一条教务公告成功！pNo:" + page + ",rNo:" + number);
-                }
-            }
-        }
+        servletContext.setAttribute("notice", data);
         System.out.println(TimeUtils.getTime() + ":查询教务公告完毕！");
+        return;
     }
 }
Index: src/main/java/com/lntuplus/action/Evaluate.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/action/Evaluate.java	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ src/main/java/com/lntuplus/action/Evaluate.java	(date 1552125095000)
@@ -1,16 +1,10 @@
 package com.lntuplus.action;
 
-import java.io.IOException;
-import java.text.SimpleDateFormat;
-import java.util.Date;
-import java.util.List;
-import java.util.concurrent.TimeUnit;
-
+import com.lntuplus.utils.Constants;
+import com.lntuplus.utils.OkHttpUtils;
+import com.lntuplus.utils.TimeUtils;
 import okhttp3.Call;
 import okhttp3.FormBody.Builder;
-import okhttp3.Headers;
-import okhttp3.OkHttpClient;
-import okhttp3.Request;
 import okhttp3.RequestBody;
 import okhttp3.Response;
 import org.jsoup.Jsoup;
@@ -18,307 +12,139 @@
 import org.jsoup.nodes.Element;
 import org.jsoup.select.Elements;
 
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
 public class Evaluate {
-    private String session;
-    private String number;
-    private String password;
-    private String ip = "http://202.199.224.24:11182/newacademic";
-    private String sessionUrl = "/common/security/check1.jsp";
+    private String mSession;
     private String evaluateUrl = "/eva/index/resultlist.jsdo?groupId=&moduleId=506";
     private String evaluateGetUrl = "/eva/index";
     private String evaluatePostUrl = "/eva/index/putresult.jsdo";
-    private String loginUrl = "/j_acegi_security_check";
-    private String checkUrl = "/frameset.jsp";
-    private OkHttpClient client = new OkHttpClient();
-    private OkHttpClient.Builder builder = this.client.newBuilder();
-    private String[][] scoreData;
-    private String[][] tableData;
-    private String[][] examData;
-    private String[] evaluateData;
-    private String[] formData1 = new String[8];
-    private String[] formName1 = new String[8];
-    private String[][] formData2 = new String[12][5];
-    private String[][] formName2 = new String[12][5];
-    private String success = "false";
+    private Call mCall;
+    private Response mResponse;
 
-    public Evaluate(String number, String password, String session, String ip) throws IOException {
-        this.ip = ip;
-        this.number = number;
-        this.password = password;
-        this.session = session;
-        addIP();
-        String temp2 = getInfo(this.evaluateUrl);
-        if (success.equals("newStuNoInfo")) {
-            return;
+    public String evaluate(String port, String session) {
+        mSession = session;
+        jointUrl(port);
+        Map<String, Object> resp = getInfo(evaluateUrl);
+        if (resp.get(Constants.STRING_SUCCESS).equals(Constants.STRING_NEW_STU)) {
+            return Constants.STRING_NEW_STU;
         }
-        getList(temp2);
+        String state = doEvaluate((String) resp.get(Constants.STRING_DATA));
+        return state;
     }
 
-    private void addIP() {
-        // TODO Auto-generated method stub
-        sessionUrl = ip + sessionUrl;
-        evaluateUrl = ip + evaluateUrl;
-        evaluateGetUrl = ip + evaluateGetUrl;
-        evaluatePostUrl = ip + evaluatePostUrl;
-        checkUrl = ip + checkUrl;
-    }
 
-    public String getSuccess() {
-        return success;
+    private void jointUrl(String port) {
+        evaluateUrl = port + evaluateUrl;
+        evaluateGetUrl = port + evaluateGetUrl;
+        evaluatePostUrl = port + evaluatePostUrl;
     }
 
-    public void setSuccess(String success) {
-        this.success = success;
+    private Map<String, Object> getInfo(String url) {
+        Map<String, Object> map = new HashMap<>();
+        mCall = OkHttpUtils.getInstance().getInfoCall(url, mSession);
+        try {
+            Response resp = mCall.execute();
+            if (resp.isSuccessful()) {
+                String data = resp.body().string();
+                map.put(Constants.STRING_SUCCESS, Constants.STRING_SUCCESS);
+                map.put(Constants.STRING_DATA, data);
+            }
+        } catch (IOException e1) {
+            e1.printStackTrace();
+            map.put(Constants.STRING_SUCCESS, Constants.STRING_NEW_STU);
+        }
+        map.put(Constants.STRING_SUCCESS, Constants.STRING_FAILED);
+        return map;
     }
-
 
-    public void getList(String Html) throws IOException {
-        String state = "false";
+    private String doEvaluate(String Html) {
+        Map<String, Object> map = new HashMap<>();
         Document document = Jsoup.parse(Html);
-
         Elements trs = document.getElementsByClass("infolist");
-
-        this.evaluateData = new String[trs.size()];
+        int count = 0;
         for (int i = 0; i < trs.size(); i++) {
-            final String temp = ((Element) trs.get(i)).attr("href").substring(1,
-                    ((Element) trs.get(i)).attr("href").length());
-            System.out.println(temp);
-            state = Evaluate.this.post(temp);
-
-            if (state.equals("success")) {
-                success = "success";
-                System.out.println("评课成功回调！");
-            } else {
-                success = "evaluateError";
-                return;
+            String url = (trs.get(i)).attr("href").substring(1);
+            url = evaluateGetUrl + url;
+            String state = post(url);
+            switch (state) {
+                case Constants.STRING_SUCCESS:
+                    System.out.println(TimeUtils.getTime() + " 评课成功！");
+                    break;
+                case Constants.STRING_FAILED:
+                    System.out.println(TimeUtils.getTime() + " 评课post失败！");
+                    count++;
+                    break;
+                case Constants.STRING_ERROR:
+                    System.out.println(TimeUtils.getTime() + " 评课出现错误！");
+                    count++;
+                    break;
+                default:
+                    break;
             }
         }
+        if (count > 0) {
+            return Constants.STRING_FAILED;
+        }
+        return Constants.STRING_SUCCESS;
     }
 
-    public String post(String url) throws IOException {
-        String data = "false";
-        final OkHttpClient client = new OkHttpClient();
-        Request request = new Request.Builder().url(this.evaluateGetUrl + url).addHeader("cookie", this.session)
-                .build();
-        System.out.println(this.evaluateGetUrl + url);
-        Call call = client.newCall(request);
-        data = null;
-        Response resp = call.execute();
-        if (resp.isSuccessful()) {
-            data = resp.body().string();
-            Document document = Jsoup.parse(data);
-            Elements inputs = document.getElementsByTag("input");
-            Element table = document.getElementsByTag("table").get(3);
-            Elements trs = table.getElementsByTag("tr");
-            System.out.println(trs.size());
-            for (int i = 0; i < 8; i++) {
-                Evaluate.this.formData1[i] = (inputs.get(i)).val();
-                Evaluate.this.formName1[i] = (inputs.get(i)).attr("name");
-                System.out.println(Evaluate.this.formName1[i] + " " + Evaluate.this.formData1[i]);
-            }
-            int x = 0;
-            int y = 0;
-            for (int i = 1; i < 13; i++) {
-                for (int j = 0; j < 5; j++) {
-                    System.out.println((((trs.get(i)).getElementsByTag("td").get(2)).getElementsByTag("input").get(j))
-                            .attr("name") + " "
-                            + ((((Element) trs.get(i)).getElementsByTag("td").get(2)).getElementsByTag("input").get(j))
-                            .val());
-                    Evaluate.this.formName2[(i
-                            - 1)][j] = ((Element) ((Element) ((Element) trs.get(i)).getElementsByTag("td").get(2))
-                            .getElementsByTag("input").get(j)).attr("name");
-                    Evaluate.this.formData2[(i
-                            - 1)][j] = ((Element) ((Element) ((Element) trs.get(i)).getElementsByTag("td").get(2))
-                            .getElementsByTag("input").get(j)).val();
-                }
-            }
-            Builder formBody = new Builder();
-            for (int i = 0; i < 8; i++) {
-                formBody.add(Evaluate.this.formName1[i], Evaluate.this.formData1[i]);
-            }
-            for (int i = 0; i < 12; i++) {
-                for (int j = 0; j < 5; j++) {
-                    formBody.add(Evaluate.this.formName2[i][j], Evaluate.this.formData2[i][j]);
-                }
-            }
-            RequestBody requestBody = formBody.build();
-            request = new Request.Builder().url(Evaluate.this.evaluatePostUrl)
-                    .addHeader("cookie", Evaluate.this.session).post(requestBody).build();
-            call = client.newCall(request);
-            data = null;
-            resp = call.execute();
-            if (resp.isSuccessful()) {
-                data = "success";
-                System.out.println("评课成功!");
-            }
-            resp.close();
-            return data;
-        }
-        return data;
-    }
-
-    public String getSession() {
-        return this.session;
+    public String post(String url) {
+        mCall = OkHttpUtils.getInstance().getInfoCall(url, mSession);
+        try {
+            mResponse = mCall.execute();
+            if (mResponse.isSuccessful()) {
+                String data = mResponse.body().string();
+                mResponse.close();
+                Document document = Jsoup.parse(data);
+                Elements inputs = document.getElementsByTag("input");
+                Element table = document.getElementsByTag("table").get(3);
+                Elements trs = table.getElementsByTag("tr");
+                List<Map<String, String>> pageData = new ArrayList<>();
+                for (int i = 0; i < 8; i++) {
+                    Map<String, String> pageMap = new HashMap<>();
+                    pageMap.put(Constants.STRING_DATA, inputs.get(i).val());
+                    pageMap.put(Constants.STRING_NAME, inputs.get(i).attr("name"));
+                }
+                List<List<Map<String, String>>> infoData = new ArrayList<>();
+                for (int i = 1; i < 13; i++) {
+                    List<Map<String, String>> infoItem = new ArrayList<>();
+                    for (int j = 0; j < 5; j++) {
+                        Map<String, String> map = new HashMap<>();
+                        map.put(Constants.STRING_DATA, trs.get(i).getElementsByTag("td").get(2)
+                                .getElementsByTag("input").get(j).val());
+                        map.put(Constants.STRING_NAME, trs.get(i).getElementsByTag("td").get(2)
+                                .getElementsByTag("input").get(j).attr("name"));
+                        infoItem.add(map);
+                    }
+                    infoData.add(infoItem);
+                }
+                Builder formBody = new Builder();
+                for (int i = 0; i < 8; i++) {
+                    formBody.add(pageData.get(i).get(Constants.STRING_NAME), pageData.get(i).get(Constants.STRING_DATA));
+                }
+                for (int i = 0; i < 12; i++) {
+                    for (int j = 0; j < 5; j++) {
+                        formBody.add(infoData.get(i).get(j).get(Constants.STRING_NAME), infoData.get(i).get(j).get(Constants.STRING_DATA));
+                    }
+                }
+                RequestBody requestBody = formBody.build();
+                mCall = OkHttpUtils.getInstance().getInfoCallRequestBody(evaluatePostUrl, mSession, requestBody);
+                mResponse = mCall.execute();
+                if (mResponse.isSuccessful()) {
+                    return Constants.STRING_SUCCESS;
+                } else {
+                    return Constants.STRING_FAILED;
+                }
+            }
+        } catch (IOException e) {
+            return Constants.STRING_ERROR;
+        }
+        return Constants.STRING_ERROR;
     }
-
-    public void setSession(String session) {
-        this.session = session;
-    }
-
-    public String getNumber() {
-        return this.number;
-    }
-
-    public void setNumber(String number) {
-        this.number = number;
-    }
-
-    public String getPassword() {
-        return this.password;
-    }
-
-    public void setPassword(String password) {
-        this.password = password;
-    }
-
-    public String[][] getScoreData() {
-        return this.scoreData;
-    }
-
-    public void setScoreData(String[][] scoreData) {
-        this.scoreData = scoreData;
-    }
-
-    public String[][] getTableData() {
-        return this.tableData;
-    }
-
-    public void setTableData(String[][] tableData) {
-        this.tableData = tableData;
-    }
-
-    public String[][] getExamData() {
-        return this.examData;
-    }
-
-    public void setExamData(String[][] examData) {
-        this.examData = examData;
-    }
-
-    private String getInfo(String url) {
-        OkHttpClient client = new OkHttpClient().newBuilder().connectTimeout(3, TimeUnit.SECONDS)// 设置连接超时时间
-                .readTimeout(3, TimeUnit.SECONDS)// 设置读取超时时间
-                .build();
-        Request request = new Request.Builder().url(url).addHeader("cookie", this.session).build();
-        System.out.println(url);
-        Call call = client.newCall(request);
-        String data = null;
-        try {
-            Response resp = call.execute();
-            if (resp.isSuccessful()) {
-                data = resp.body().string();
-            }
-            resp.close();
-        } catch (IOException e1) {
-            e1.printStackTrace();
-            success = "newStuNoInfo";
-            return data;
-        }
-        return data;
-    }
-
-    public String loginPost() throws IOException {
-        OkHttpClient client = new OkHttpClient();
-        RequestBody formBody = new Builder().add("j_username", this.number).add("j_password", this.password)
-                .build();
-
-        Request request = new Request.Builder().url(this.loginUrl).addHeader("cookie", this.session).post(formBody)
-                .build();
-
-        final Call call = client.newCall(request);
-        String state = null;
-        String data = null;
-        Response resp = call.execute();
-        if (resp.isSuccessful()) {
-            data = resp.body().string();
-        }
-        resp.close();
-        return data;
-
-    }
-
-    public String getSessionId() {
-        OkHttpClient client = new OkHttpClient();
-        String jsessionid = null;
-        Request request = new Request.Builder().url(this.sessionUrl).build();
-
-        Call call = client.newCall(request);
-        try {
-            Response resp = call.execute();
-            if (resp.isSuccessful()) {
-                Response data = resp;
-                Headers headers = data.headers();
-                List<String> cookies = headers.values("Set-Cookie");
-                String session = (String) cookies.get(0);
-                jsessionid = session.substring(0, session.indexOf(";"));
-            }
-            resp.close();
-        } catch (IOException e1) {
-            e1.printStackTrace();
-        }
-        return jsessionid;
-    }
-
-    public class info {
-        String number;
-        String password;
-        String jsessionid;
-
-        public info() {
-        }
-
-        public String getNumber() {
-            return this.number;
-        }
-
-        public void setNumber(String number) {
-            this.number = number;
-        }
-
-        public String getPassword() {
-            return this.password;
-        }
-
-        public void setPassword(String password) {
-            this.password = password;
-        }
-
-        public String getJsessionid() {
-            return this.jsessionid;
-        }
 
-        public void setJsessionid(String jsessionid) {
-            this.jsessionid = jsessionid;
-        }
-    }
-
-    private String transWeek(String week) {
-        String[] Week = {"日", "一", "二", "三", "四", "五", "六"};
-        for (int i = 0; i < 7; i++) {
-            if (week.equals(Week[i])) {
-                return String.valueOf(i);
-            }
-        }
-        return "日";
-    }
-
-    private int getDays(String endDate, String startDate) throws Exception {
-        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
-        Date date1 = sdf.parse(startDate);
-        Date date2 = sdf.parse(endDate);
-        long days = (date2.getTime() - date1.getTime()) / 86400000L;
-        long yushu = (date2.getTime() - date1.getTime()) % 86400000L;
-
-        return (int) days;
-    }
 }
Index: .idea/libraries/Maven__com_mchange_mchange_commons_java_0_2_11.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__com_mchange_mchange_commons_java_0_2_11.xml	(date 1553149194000)
+++ .idea/libraries/Maven__com_mchange_mchange_commons_java_0_2_11.xml	(date 1553149194000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.mchange:mchange-commons-java:0.2.11">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/mchange/mchange-commons-java/0.2.11/mchange-commons-java-0.2.11.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/mchange/mchange-commons-java/0.2.11/mchange-commons-java-0.2.11-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/mchange/mchange-commons-java/0.2.11/mchange-commons-java-0.2.11-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/com/lntuplus/action/HelloAction.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/action/HelloAction.java	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ src/main/java/com/lntuplus/action/HelloAction.java	(date 1553938216000)
@@ -2,7 +2,6 @@
 
 import com.lntuplus.model.HelloModel;
 import com.lntuplus.utils.DBSessionFactory;
-import com.lntuplus.utils.GsonUtils;
 import org.apache.ibatis.session.SqlSession;
 import org.apache.ibatis.session.SqlSessionFactory;
 
@@ -10,17 +9,16 @@
 
 public class HelloAction {
 
-    public String get() {
+    public List<HelloModel> get() {
         SqlSessionFactory sqlSessionFactory = DBSessionFactory.getInstance();
         // 获取sqlSession
         SqlSession sqlSession = sqlSessionFactory.openSession();
         List<HelloModel> helloModels;
         try {
             helloModels = sqlSession.selectList("HelloMapper.select");
-            System.out.println("启动图获取成功!");
         } finally {
             sqlSession.close();
         }
-        return GsonUtils.getInstance().toJson(helloModels);
+        return helloModels;
     }
 }
Index: src/main/java/com/lntuplus/action/SaveAction.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/action/SaveAction.java	(date 1555233320000)
+++ src/main/java/com/lntuplus/action/SaveAction.java	(date 1555233320000)
@@ -0,0 +1,116 @@
+package com.lntuplus.action;
+
+import com.lntuplus.model.ExamModel;
+import com.lntuplus.model.GPAModel;
+import com.lntuplus.model.ScoreModel;
+import com.lntuplus.model.StuInfoModel;
+import com.lntuplus.utils.Constants;
+import com.lntuplus.utils.DBSessionFactory;
+import org.apache.ibatis.session.SqlSession;
+import org.apache.ibatis.session.SqlSessionFactory;
+import org.springframework.scheduling.annotation.Async;
+import org.springframework.scheduling.annotation.EnableAsync;
+import org.springframework.stereotype.Service;
+
+import java.sql.Time;
+import java.util.*;
+
+@Service
+@EnableAsync
+public class SaveAction {
+
+    @Async
+    public void saveStuInfo(StuInfoModel stuInfoData) {
+        SqlSessionFactory sqlSessionFactory = DBSessionFactory.getInstance();
+        SqlSession sqlSession = sqlSessionFactory.openSession();
+
+        int flag = sqlSession.insert("SaveMapper.stuinfoInsert", stuInfoData);
+        sqlSession.commit();
+        if (flag > 0) {
+            System.out.println("保存学生信息成功！学号：" + stuInfoData.getNumber());
+        } else {
+            System.out.println("学生信息已存在！学号：" + stuInfoData.getNumber());
+        }
+        sqlSession.close();
+    }
+
+    @Async
+    public void saveScore(List<Map<String, Object>> scoreData) {
+        if (scoreData.size() == 0) {
+            System.out.println("没有成绩信息，无需保存！");
+            return;
+        }
+        SqlSessionFactory sqlSessionFactory = DBSessionFactory.getInstance();
+        SqlSession sqlSession = sqlSessionFactory.openSession();
+        String number = null;
+        List<ScoreModel> data = new ArrayList<>();
+        for (int i = 0; i < scoreData.size(); i++) {
+            List<ScoreModel> list = (List<ScoreModel>) scoreData.get(i).get(Constants.STRING_DATA);
+            for (int j = 0; j < list.size(); j++) {
+                data.add(list.get(j));
+                if (number == null) {
+                    number = list.get(j).getNumber();
+                }
+            }
+        }
+        int count = data.size();
+        ScoreModel scoreModel = new ScoreModel();
+        scoreModel.setNumber(number);
+        int countSaved = sqlSession.selectOne("SaveMapper.scoreCount", scoreModel);
+        if (count == countSaved) {
+            System.out.println("成绩无需更新！");
+            return;
+        }
+        int flag = sqlSession.insert("SaveMapper.scoreForeach", data);
+        sqlSession.commit();
+        if (flag != count - countSaved) {
+            System.out.println("保存成绩失败！");
+        } else {
+            System.out.println("更新" + flag + "条成绩成功！");
+        }
+        sqlSession.close();
+    }
+
+    @Async
+    public void saveExam(List<ExamModel> examData) {
+        if (examData.size() == 0) {
+            System.out.println("没有考试信息，无需保存！");
+            return;
+        }
+        SqlSessionFactory sqlSessionFactory = DBSessionFactory.getInstance();
+        SqlSession sqlSession = sqlSessionFactory.openSession();
+
+        int flag = sqlSession.insert("SaveMapper.scoreForeach", examData);
+        sqlSession.commit();
+        if (flag == 0) {
+            System.out.println("考试信息无需更新！");
+        } else {
+            System.out.println("更新" + flag + "条考试成功！");
+        }
+        sqlSession.close();
+    }
+
+    @Async
+    public void saveGPA(String number, double gpa) {
+        if (gpa == 0.0000) {
+            System.out.println("没有绩点信息，无需保存！");
+            return;
+        }
+        SqlSessionFactory sqlSessionFactory = DBSessionFactory.getInstance();
+        SqlSession sqlSession = sqlSessionFactory.openSession();
+        GPAModel gpaModel = new GPAModel();
+        gpaModel.setNumber(number);
+        gpaModel.setGpa(gpa);
+        gpaModel.setDate(new Date());
+        int flag = sqlSession.insert("SaveMapper.gpaInsert", gpaModel);
+        sqlSession.commit();
+        if (flag == 0) {
+            System.out.println("GPA无需更新！");
+        } else {
+            System.out.println("更新GPA成功！GPA：" + gpa);
+        }
+        sqlSession.close();
+    }
+
+
+}
Index: src/main/java/com/lntuplus/action/AutoLogin.java
===================================================================
--- src/main/java/com/lntuplus/action/AutoLogin.java	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ src/main/java/com/lntuplus/action/LoginAction.java	(date 1555233452000)
@@ -1,211 +1,61 @@
 package com.lntuplus.action;
 
-import com.lntuplus.utils.DayUtils;
-import org.springframework.stereotype.Controller;
-import org.springframework.web.bind.annotation.RequestMapping;
-import org.springframework.web.bind.annotation.ResponseBody;
+import com.lntuplus.utils.*;
+import okhttp3.*;
+import org.apache.ibatis.session.SqlSession;
+import org.apache.ibatis.session.SqlSessionFactory;
+import org.jsoup.Jsoup;
+import org.jsoup.nodes.Document;
 
-import javax.servlet.http.HttpServletRequest;
-import javax.servlet.http.HttpServletResponse;
 import java.io.IOException;
 import java.text.DateFormat;
 import java.text.ParseException;
 import java.text.SimpleDateFormat;
 import java.util.Date;
 import java.util.HashMap;
-import java.util.List;
 import java.util.Map;
 
-@Controller
-@RequestMapping({"/AutoLogin"})
-public class AutoLogin {
-    private String appid;
-    private String secret;
-    private String js_code;
-    private String grant_type;
-    private String serverUrl = "https://api.weixin.qq.com/sns/jscode2session";
-    private String openID;
-    private String number;
-    private String password;
-    private Map data = null;
-    private String[][] scoreData;
-    private String[][] tableData;
-    private String[][] examData;
-    private String[] infoData;
-    private String success;
-    private String gpa;
-    private int countExam;
-    private List scoreList;
-    private List tableList;
-    private List examList;
-    private Map<String, String> infoMap;
+public class LoginAction {
 
-    @ResponseBody
-    @RequestMapping({"/autoLogin"})
-    public Object autoLogin(HttpServletRequest req, HttpServletResponse resp) throws IOException {
-        resp.setContentType("application/json; charset=utf-8");
-        number = req.getParameter("number");
-        password = req.getParameter("password");
-        data = new HashMap();
-//		if (!getOpenID()) {
-//			data.put("success", "openid");
-//			return data;
-//		}
-//		if(number==null) {
-//			if(!selectNumber()) {
-//				data.put("success", "first");
-//				return data;
-//			}
-//		}
-        GetMessages gm = new GetMessages(number, password);
-        this.success = gm.getSuccess();
-        if (this.success.equals("true")) {
-            this.scoreData = gm.getScoreData();
-            this.examData = gm.getExamData();
-            this.tableData = gm.getTableData();
-            this.infoData = gm.getInfoData();
-            this.infoMap = gm.getInfoMap();
-            this.examList = gm.getExamList();
-            this.scoreList = gm.getScoreList();
-            this.tableList = gm.getTableList();
-            this.gpa = gm.getGpa();
-            this.countExam = gm.getCountExam();
-            data.put("success", success);
-            data.put("stuInfo", infoMap);
-            data.put("examList", examList);
-            data.put("scoreList", scoreList);
-            data.put("tableList", tableList);
-            data.put("gpa", gpa);
-            data.put("countExam", countExam);
-            data.put("nowWeek", nowWeek());
-            data.put("hashCode", data.hashCode());
-            data.put("forumShow", gm.getForumShow());
-//			new Thread(new Runnable() {
-//				public void run() {
-//					Map saveData = data;
-//					System.out.println("开始保存数据...");
-//					saveData(saveData);
-//					System.out.println("保存数据结束");
-//				}
-//			}).start();
+    private OkHttpUtils mOkHttpUtils;
+    private String mPort;
+    private String mSession;
+    private String mSessionUrl = "/common/security/check1.jsp";
+    private String mLoginUrl = "/j_acegi_security_check";
+    private String mCheckUrl = "/frameset.jsp";
 
-        } else {
-            data.put("success", success);
+    public Map<String, String> login(String number, String password) {
+        SqlSessionFactory sqlSessionFactory = DBSessionFactory.getInstance();
+        SqlSession sqlSession = sqlSessionFactory.openSession();
+        Map<String, String> map = new HashMap<>();
+        mOkHttpUtils = OkHttpUtils.getInstance();
+        mPort = sqlSession.selectOne("PortMapper.select");
+        if (mPort.equals(Constants.STRING_FAILED) || mPort.equals(Constants.STRING_ERROR)) {
+            map.put(Constants.STRING_SUCCESS, Constants.STRING_PORT);
+            return map;
         }
-        return data;
-    }
-
-//	private boolean getOpenID() {
-//		OkHttpClient client = new OkHttpClient();
-//		String jsessionid = null;
-//		Request request = new Request.Builder().url(this.serverUrl + "?appid=" + this.appid + "&secret=" + this.secret
-//				+ "&js_code=" + this.js_code + "&grant_type=" + this.grant_type).build();
-//
-//		Call call = client.newCall(request);
-//		try {
-//			Response resp = call.execute();
-//			if (resp.isSuccessful()) {
-//				Response data = resp;
-//				String ss = data.body().string();
-//				ss = ss.substring(ss.indexOf("openid") + 9, ss.length() - 2);
-//				this.openID = ss;
-//				System.out.println(this.openID);
-//				return true;
-//			}
-//			resp.close();
-//		} catch (IOException e1) {
-//			e1.printStackTrace();
-//		}
-//		return false;
-//	}
-//
-//	private boolean selectNumber() {
-//		ComBean cBean = new ComBean();
-//		Date now = new Date();
-//		SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
-//		String dateTime = df.format(now);
-//
-//		List<List> list = new ArrayList();
-//		list = cBean.getCom("select number,password from user where openid='" + this.openID + "';", 2);
-//		if (list.size() > 0) {
-//			this.number = ((List) list.get(0)).get(0).toString();
-//			this.password = ((List) list.get(0)).get(1).toString();
-//			System.out.println(this.number + " " + this.password);
-//			return true;
-//		}
-//		return false;
-//	}
-
-    private String nowWeek() {
-        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
-        SimpleDateFormat dfYear = new SimpleDateFormat("yyyy");
-        SimpleDateFormat dfWeek = new SimpleDateFormat("EEEE");
-//		Date now = null;
-//		try {
-//			now = df.parse("2018-10-01");
-//		} catch (ParseException e2) {
-//			// TODO Auto-generated catch block
-//			e2.printStackTrace();
-//		}
-        Date now = new Date();
-        String date = df.format(now);
-        String year = date.substring(0, 4);
-        String month = date.substring(5, 7);
-        String day = date.substring(8, 10);
-
-        Date date1 = null;
-        Date date2 = null;
-
-        String upFirstMon = DayUtils.firstMonday(Integer.valueOf(year).intValue(), 3);
-        try {
-            date1 = df.parse(upFirstMon);
-        } catch (ParseException e1) {
-            e1.printStackTrace();
+        jointUrl();
+        mSession = mOkHttpUtils.getSession(mSessionUrl);
+        if (mSession.equals(Constants.STRING_FAILED) || mSession.equals(Constants.STRING_ERROR)) {
+            map.put(Constants.STRING_SUCCESS, Constants.STRING_SESSION);
+            return map;
+        }
+        String post = post(number, password, mSession);
+        if (post.equals(Constants.STRING_FAILED)) {
+            map.put(Constants.STRING_SUCCESS, Constants.STRING_POST);
+            return map;
         }
-        String downFirstMon = DayUtils.firstMonday(Integer.valueOf(year).intValue(), 9);
-        try {
-            date2 = df.parse(downFirstMon);
-        } catch (ParseException e) {
-            e.printStackTrace();
+        if (!postCheck(post)) {
+            map.put(Constants.STRING_SUCCESS, Constants.STRING_PASSWORD);
+            return map;
         }
-        long nd = 86400000L;
-        long nh = 3600000L;
-        long nm = 60000L;
-        long diff;
-        if ((date1.before(now)) && (now.before(date2))) {
-            diff = now.getTime() - date1.getTime();
-        } else {
-            DateFormat format = new SimpleDateFormat("yyyy-MM-dd");
-            Date newYearUpFirstMon = null;
-            try {
-                newYearUpFirstMon = format.parse(upFirstMon);
-            } catch (ParseException e) {
-                // TODO Auto-generated catch block
-                e.printStackTrace();
-            }
-            if (now.before(newYearUpFirstMon)) {
-                int beforeYear = Integer.valueOf(year) - 1;
-                Date beforeYearNineDate = null;
-                try {
-                    beforeYearNineDate = format.parse(DayUtils.firstMonday(beforeYear, 9));
-                } catch (ParseException e) {
-                    // TODO Auto-generated catch block
-                    e.printStackTrace();
-                }
-                diff = now.getTime() - beforeYearNineDate.getTime();
-            } else {
-                diff = now.getTime() - date2.getTime();
-            }
-        }
-        long howDay = diff / nd;
-        long howWeek = howDay / 7L;
-
-        long hour = diff % nd / nh;
+        map.put(Constants.STRING_SUCCESS, Constants.STRING_SUCCESS);
+        map.put(Constants.STRING_SESSION, mSession);
+        map.put(Constants.STRING_PORT, mPort);
+        return map;
+    }
 
-        long min = diff % nd % nh / nm;
 
-        return howWeek + "";
-    }
 
 //	private void saveData(Map data) {
 //		ComBean cBean = new ComBean();
@@ -393,4 +243,38 @@
 ////			}
 ////		}
 //	}
+
+    private void jointUrl() {
+        mSessionUrl = mPort + "/common/security/check1.jsp";
+        mLoginUrl = mPort + "/j_acegi_security_check";
+        mCheckUrl = mPort + "/frameset.jsp";
+    }
+
+    private String post(String number, String password, String session) {
+        RequestBody formBody = new FormBody.Builder().add("j_username", number).add("j_password", password).build();
+        Call call = mOkHttpUtils.getInfoCallRequestBody(mLoginUrl, session, formBody);
+        Response resp = null;
+        try {
+            resp = call.execute();
+            if (resp.isSuccessful()) {
+                String data = resp.body().string();
+                resp.close();
+                return data;
+            }
+        } catch (IOException e) {
+            resp.close();
+            e.printStackTrace();
+            System.out.println(TimeUtils.getTime() + " Post登录失败！");
+        }
+        return Constants.STRING_FAILED;
+    }
+
+    private boolean postCheck(String Html) {
+        Document document = Jsoup.parse(Html);
+        String title = (document.getElementsByTag("title").get(0)).text();
+        if (title.equals("用户登录")) {
+            return false;
+        }
+        return true;
+    }
 }
Index: .idea/libraries/Maven__org_quartz_scheduler_quartz_2_4_0.xml
===================================================================
--- .idea/libraries/Maven__org_quartz_scheduler_quartz_2_4_0.xml	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ .idea/libraries/Maven__org_quartz_scheduler_quartz_2_3_0.xml	(date 1553149194000)
@@ -1,13 +1,13 @@
 <component name="libraryTable">
-  <library name="Maven: org.quartz-scheduler:quartz:2.4.0">
+  <library name="Maven: org.quartz-scheduler:quartz:2.3.0">
     <CLASSES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/quartz-scheduler/quartz/2.4.0/quartz-2.4.0.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/quartz-scheduler/quartz/2.3.0/quartz-2.3.0.jar!/" />
     </CLASSES>
     <JAVADOC>
-      <root url="jar://$MAVEN_REPOSITORY$/org/quartz-scheduler/quartz/2.4.0/quartz-2.4.0-javadoc.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/quartz-scheduler/quartz/2.3.0/quartz-2.3.0-javadoc.jar!/" />
     </JAVADOC>
     <SOURCES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/quartz-scheduler/quartz/2.4.0/quartz-2.4.0-sources.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/quartz-scheduler/quartz/2.3.0/quartz-2.3.0-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
Index: src/main/java/com/lntuplus/action/TableAction.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/action/TableAction.java	(date 1555233452000)
+++ src/main/java/com/lntuplus/action/TableAction.java	(date 1555233452000)
@@ -0,0 +1,382 @@
+package com.lntuplus.action;
+
+import com.lntuplus.model.ExamModel;
+import com.lntuplus.model.TableModel;
+import com.lntuplus.utils.Constants;
+import com.lntuplus.utils.OkHttpUtils;
+import com.lntuplus.utils.TimeUtils;
+import okhttp3.Call;
+import okhttp3.Response;
+import org.jsoup.Jsoup;
+import org.jsoup.nodes.Document;
+import org.jsoup.nodes.Element;
+import org.jsoup.select.Elements;
+
+import java.io.IOException;
+import java.util.*;
+
+public class TableAction {
+    ///student/currcourse/currcourse.jsdo?groupId=&moduleId=2000
+    private String mYearTermUrl = "/student/currcourse/currcourse.jsdo?groupId=&moduleId=2000";
+    ///student/currcourse/currcourse.jsdo?year=38&term=2
+    private String mTestUrl = "/student/currcourse/currcourse.jsdo?year=";
+    ///student/currcourse/stuschedule.jsdo?stuId=2779287&year=38&term=2
+    private String mTableUrl = "/student/currcourse/stuschedule.jsdo?stuId=";
+    private int mYear;
+    private int mTerm;
+    private int newYear;
+    private int newTerm;
+    private String mStuID;
+    private Call mCall;
+    private Response mResponse;
+    private Map<String, Object> map = new HashMap<>();
+    private List<List<List<TableModel>>> tableList = new ArrayList<>();
+
+    public Map<String, Object> get(String port, String session) {
+        getYearTerm(port + mYearTermUrl, session);
+        getNewYearTerm();
+        Boolean next = getNewTable(port + mTestUrl + newYear + "&term=" + newTerm, session);
+        if (next == null) {
+            map.put(Constants.STRING_SUCCESS, Constants.STRING_ERROR);
+            return map;
+        }
+        String tableUrl;
+        if (next) {
+            tableUrl = port + mTableUrl + mStuID + "&year=" + newYear + "&term=" + newTerm;
+        } else {
+            tableUrl = port + mTableUrl + mStuID + "&year=" + mYear + "&term=" + mTerm;
+        }
+        mCall = OkHttpUtils.getInstance().getInfoCall(tableUrl, session);
+        try {
+            mResponse = mCall.execute();
+            if (mResponse.isSuccessful()) {
+                String html = mResponse.body().string();
+                tableList = parseTable(html);
+                map.put(Constants.STRING_SUCCESS, Constants.STRING_SUCCESS);
+                map.put(Constants.STRING_DATA, tableList);
+                mResponse.close();
+
+                return map;
+            }
+        } catch (IOException e) {
+            map.put(Constants.STRING_SUCCESS, Constants.STRING_ERROR);
+            System.out.println(TimeUtils.getTime() + " 获取Table失败！");
+        }
+        map.put(Constants.STRING_SUCCESS, Constants.STRING_ERROR);
+        mResponse.close();
+        return map;
+    }
+
+    private List<List<List<TableModel>>> parseTable(String Html) {
+        Document document = Jsoup.parse(Html);
+        Elements trs = document.getElementsByClass("infolist_hr_common");
+        List<List<List<TableModel>>> tableList = new ArrayList<>();
+        for (int i = 0; i < trs.size(); i++) {
+            Element tdRow = trs.get(i);
+            Elements tds = tdRow.getElementsByTag("td");
+            List<List<TableModel>> rowList = new ArrayList<>();
+            for (int j = 0; j < tds.size(); j++) {
+                List<TableModel> oneList = new ArrayList<>();
+                String item = tds.get(j).text();
+                TableModel tableModel = new TableModel();
+                if (item.equals("")) {
+                    rowList.add(oneList);
+                    continue;
+                }
+                int count = countTable(item);
+                String s = item.substring(0, item.indexOf(" "));
+                item = item.substring(item.indexOf(" ") + 1);
+                tableModel.setCourse(s);
+                s = item.substring(0, item.indexOf(" "));
+                item = item.substring(item.indexOf(" ") + 1);
+                tableModel.setTime(s);
+                if (!s.contains("-")) {
+                    tableModel.setStart(s);
+                    tableModel.setEnd(s);
+                    tableModel.setSingleDouble("0");
+                } else if (s.contains("单")) {
+                    tableModel.setStart(s.substring(0, s.indexOf("-")));
+                    tableModel.setEnd(s.substring(s.indexOf("-") + 1, s.length() - 1));
+                    tableModel.setSingleDouble("1");
+                } else if (s.contains("双")) {
+                    tableModel.setStart(s.substring(0, s.indexOf("-")));
+                    tableModel.setEnd(s.substring(s.indexOf("-") + 1, s.length() - 1));
+                    tableModel.setSingleDouble("2");
+                } else {
+                    tableModel.setStart(s.substring(0, s.indexOf("-")));
+                    tableModel.setEnd(s.substring(s.indexOf("-") + 1));
+                    tableModel.setSingleDouble("0");
+                }
+                s = item.substring(0, item.indexOf(" "));
+                item = item.substring(item.indexOf(" ") + 1);
+                tableModel.setTeacher(s);
+                if (count == 1) {
+                    tableModel.setAddress(item);
+                    oneList.add(tableModel);
+                    rowList.add(oneList);
+                    continue;
+                } else {
+                    s = item.substring(0, item.indexOf(" "));
+                    item = item.substring(item.indexOf(" ") + 1);
+                    tableModel.setAddress(s);
+                    oneList.add(tableModel);
+                }
+                tableModel = new TableModel();
+                s = item.substring(0, item.indexOf(" "));
+                item = item.substring(item.indexOf(" ") + 1);
+                tableModel.setCourse(s);
+                s = item.substring(0, item.indexOf(" "));
+                item = item.substring(item.indexOf(" ") + 1);
+                tableModel.setTime(s);
+                if (!s.contains("-")) {
+                    tableModel.setStart(s);
+                    tableModel.setEnd(s);
+                    tableModel.setSingleDouble("0");
+                } else if (s.contains("单")) {
+                    tableModel.setStart(s.substring(0, s.indexOf("-")));
+                    tableModel.setEnd(s.substring(s.indexOf("-") + 1, s.length() - 1));
+                    tableModel.setSingleDouble("1");
+                } else if (s.contains("双")) {
+                    tableModel.setStart(s.substring(0, s.indexOf("-")));
+                    tableModel.setEnd(s.substring(s.indexOf("-") + 1, s.length() - 1));
+                    tableModel.setSingleDouble("2");
+                } else {
+                    tableModel.setStart(s.substring(0, s.indexOf("-")));
+                    tableModel.setEnd(s.substring(s.indexOf("-") + 1));
+                    tableModel.setSingleDouble("0");
+                }
+
+                s = item.substring(0, item.indexOf(" "));
+                item = item.substring(item.indexOf(" ") + 1);
+                tableModel.setTeacher(s);
+                if (count == 2) {
+                    tableModel.setAddress(item);
+                    oneList.add(tableModel);
+                    rowList.add(oneList);
+                    continue;
+                } else {
+                    s = item.substring(0, item.indexOf(" "));
+                    item = item.substring(item.indexOf(" ") + 1);
+                    tableModel.setAddress(s);
+                    oneList.add(tableModel);
+                }
+                tableModel = new TableModel();
+                s = item.substring(0, item.indexOf(" "));
+                item = item.substring(item.indexOf(" ") + 1);
+                tableModel.setCourse(s);
+                s = item.substring(0, item.indexOf(" "));
+                item = item.substring(item.indexOf(" ") + 1);
+                tableModel.setTime(s);
+                if (!s.contains("-")) {
+                    tableModel.setStart(s);
+                    tableModel.setEnd(s);
+                    tableModel.setSingleDouble("0");
+                } else if (s.contains("单")) {
+                    tableModel.setStart(s.substring(0, s.indexOf("-")));
+                    tableModel.setEnd(s.substring(s.indexOf("-") + 1, s.length() - 1));
+                    tableModel.setSingleDouble("1");
+                } else if (s.contains("双")) {
+                    tableModel.setStart(s.substring(0, s.indexOf("-")));
+                    tableModel.setEnd(s.substring(s.indexOf("-") + 1, s.length() - 1));
+                    tableModel.setSingleDouble("2");
+                } else {
+                    tableModel.setStart(s.substring(0, s.indexOf("-")));
+                    tableModel.setEnd(s.substring(s.indexOf("-") + 1));
+                    tableModel.setSingleDouble("0");
+                }
+
+                s = item.substring(0, item.indexOf(" "));
+                item = item.substring(item.indexOf(" ") + 1);
+                tableModel.setTeacher(s);
+                if (count == 3) {
+                    tableModel.setAddress(item);
+                    oneList.add(tableModel);
+                    rowList.add(oneList);
+                    continue;
+                } else {
+                    s = item.substring(0, item.indexOf(" "));
+                    item = item.substring(item.indexOf(" ") + 1);
+                    tableModel.setAddress(s);
+                    oneList.add(tableModel);
+                }
+                tableModel = new TableModel();
+                s = item.substring(0, item.indexOf(" "));
+                item = item.substring(item.indexOf(" ") + 1);
+                tableModel.setCourse(s);
+                s = item.substring(0, item.indexOf(" "));
+                item = item.substring(item.indexOf(" ") + 1);
+                tableModel.setTime(s);
+                if (!s.contains("-")) {
+                    tableModel.setStart(s);
+                    tableModel.setEnd(s);
+                    tableModel.setSingleDouble("0");
+                } else if (s.contains("单")) {
+                    tableModel.setStart(s.substring(0, s.indexOf("-")));
+                    tableModel.setEnd(s.substring(s.indexOf("-") + 1, s.length() - 1));
+                    tableModel.setSingleDouble("1");
+                } else if (s.contains("双")) {
+                    tableModel.setStart(s.substring(0, s.indexOf("-")));
+                    tableModel.setEnd(s.substring(s.indexOf("-") + 1, s.length() - 1));
+                    tableModel.setSingleDouble("2");
+                } else {
+                    tableModel.setStart(s.substring(0, s.indexOf("-")));
+                    tableModel.setEnd(s.substring(s.indexOf("-") + 1));
+                    tableModel.setSingleDouble("0");
+                }
+
+                s = item.substring(0, item.indexOf(" "));
+                item = item.substring(item.indexOf(" ") + 1);
+                tableModel.setTeacher(s);
+                if (count == 4) {
+                    tableModel.setAddress(item);
+                    oneList.add(tableModel);
+                    rowList.add(oneList);
+                } else {
+                    s = item.substring(0, item.indexOf(" "));
+                    tableModel.setAddress(s);
+                    oneList.add(tableModel);
+                }
+            }
+            tableList.add(rowList);
+            i++;
+        }
+
+        return tableList;
+    }
+
+    private void getYearTerm(String url, String session) {
+        mCall = OkHttpUtils.getInstance().getInfoCall(url, session);
+        try {
+            mResponse = mCall.execute();
+            if (mResponse.isSuccessful()) {
+                String html = mResponse.body().string();
+                parseConstant(html);
+            }
+        } catch (IOException e) {
+
+        }
+    }
+
+    private boolean parseConstant(String html) {
+        Document document = Jsoup.parse(html);
+        String input = document.getElementsByTag("input").get(0).attr("onClick");
+        mStuID = input.substring(input.indexOf("stuId=") + 6, input.indexOf("&year"));
+        mYear = Integer.valueOf(input.substring(input.indexOf("year=") + 5, input.indexOf("&term")));
+        mTerm = Integer.valueOf(input.substring(input.indexOf("term=") + 5, input.indexOf("',''")));
+//        System.out.println("stuid" + mStuID + ",myear" + mYear + ",mterm" + mTerm);
+        if (mStuID != null && mYear != 0 && mTerm != 0) {
+            return true;
+        }
+        return false;
+    }
+
+    private int getYear() {
+        Calendar calendar = Calendar.getInstance();
+        int year = calendar.get(Calendar.YEAR);
+        int month = calendar.get(Calendar.MONTH);
+        int day = TimeUtils.firstMonDay(year, 3);
+        Date now = new Date();
+        calendar.set(Calendar.MONTH, month);
+        calendar.set(Calendar.DAY_OF_MONTH, day);
+        Date date = calendar.getTime();
+
+        if (now.before(date)) {
+            return year - 1980 - 1;
+        }
+        return year - 1980;
+    }
+
+    private int getTerm() {
+        Calendar calendar = Calendar.getInstance();
+        int year = calendar.get(Calendar.YEAR);
+        Date now = new Date();
+        Date marchMon = TimeUtils.firstMonDate(year, 3);
+        Date septMon = TimeUtils.firstMonDate(year, 9);
+        if (now.after(marchMon) && now.before(septMon)) {
+            return 1;
+        }
+        return 2;
+    }
+
+    private void getNewYearTerm() {
+        if (mTerm == 2) {
+            newYear = mYear + 1;
+            newTerm = 1;
+        } else {
+            newYear = mYear;
+            newTerm = 2;
+        }
+    }
+
+    private Boolean getNewTable(String url, String session) {
+        mCall = OkHttpUtils.getInstance().getInfoCall(url, session);
+        try {
+            mResponse = mCall.execute();
+            if (mResponse.isSuccessful()) {
+                String html = mResponse.body().string();
+                Boolean next = checkNewTable(html);
+                mResponse.close();
+
+                return next;
+            }
+        } catch (IOException e) {
+            System.out.println(TimeUtils.getTime() + " getNewTable失败！");
+            return null;
+        }
+        mResponse.close();
+        return null;
+    }
+
+    private Boolean checkNewTable(String html) {
+        Document document = Jsoup.parse(html);
+        Element table = document.getElementsByClass("infolist_tab").get(0);
+        Elements trs = table.getElementsByTag("tr");
+        if (trs.size() > 1) {
+            return true;
+        }
+        return false;
+    }
+
+    private int countTable(String s) {
+        int n = 0;// 计数器
+        int index;// 指定字符的长度
+        index = s.indexOf(" ");
+        while (index != -1) {
+            n++;
+            index = s.indexOf(" ", index + 1);
+        }
+        return (n + 1) / 4;
+    }
+
+    private TableModel parseItem(String s, String item) {
+        TableModel tableModel = new TableModel();
+        s = item.substring(0, item.indexOf(" "));
+        item = item.substring(item.indexOf(" ") + 1);
+        tableModel.setCourse(s);
+        s = item.substring(0, item.indexOf(" "));
+        item = item.substring(item.indexOf(" ") + 1);
+        tableModel.setTime(s);
+        if (!s.contains("-")) {
+            tableModel.setStart(s);
+            tableModel.setEnd(s);
+            tableModel.setSingleDouble("0");
+        } else if (s.contains("单")) {
+            tableModel.setStart(s.substring(0, s.indexOf("-")));
+            tableModel.setEnd(s.substring(s.indexOf("-") + 1, s.length() - 1));
+            tableModel.setSingleDouble("1");
+        } else if (s.contains("双")) {
+            tableModel.setStart(s.substring(0, s.indexOf("-")));
+            tableModel.setEnd(s.substring(s.indexOf("-") + 1, s.length() - 1));
+            tableModel.setSingleDouble("2");
+        } else {
+            tableModel.setStart(s.substring(0, s.indexOf("-")));
+            tableModel.setEnd(s.substring(s.indexOf("-") + 1));
+            tableModel.setSingleDouble("0");
+        }
+
+        s = item.substring(0, item.indexOf(" "));
+        item = item.substring(item.indexOf(" ") + 1);
+        tableModel.setTeacher(s);
+        return tableModel;
+    }
+}
Index: .idea/libraries/Maven__com_fasterxml_jackson_core_jackson_annotations_2_9_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__com_fasterxml_jackson_core_jackson_annotations_2_9_0.xml	(date 1552549993000)
+++ .idea/libraries/Maven__com_fasterxml_jackson_core_jackson_annotations_2_9_0.xml	(date 1552549993000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.9.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/com/lntuplus/action/StuInfoAction.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/action/StuInfoAction.java	(date 1555233452000)
+++ src/main/java/com/lntuplus/action/StuInfoAction.java	(date 1555233452000)
@@ -0,0 +1,94 @@
+package com.lntuplus.action;
+
+import com.lntuplus.model.StuInfoModel;
+import com.lntuplus.utils.Constants;
+import com.lntuplus.utils.OkHttpUtils;
+import okhttp3.Call;
+import okhttp3.OkHttpClient;
+import okhttp3.Request;
+import okhttp3.Response;
+import org.jsoup.Jsoup;
+import org.jsoup.nodes.Document;
+import org.jsoup.nodes.Element;
+import org.jsoup.select.Elements;
+
+import java.io.IOException;
+import java.util.HashMap;
+import java.util.Map;
+
+public class StuInfoAction {
+
+    private String mStuInfoUrl = "/student/studentinfo/studentinfo.jsdo?groupId=&moduleId=2060";
+    private String mNewStuUrl = "/eva/index/resultlist.jsdo?groupId=&moduleId=506";
+    private OkHttpUtils mOkHttpUtils;
+    private Call mCall;
+    private Response mResponse;
+    private Map<String, Object> map = new HashMap<>();
+
+    public Map<String, Object> get(String port, String session) {
+        mStuInfoUrl = port + mStuInfoUrl;
+        mNewStuUrl = port + mNewStuUrl;
+        mOkHttpUtils = OkHttpUtils.getInstance();
+        mCall = mOkHttpUtils.getInfoCall(mStuInfoUrl, session);
+        try {
+            mResponse = mCall.execute();
+            int code = mResponse.code();
+            if (code == 500) {
+                mResponse.close();
+                map.put(Constants.STRING_SUCCESS, Constants.STRING_NEW_STU);
+                return map;
+            }
+            if (mResponse.isSuccessful()) {
+                String html = mResponse.body().string();
+                mResponse.close();
+                StuInfoModel stuInfoModel = parseStuInfo(html);
+                map.put(Constants.STRING_SUCCESS, Constants.STRING_SUCCESS);
+                map.put(Constants.STRING_DATA, stuInfoModel);
+                return map;
+            }
+        } catch (IOException e1) {
+            map.put(Constants.STRING_SUCCESS, Constants.STRING_ERROR);
+            return map;
+        }
+        mResponse.close();
+        return map;
+    }
+
+    private StuInfoModel parseStuInfo(String html) {
+        StuInfoModel stuInfoModel = new StuInfoModel();
+        Document document = Jsoup.parse(html);
+        Element element = document.getElementsByClass("infolist_vt").get(0);
+        stuInfoModel.setImgUrl((document.getElementsByTag("img").get(0)).attr("src"));
+        Elements tds = element.getElementsByTag("td");
+        stuInfoModel.setNumber(Integer.valueOf(tds.get(0).text()));
+        stuInfoModel.setNationality((tds.get(1)).text());
+        stuInfoModel.setName((tds.get(3)).text());
+        stuInfoModel.setPlace((tds.get(4)).text());
+        stuInfoModel.setEngName((tds.get(5)).text());
+        stuInfoModel.setBirth((tds.get(6)).text());
+        stuInfoModel.setTypeOfID((tds.get(7)).text());
+        stuInfoModel.setPoliticalStatus((tds.get(8)).text());
+        stuInfoModel.setCard((tds.get(9)).text());
+        stuInfoModel.setVehicleInterval((tds.get(10)).text());
+        stuInfoModel.setSex((tds.get(11)).text());
+        stuInfoModel.setNation((tds.get(12)).text());
+        stuInfoModel.setAcademic((tds.get(13)).text());
+        stuInfoModel.setProfessional((tds.get(14)).text());
+        stuInfoModel.setiClass((tds.get(15)).text());
+        stuInfoModel.setStuType((tds.get(16)).text());
+        stuInfoModel.setExamArea((tds.get(17)).text());
+        stuInfoModel.setScore((tds.get(18)).text());
+        stuInfoModel.setRegistrationNumber((tds.get(19)).text());
+        stuInfoModel.setSchool((tds.get(20)).text());
+        stuInfoModel.setLanguageType((tds.get(21)).text());
+        stuInfoModel.setComeDate((tds.get(23)).text());
+        stuInfoModel.setEnrollmentType((tds.get(24)).text());
+        stuInfoModel.setGoDate((tds.get(25)).text());
+        stuInfoModel.setTrainingMode((tds.get(26)).text());
+        stuInfoModel.setAddress((tds.get(27)).text());
+        stuInfoModel.setPhone((tds.get(29)).text());
+        stuInfoModel.setEmail((tds.get(30)).text());
+        stuInfoModel.setOrigin((tds.get(32)).text());
+        return stuInfoModel;
+    }
+}
Index: .idea/libraries/Maven__org_apache_logging_log4j_log4j_core_2_11_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__org_apache_logging_log4j_log4j_core_2_11_2.xml	(date 1552120973000)
+++ .idea/libraries/Maven__org_apache_logging_log4j_log4j_core_2_11_2.xml	(date 1552120973000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.apache.logging.log4j:log4j-core:2.11.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/logging/log4j/log4j-core/2.11.2/log4j-core-2.11.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/logging/log4j/log4j-core/2.11.2/log4j-core-2.11.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/logging/log4j/log4j-core/2.11.2/log4j-core-2.11.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/com/lntuplus/action/SignAction.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/action/SignAction.java	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ src/main/java/com/lntuplus/action/SignAction.java	(date 1554021513000)
@@ -1,27 +1,18 @@
 package com.lntuplus.action;
 
-import java.sql.Time;
-import java.text.DateFormat;
-import java.text.SimpleDateFormat;
-import java.util.Date;
-import java.util.HashMap;
-import java.util.Map;
-
-import javax.servlet.http.HttpServletRequest;
-import javax.servlet.http.HttpServletResponse;
-
 import com.google.gson.Gson;
 import com.lntuplus.model.SignModel;
-import com.lntuplus.utils.ComBean;
 import com.lntuplus.utils.DBSessionFactory;
-import com.lntuplus.utils.JDBCUtils;
+import com.lntuplus.utils.GsonUtils;
 import com.lntuplus.utils.TimeUtils;
 import org.apache.ibatis.session.SqlSession;
 import org.apache.ibatis.session.SqlSessionFactory;
-import org.springframework.stereotype.Controller;
-import org.springframework.web.bind.annotation.RequestMapping;
-import org.springframework.web.bind.annotation.ResponseBody;
-import sun.security.pkcs11.Secmod;
+
+import java.text.DateFormat;
+import java.text.SimpleDateFormat;
+import java.util.Date;
+import java.util.HashMap;
+import java.util.Map;
 
 public class SignAction {
 
@@ -30,38 +21,40 @@
     private double latitude_WGS84;
     private double longitude_WGS84;
 
-    public String sign(String number, String name, String iClass) {
-        Gson gson = new Gson();
-//        Gson
+    public Map sign(String number, String name, String iClass) {
         SqlSessionFactory sqlSessionFactory = DBSessionFactory.getInstance();
         SqlSession sqlSession = sqlSessionFactory.openSession();
         int signCourseNo = courseNo(TimeUtils.getTime());
         Map<String, Object> map = new HashMap<>();
         if (signCourseNo == 0) {
             map.put("success", "timeError");
-            System.out.println(TimeUtils.getTime() + ":当前非上课时间！");
-            return gson.toJson(map);
+            System.out.println(TimeUtils.getTime() + " 当前非上课时间！");
+            return map;
         }
         SignModel signModel = new SignModel(Integer.valueOf(number), TimeUtils.getDate(), signCourseNo);
         int exist = sqlSession.selectOne("SignMapper.isExist", signModel);
         if (exist > 0) {
             map.put("success", "haveDone");
             System.out.println(number + " " + name + " " + iClass + " " + TimeUtils.getTime() + " 第" + signCourseNo + "节课已签到过！");
-            return gson.toJson(map);
+            sqlSession.close();
+            return map;
         }
         signModel.setDay(TimeUtils.getDate());
         signModel.setNo(signCourseNo);
         signModel.setSignTime(TimeUtils.getTime());
+        signModel.setName(name);
+        signModel.setiClass(iClass);
         sqlSession.insert("SignMapper.insert", signModel);
+        sqlSession.commit();
         System.out.println(number + " " + name + " " + iClass + " " + TimeUtils.getTime() + " 第" + signCourseNo + "节课签到成功！");
+        map.put("success", "success");
         map.put("sign", signModel);
-        return gson.toJson(map);
+        sqlSession.close();
+        return map;
     }
 
     private int courseNo(String date) {
-        Date now = new Date();
-        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
-        String dateTime = df.format(now);
+        String dateTime = TimeUtils.getDate();
         String[][] time = {
                 {dateTime + " 08:00:00", dateTime + " 09:35:00"},
                 {dateTime + " 09:55:00", dateTime + " 11:30:00"},
Index: src/main/java/com/lntuplus/action/ScoreAction.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/action/ScoreAction.java	(date 1555233452000)
+++ src/main/java/com/lntuplus/action/ScoreAction.java	(date 1555233452000)
@@ -0,0 +1,210 @@
+package com.lntuplus.action;
+
+import com.lntuplus.model.ScoreModel;
+import com.lntuplus.utils.Constants;
+import com.lntuplus.utils.OkHttpUtils;
+import com.lntuplus.utils.TimeUtils;
+import okhttp3.Call;
+import okhttp3.Response;
+import org.jsoup.Jsoup;
+import org.jsoup.nodes.Document;
+import org.jsoup.nodes.Element;
+import org.jsoup.select.Elements;
+
+import java.io.IOException;
+import java.util.*;
+
+public class ScoreAction {
+
+    private String mScoreUrl = "/student/queryscore/queryscore.jsdo?groupId=&moduleId=2021";
+    private Call mCall;
+    private Response mResponse;
+    private double mGPA = 0.0000;
+    private String mPort;
+    private String mSession;
+    private Map<String, Object> map = new HashMap<>();
+    private List<Map<String, Object>> scoreMap = new ArrayList<>();
+
+    public Map<String, Object> get(String port, String session, String number) {
+        this.mPort = port;
+        this.mSession = session;
+        this.mScoreUrl = port + mScoreUrl;
+        mCall = OkHttpUtils.getInstance().getInfoCall(mScoreUrl, mSession);
+        try {
+            mResponse = mCall.execute();
+            int code = mResponse.code();
+            if (code == 500) {
+                mResponse.close();
+                String state = new Evaluate().evaluate(mPort, mSession);
+                switch (state) {
+                    case Constants.STRING_NEW_STU:
+                        System.out.println("该新生尚未填写必填信息:" + number);
+                        map.put(Constants.STRING_SUCCESS, Constants.STRING_NEW_STU);
+                        break;
+                    case Constants.STRING_FAILED:
+                    case Constants.STRING_ERROR:
+                        System.out.println(TimeUtils.getTime() + " 评课失败!");
+                        break;
+                    case Constants.STRING_SUCCESS:
+                        map = new ScoreAction().get(mPort, mSession, number);
+                        break;
+                    default:
+                        break;
+                }
+                return map;
+            }
+            if (mResponse.isSuccessful()) {
+                String html = mResponse.body().string();
+                scoreMap = parseScore(html, number);
+                map.put(Constants.STRING_SUCCESS, Constants.STRING_SUCCESS);
+                map.put(Constants.STRING_DATA, scoreMap);
+                map.put(Constants.STRING_GPA, mGPA);
+                mResponse.close();
+                return map;
+            }
+        } catch (IOException e) {
+            map.put(Constants.STRING_SUCCESS, Constants.STRING_ERROR);
+            System.out.println(TimeUtils.getTime() + " 获取Score失败！");
+        }
+        mResponse.close();
+        return map;
+    }
+
+    private List<Map<String, Object>> parseScore(String html, String number) {
+        List<Map<String, Object>> scoreList = new ArrayList<>();
+        List<ScoreModel> list = new ArrayList<>();
+        Document document = Jsoup.parse(html);
+        Element gpaTable = document.getElementsByClass("broken_tab").get(0);
+        Element gpaTr = gpaTable.getElementsByTag("tr").get(0);
+        String gpaTd = (gpaTr.getElementsByTag("td").get(2)).text();
+        if (gpaTd.indexOf("，") > 0) {
+            mGPA = Double.valueOf(gpaTd.substring(10, gpaTd.indexOf("，")));
+//            System.out.println("GPA:" + mGPA);
+        }
+        Element element = document.getElementsByClass("infolist_tab").get(0);
+        Elements trs = element.getElementsByTag("tr");
+        if (trs.size() == 1) {
+            return new ArrayList<>();
+        }
+        Date date = new Date();
+        for (int i = 1; i < trs.size(); i++) {
+            String id = trs.get(i).id().substring(0, 1);
+//            boolean type = trs.get(i).getElementsByTag("td").get(1).text().contains("*")||
+//                    trs.get(i).getElementsByTag("td").get(1).text().contains("＊");
+            if (id.equals("b")) {
+                continue;
+            }
+            ScoreModel scoreModel = new ScoreModel();
+            Elements tds = trs.get(i).getElementsByTag("td");
+            scoreModel.setNumber(number);
+            scoreModel.setcNumber(tds.get(0).text());
+            scoreModel.setCourse(tds.get(1).text());
+            scoreModel.setcNo(Integer.parseInt(tds.get(2).text()));
+            scoreModel.setScore(tds.get(3).text());
+            scoreModel.setCredit(Double.parseDouble(tds.get(4).text()));
+            scoreModel.setExamType(tds.get(5).text());
+            scoreModel.setProperties(tds.get(6).text());
+            scoreModel.setRemark(tds.get(7).text());
+            scoreModel.setMode(tds.get(8).text());
+            scoreModel.setYear(tds.get(9).text());
+            scoreModel.setDelayed(tds.get(10).text());
+            scoreModel.setDatetime(date);
+            if (!tds.get(11).getElementsByTag("a").attr("href").equals("")) {
+                String url = mPort + "/student/queryscore/" + tds.get(11).getElementsByTag("a").attr("href");
+                mCall = OkHttpUtils.getInstance().getInfoCall(url, mSession);
+                try {
+                    mResponse = mCall.execute();
+                    if (mResponse.isSuccessful()) {
+                        String detailed = mResponse.body().string();
+                        if (detailed != null) {
+                            Map<String, Object> map = parseDetailed(detailed);
+                            if (map.get(Constants.STRING_SUCCESS).equals(Constants.STRING_SUCCESS)) {
+                                scoreModel.setOpenUnit((String) map.get("openUnit"));
+                                scoreModel.setTeacher((String) map.get("teacher"));
+                                String scoreInfo = (String) map.get("scoreInfo");
+                                scoreModel.setScoreInfo(scoreInfo != null && scoreInfo.equals("") ? null : scoreInfo);
+                                String normalScore = (String) map.get("normalScore");
+                                scoreModel.setNormalScore(normalScore != null && normalScore.equals("") ? null : normalScore);
+                                String midScore = (String) map.get("midScore");
+                                scoreModel.setMidScore(midScore != null && midScore.equals("") ? null : midScore);
+                                String endScore = (String) map.get("endScore");
+                                scoreModel.setEndScore(endScore != null && endScore.equals("") ? null : endScore);
+                                if (map.containsKey("examRoom") && map.containsKey("seatNum")) {
+                                    scoreModel.setExamRoom((Integer) map.get("examRoom"));
+                                    scoreModel.setSeatNum((Integer) map.get("seatNum"));
+                                }
+                            }
+                        }
+                        mResponse.close();
+                    }
+                } catch (IOException e) {
+
+                }
+                mResponse.close();
+            }
+            list.add(scoreModel);
+        }
+        Collections.sort(list);
+        String term = list.get(0).getYear();
+        List<ScoreModel> item = new ArrayList<>();
+        for (int i = 0; i < list.size(); i++) {
+            if (i == list.size() - 1) {
+                item.add(list.get(i));
+                Map<String, Object> it = new HashMap<>();
+                it.put(Constants.STRING_YEAR, term);
+                it.put(Constants.STRING_DATA, item);
+                scoreList.add(it);
+                continue;
+            }
+            if (!list.get(i).getYear().equals(list.get(i + 1).getYear())) {
+                item.add(list.get(i));
+                Map<String, Object> it = new HashMap<>();
+                it.put(Constants.STRING_YEAR, term);
+                it.put(Constants.STRING_DATA, item);
+                scoreList.add(it);
+                item = new ArrayList<>();
+                term = list.get(i + 1).getYear();
+                continue;
+            }
+            item.add(list.get(i));
+        }
+        return scoreList;
+    }
+
+    private Map<String, Object> parseDetailed(String html) {
+        Map<String, Object> map = new HashMap<>();
+
+        if (html.equals("500")) {
+            map.put(Constants.STRING_SUCCESS, Constants.STRING_500);
+            return map;
+        }
+        Document document = Jsoup.parse(html);
+        Element element = document.getElementsByTag("CENTER").get(0);
+        if (element.getElementsByTag("table").toString().equals("")) {
+            map.put(Constants.STRING_SUCCESS, Constants.STRING_FAILED);
+            return map;
+        }
+        Element table = element.getElementsByTag("table").get(0);
+        Elements trs = table.getElementsByTag("tr");
+        String s = trs.get(0).text();
+        if (s.contains("教室编号") && s.contains("座位号")) {
+            map.put("examRoom", s.substring(s.indexOf("编号：") + 3, s.indexOf(" 座位")));
+            map.put("seatNum", s.substring(s.indexOf("座位号：") + 4, s.indexOf("）")));
+        }
+        Elements tds = trs.get(1).getElementsByTag("td");
+        map.put("openUnit", tds.get(5).text());
+        map.put("teacher", tds.get(7).text());
+        if (trs.get(4).text().contains("成绩信息：")) {
+            map.put("scoreInfo", trs.get(4).text().substring(
+                    trs.get(4).text().indexOf("成绩信息：") + 5));
+        }
+        tds = trs.get(6).getElementsByTag("td");
+        map.put("normalScore", tds.get(0).text());
+        map.put("midScore", tds.get(1).text());
+        map.put("endScore", tds.get(2).text());
+        map.put(Constants.STRING_SUCCESS, Constants.STRING_SUCCESS);
+        return map;
+    }
+
+
+}
Index: .idea/libraries/Maven__com_zaxxer_HikariCP_java6_2_3_13.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__com_zaxxer_HikariCP_java6_2_3_13.xml	(date 1553149194000)
+++ .idea/libraries/Maven__com_zaxxer_HikariCP_java6_2_3_13.xml	(date 1553149194000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.zaxxer:HikariCP-java6:2.3.13">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/zaxxer/HikariCP-java6/2.3.13/HikariCP-java6-2.3.13.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/zaxxer/HikariCP-java6/2.3.13/HikariCP-java6-2.3.13-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/zaxxer/HikariCP-java6/2.3.13/HikariCP-java6-2.3.13-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/com/lntuplus/controller/StuInfoController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/controller/StuInfoController.java	(date 1555233452000)
+++ src/main/java/com/lntuplus/controller/StuInfoController.java	(date 1555233452000)
@@ -0,0 +1,49 @@
+package com.lntuplus.controller;
+
+import com.google.gson.Gson;
+import com.lntuplus.action.LoginAction;
+import com.lntuplus.action.StuInfoAction;
+import com.lntuplus.model.StuInfoModel;
+import com.lntuplus.utils.Constants;
+import com.lntuplus.utils.GsonUtils;
+import com.lntuplus.utils.OkHttpUtils;
+import com.lntuplus.utils.TimeUtils;
+import org.springframework.stereotype.Controller;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.ResponseBody;
+
+import javax.servlet.http.HttpServletRequest;
+import java.util.HashMap;
+import java.util.Map;
+
+@Controller
+@RequestMapping(value = "/stuinfo")
+public class StuInfoController {
+    private OkHttpUtils mOkHttpUtils = OkHttpUtils.getInstance();
+
+    @ResponseBody
+    @RequestMapping(value = "/get")
+    public String get(HttpServletRequest req) {
+        String number = req.getParameter("number");
+        String password = req.getParameter("password");
+        Map<String, Object> map = new HashMap<>();
+        Gson gson = GsonUtils.getInstance();
+        Map<String, String> loginMap = mOkHttpUtils.login(number, password);
+        if (!loginMap.get(Constants.STRING_SUCCESS).equals(Constants.STRING_SUCCESS)) {
+            map.put(Constants.STRING_SUCCESS, loginMap.get(Constants.STRING_SUCCESS));
+            return gson.toJson(map);
+        }
+        String port = loginMap.get(Constants.STRING_PORT);
+        String session = loginMap.get(Constants.STRING_SESSION);
+        Map<String, Object> stuInfoMap = new StuInfoAction().get(port, session);
+        if (!stuInfoMap.get(Constants.STRING_SUCCESS).equals(Constants.STRING_SUCCESS)) {
+            System.out.println(TimeUtils.getTime() + " getStuInfo失败：" + stuInfoMap.get(Constants.STRING_SUCCESS));
+            map.put(Constants.STRING_SUCCESS, stuInfoMap.get(Constants.STRING_SUCCESS));
+            return gson.toJson(map);
+        }
+        StuInfoModel stuInfoData = (StuInfoModel) stuInfoMap.get(Constants.STRING_DATA);
+        stuInfoData.setPassword(password);
+        map.put(Constants.STRING_DATA, stuInfoData);
+        return gson.toJson(map);
+    }
+}
Index: src/main/java/com/lntuplus/controller/SignController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/controller/SignController.java	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ src/main/java/com/lntuplus/controller/SignController.java	(date 1555233452000)
@@ -1,26 +1,73 @@
 package com.lntuplus.controller;
 
 import com.lntuplus.action.SignAction;
+import com.lntuplus.model.SignModel;
+import com.lntuplus.utils.ComBean;
+import com.lntuplus.utils.DBSessionFactory;
+import org.apache.ibatis.session.SqlSession;
+import org.apache.ibatis.session.SqlSessionFactory;
 import org.springframework.stereotype.Controller;
+import org.springframework.ui.ModelMap;
 import org.springframework.web.bind.annotation.RequestMapping;
 import org.springframework.web.bind.annotation.ResponseBody;
 
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
+import java.io.UnsupportedEncodingException;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
 
 @Controller
 @RequestMapping(value = "/sign")
 public class SignController {
 
     @ResponseBody
-    @RequestMapping({"/sign"})
-    public String sign(HttpServletRequest req, HttpServletResponse resp) {
+    @RequestMapping(value = "/sign")
+    public Object sign(HttpServletRequest req, HttpServletResponse resp) {
         resp.setContentType("application/json; charset=utf-8");
         SignAction signAction = new SignAction();
         String number = req.getParameter("number");
         String name = req.getParameter("name");
         String iClass = req.getParameter("iClass");
-        String data = signAction.sign(number, name, iClass);
-        return data;
+        Map map = signAction.sign(number, name, iClass);
+        return map;
+    }
+
+    @RequestMapping(value = "/query")
+    public String sign() {
+        return "sign";
+    }
+
+    @RequestMapping(value = "/get")
+    public String get(HttpServletRequest req, ModelMap model) throws UnsupportedEncodingException {
+        req.setCharacterEncoding("UTF-8");
+        String iClass = req.getParameter("iClass");
+        String day = req.getParameter("day");
+        String no = req.getParameter("no");
+        SqlSessionFactory sqlSessionFactory = DBSessionFactory.getInstance();
+        SqlSession sqlSession = sqlSessionFactory.openSession();
+        SignModel signModel = new SignModel();
+        signModel.setiClass(iClass);
+        signModel.setDay(day);
+        signModel.setNo(Integer.valueOf(no));
+        List<SignModel> list = sqlSession.selectList("SignMapper.selectSigned", signModel);
+        List<SignModel> all = sqlSession.selectList("SignMapper.selectClass", signModel);
+        Map<String, String> map = new HashMap<>();
+        for (int i = 0; i < list.size(); i++) {
+            map.put(String.valueOf(list.get(i).getNumber()), "ok");
+        }
+        List<SignModel> back = new ArrayList<>();
+        for (int i = 0; i < all.size(); i++) {
+            if (!map.containsKey(String.valueOf(all.get(i).getNumber()))) {
+                back.add(all.get(i));
+            }
+        }
+        model.addAttribute("list", back);
+        model.addAttribute("number", back.size());
+        System.out.println("查询签到：");
+        System.out.println("班级：" + iClass + " 日期：" + day + " 课序：" + no);
+        return "sign";
     }
 }
Index: web/WEB-INF/web.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/WEB-INF/web.xml	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ web/WEB-INF/web.xml	(date 1554721563000)
@@ -15,6 +15,7 @@
         <servlet-name>dispatcher</servlet-name>
         <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
         <load-on-startup>1</load-on-startup>
+        <async-supported>true</async-supported>
     </servlet>
     <servlet-mapping>
         <servlet-name>dispatcher</servlet-name>
Index: src/main/java/com/lntuplus/controller/SchoolNoticeController.java
===================================================================
--- src/main/java/com/lntuplus/controller/SchoolNoticeController.java	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ src/main/java/com/lntuplus/controller/NoticeController.java	(date 1555233452000)
@@ -2,13 +2,18 @@
 
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
-import com.lntuplus.model.SchoolNoticeModel;
-import com.lntuplus.utils.JDBCUtils;
+import com.lntuplus.action.NoticeAction;
+import com.lntuplus.model.NoticeModel;
+import com.lntuplus.utils.DBSessionFactory;
 import com.lntuplus.utils.TimeUtils;
+import org.apache.ibatis.session.SqlSession;
+import org.apache.ibatis.session.SqlSessionFactory;
+import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Controller;
 import org.springframework.web.bind.annotation.RequestMapping;
 import org.springframework.web.bind.annotation.ResponseBody;
 
+import javax.servlet.ServletContext;
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
 import java.util.ArrayList;
@@ -17,39 +22,58 @@
 import java.util.Map;
 
 @Controller
-@RequestMapping(value = "/schoolnotice")
-public class SchoolNoticeController {
+@RequestMapping(value = "/notice")
+public class NoticeController {
+
+    @Autowired
+    private ServletContext servletContext;
 
     @ResponseBody
     @RequestMapping(value = "/get")
-    public String get(HttpServletRequest req, HttpServletResponse resp) {
-        Gson gson = new GsonBuilder().disableHtmlEscaping().create();
-        Map<String, Object> noticeHashcode = JDBCUtils.query("select hashcode from schoolnotice where pNo = '0' and rNo ='0' ;");
-        if ((int) noticeHashcode.get("hashcode") == Integer.valueOf(req.getParameter("hashcode"))) {
-            Map<String, String> map = new HashMap<>();
-            map.put("success", "same");
-            System.out.println(new TimeUtils().getTime() + ":查询教务公告完毕！");
-            return gson.toJson(map);
+    public Object get() {
+
+        List<Map> list = (List<Map>) servletContext.getAttribute("notice");
+        if (list == null) {
+            return "查询教务公告失败!";
         }
+        return list;
 
-        SchoolNoticeModel schoolNoticeModel = new SchoolNoticeModel();
-        String num = JDBCUtils.query("select count(*) from schoolnotice").get("count(*)").toString();
-        if (Integer.valueOf(num) <= 0) {
-            schoolNoticeModel.setSuccess("null");
-            return gson.toJson(schoolNoticeModel);
-        }
-        List<List<Map>> noticeList = new ArrayList<>();
-        for (int i = 0; i < 10; i++) {
-            int page = i + 1;
-            List<Map> pageList = new ArrayList<>();
-            for (int j = 0; j < 13; j++) {
-                int number = j + 1;
-                Map<String, Object> item = JDBCUtils.query("select notices from schoolnotice where pNo = '" + page + "' and rNo = '" + number + "';");
-                pageList.add(item);
-            }
-            noticeList.add(pageList);
-        }
-        System.out.println("请求教务公告成功！");
-        return gson.toJson(noticeList);
+
+//        SqlSessionFactory sqlSessionFactory = DBSessionFactory.getInstance();
+//        SqlSession sqlSession = sqlSessionFactory.openSession();
+//        Gson gson = new GsonBuilder().disableHtmlEscaping().create();
+//        int count = sqlSession.selectOne("NoticeMapper.count_all_hashcode");
+//        if (count > 0) {
+//            int hashcode = sqlSession.selectOne("NoticeMapper.hashcode");
+//            if (hashcode == Integer.valueOf(req.getParameter("hashcode"))) {
+//                Map<String, String> map = new HashMap<>();
+//                map.put("success", "same");
+//                System.out.println(TimeUtils.getTime() + ":查询教务公告完毕,无需更新！");
+//                return gson.toJson(map);
+//            }
+//        }
+//        List noticeList = new ArrayList<>();
+//        for (int i = 0; i < 10; i++) {
+//            int page = i + 1;
+//            List pageList = new ArrayList<>();
+//            for (int j = 0; j < 13; j++) {
+//                int number = j + 1;
+//                NoticeModel loca = new NoticeModel();
+//                loca.setpNo(page);
+//                loca.setrNo(number);
+//                NoticeModel noticeModel = sqlSession.selectOne("NoticeMapper.select_notices", loca);
+//                pageList.add(noticeModel);
+//            }
+//            noticeList.add(pageList);
+//        }
+//        sqlSession.close();
+//        System.out.println(TimeUtils.getTime() +"请求教务公告成功！");
+//        String string = gson.toJson(noticeList);
+////        处理gson to json 对字符串的处理，转化为json
+//        string = string.replaceAll("\\\\", "");
+//        string = string.replaceAll("notices\":\"", "notices\":");
+//        string = string.replaceAll("}\",\"datetime", "},\"datetime");
+//        sqlSession.close();
+//        return string;
     }
 }
Index: src/main/java/com/lntuplus/controller/HelloController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/controller/HelloController.java	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ src/main/java/com/lntuplus/controller/HelloController.java	(date 1555233452000)
@@ -1,18 +1,25 @@
 package com.lntuplus.controller;
 
+import com.google.gson.Gson;
 import com.lntuplus.action.HelloAction;
+import com.lntuplus.model.HelloModel;
+import com.lntuplus.utils.GsonUtils;
 import org.springframework.stereotype.Controller;
 import org.springframework.web.bind.annotation.RequestMapping;
 import org.springframework.web.bind.annotation.ResponseBody;
 
+import java.util.List;
+
 @Controller
 @RequestMapping(value = "/hello")
 public class HelloController {
 
     @ResponseBody
     @RequestMapping(value = "/get")
-    public String hello() {
-        String data = new HelloAction().get();
-        return data;
+    public Object hello() {
+        Gson gson = GsonUtils.getInstance();
+        List<HelloModel> list = new HelloAction().get();
+        int random = (int) (Math.random() * list.size());
+        return list.get(random);
     }
 }
Index: src/main/java/com/lntuplus/controller/ScoreController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/controller/ScoreController.java	(date 1555233452000)
+++ src/main/java/com/lntuplus/controller/ScoreController.java	(date 1555233452000)
@@ -0,0 +1,48 @@
+package com.lntuplus.controller;
+
+import com.google.gson.Gson;
+import com.lntuplus.action.LoginAction;
+import com.lntuplus.action.ScoreAction;
+import com.lntuplus.utils.Constants;
+import com.lntuplus.utils.GsonUtils;
+import com.lntuplus.utils.OkHttpUtils;
+import com.lntuplus.utils.TimeUtils;
+import org.springframework.stereotype.Controller;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.ResponseBody;
+
+import javax.servlet.http.HttpServletRequest;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+@Controller
+@RequestMapping(value = "/score")
+public class ScoreController {
+    private OkHttpUtils mOkHttpUtils = OkHttpUtils.getInstance();
+
+    @ResponseBody
+    @RequestMapping(value = "/get")
+    public String get(HttpServletRequest req) {
+        String number = req.getParameter("number");
+        String password = req.getParameter("password");
+        Map<String, Object> map = new HashMap<>();
+        Gson gson = GsonUtils.getInstance();
+        Map<String, String> loginMap = mOkHttpUtils.login(number, password);
+        if (!loginMap.get(Constants.STRING_SUCCESS).equals(Constants.STRING_SUCCESS)) {
+            map.put(Constants.STRING_SUCCESS, loginMap.get(Constants.STRING_SUCCESS));
+            return gson.toJson(map);
+        }
+        String port = loginMap.get(Constants.STRING_PORT);
+        String session = loginMap.get(Constants.STRING_SESSION);
+        Map<String, Object> scoreMap = new ScoreAction().get(port, session, number);
+        if (!scoreMap.get(Constants.STRING_SUCCESS).equals(Constants.STRING_SUCCESS)) {
+            map.put(Constants.STRING_SUCCESS, scoreMap.get(Constants.STRING_SUCCESS));
+            return gson.toJson(map);
+        }
+        List<Map<String, Object>> scoreData = (List<Map<String, Object>>) scoreMap.get(Constants.STRING_DATA);
+        map.put(Constants.STRING_DATA, scoreData);
+        map.put(Constants.STRING_GPA, scoreMap.get(Constants.STRING_GPA));
+        return gson.toJson(map);
+    }
+}
Index: src/main/java/com/lntuplus/controller/LoginController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/controller/LoginController.java	(date 1555233452000)
+++ src/main/java/com/lntuplus/controller/LoginController.java	(date 1555233452000)
@@ -0,0 +1,180 @@
+package com.lntuplus.controller;
+
+import com.google.gson.Gson;
+import com.lntuplus.action.*;
+import com.lntuplus.model.ExamModel;
+import com.lntuplus.model.StuInfoModel;
+import com.lntuplus.model.TableModel;
+import com.lntuplus.utils.*;
+import javafx.beans.binding.ObjectBinding;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.scheduling.annotation.Async;
+import org.springframework.scheduling.annotation.EnableAsync;
+import org.springframework.stereotype.Controller;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.ResponseBody;
+
+import javax.servlet.ServletContext;
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpServletResponse;
+import java.lang.reflect.Field;
+import java.util.*;
+import java.util.concurrent.Future;
+import java.util.concurrent.TimeUnit;
+
+@Controller
+@RequestMapping(value = "/login")
+@EnableAsync
+public class LoginController {
+
+    private OkHttpUtils mOkHttpUtils = OkHttpUtils.getInstance();
+
+    @Autowired
+    private SaveAction mSaveAction;
+
+    @Autowired
+    private AsyncAction mAsyncAction;
+
+    @Autowired
+    private ServletContext servletContext;
+
+    @ResponseBody
+    @RequestMapping(value = "/get")
+    @SuppressWarnings("unchecked")
+    public Object get(HttpServletRequest req, HttpServletResponse resp) throws Exception {
+        resp.setContentType("application/json; charset=utf-8");
+
+        Map<String, Object> map = new HashMap<>();
+        Gson gson = GsonUtils.getInstance();
+        String number = req.getParameter("number");
+        String password = req.getParameter("password");
+        System.out.println("学号：" + number + "登录中...");
+        Map<String, String> loginMap = mOkHttpUtils.login(number, password);
+        if (!loginMap.get(Constants.STRING_SUCCESS).equals(Constants.STRING_SUCCESS)) {
+            map.put(Constants.STRING_SUCCESS, loginMap.get(Constants.STRING_SUCCESS));
+            return gson.toJson(map);
+        }
+        String port = loginMap.get(Constants.STRING_PORT);
+        String session = loginMap.get(Constants.STRING_SESSION);
+
+        Future<Map<String, Object>> stuInfoFuture = mAsyncAction.getStuInfo(port, session, password);
+        Future<Map<String, Object>> scoreFuture = mAsyncAction.getScore(port, session, number);
+        Future<Map<String, Object>> examFuture = mAsyncAction.getExam(port, session, number);
+        Future<Map<String, Object>> tableFuture = mAsyncAction.getTable(port, session);
+
+//        Map<String, Object> stuInfoMap = new StuInfoAction().get(port, session);
+//        if (!stuInfoMap.get(Constants.STRING_SUCCESS).equals(Constants.STRING_SUCCESS)) {
+//            System.out.println(TimeUtils.getTime() + " getStuInfo失败：" + stuInfoMap.get(Constants.STRING_SUCCESS));
+//            map.put(Constants.STRING_SUCCESS,stuInfoMap.get(Constants.STRING_SUCCESS));
+//            return gson.toJson(map);
+//        }
+//        StuInfoModel stuInfoData = (StuInfoModel) stuInfoMap.get(Constants.STRING_DATA);
+//        stuInfoData.setPassword(password);
+//        map.put(Constants.STRING_STU_INFO, stuInfoData);
+
+        //异步保存学生信息
+//        mSaveAction.saveStuInfo(stuInfoData);
+//        mSaveAction.saveStuInfo(stuInfoData);
+//
+//        Map<String, Object> scoreMap = new ScoreAction().get(port, session, number);
+//        if (!scoreMap.get(Constants.STRING_SUCCESS).equals(Constants.STRING_SUCCESS)){
+//            map.put(Constants.STRING_SUCCESS,scoreMap.get(Constants.STRING_SUCCESS));
+//            return gson.toJson(map);
+//        }
+//        List<Map<String, Object>> scoreData = (List<Map<String, Object>>) scoreMap.get(Constants.STRING_DATA);
+//        map.put(Constants.STRING_SCORE,scoreData);
+//        map.put(Constants.STRING_GPA, scoreMap.get(Constants.STRING_GPA));
+//        map.put(Constants.STRING_SUCCESS,Constants.STRING_SUCCESS);
+
+        //异步保存成绩信息
+//        mSaveAction.saveScore(scoreData);
+//        Map<String, Object> examMap = new ExamAction().get(port, session, number);
+//        if (!examMap.get(Constants.STRING_SUCCESS).equals(Constants.STRING_SUCCESS)){
+//            map.put(Constants.STRING_SUCCESS,examMap.get(Constants.STRING_SUCCESS));
+//            return gson.toJson(map);
+//        }
+//        List<ExamModel> examData = (List<ExamModel>) examMap.get(Constants.STRING_DATA);
+//        map.put(Constants.STRING_EXAM, examData);
+//
+//        Map<String, Object> tableMap = new TableAction().get(port, session);
+//        if (!tableMap.get(Constants.STRING_SUCCESS).equals(Constants.STRING_SUCCESS)){
+//            map.put(Constants.STRING_SUCCESS,tableMap.get(Constants.STRING_SUCCESS));
+//            return gson.toJson(map);
+//        }
+//        List<List<List<TableModel>>> tableData = (List<List<List<TableModel>>>) tableMap.get(Constants.STRING_DATA);
+//        map.put(Constants.STRING_TABLE, tableData);
+//        reflectStuInfo(stuInfoData);
+        while (true) {
+            if (stuInfoFuture.isDone() && scoreFuture.isDone() && examFuture.isDone() && tableFuture.isDone()) {
+                break;
+            }
+            Thread.sleep(100);
+        }
+        Map<String, Object> stuInfoMap = stuInfoFuture.get();
+        if (!stuInfoMap.get(Constants.STRING_SUCCESS).equals(Constants.STRING_SUCCESS)) {
+            System.out.println(TimeUtils.getTime() + " getStuInfo失败：" + stuInfoMap.get(Constants.STRING_SUCCESS));
+            map.put(Constants.STRING_SUCCESS, stuInfoMap.get(Constants.STRING_SUCCESS));
+            return map;
+        }
+        StuInfoModel stuInfoData = (StuInfoModel) stuInfoMap.get(Constants.STRING_DATA);
+        stuInfoData.setPassword(password);
+        map.put(Constants.STRING_STU_INFO, stuInfoData);
+
+        Map<String, Object> scoreMap = scoreFuture.get();
+        if (!scoreMap.get(Constants.STRING_SUCCESS).equals(Constants.STRING_SUCCESS)) {
+            map.put(Constants.STRING_SUCCESS, scoreMap.get(Constants.STRING_SUCCESS));
+            return map;
+        }
+        List<Map<String, Object>> scoreData = (List<Map<String, Object>>) scoreMap.get(Constants.STRING_DATA);
+        map.put(Constants.STRING_SCORE, scoreData);
+        map.put(Constants.STRING_GPA, scoreMap.get(Constants.STRING_GPA));
+        map.put(Constants.STRING_SUCCESS, Constants.STRING_SUCCESS);
+
+        Map<String, Object> examMap = examFuture.get();
+        if (!examMap.get(Constants.STRING_SUCCESS).equals(Constants.STRING_SUCCESS)) {
+            map.put(Constants.STRING_SUCCESS, examMap.get(Constants.STRING_SUCCESS));
+            return map;
+        }
+        List<ExamModel> examData = (List<ExamModel>) examMap.get(Constants.STRING_DATA);
+        map.put(Constants.STRING_EXAM, examData);
+
+        Map<String, Object> tableMap = tableFuture.get();
+        if (!tableMap.get(Constants.STRING_SUCCESS).equals(Constants.STRING_SUCCESS)) {
+            map.put(Constants.STRING_SUCCESS, tableMap.get(Constants.STRING_SUCCESS));
+            return map;
+        }
+        List<List<List<TableModel>>> tableData = (List<List<List<TableModel>>>) tableMap.get(Constants.STRING_DATA);
+        map.put(Constants.STRING_TABLE, tableData);
+//        reflectStuInfo(stuInfoData);
+
+        System.out.println("登陆成功！学号：" + number);
+        return map;
+    }
+
+    @Async
+    public void saveData(List<Map<String, Object>> scoreData, StuInfoModel stuInfoData) {
+        System.out.println(Thread.currentThread().getId());
+        Queue<List<Map<String, Object>>> mScore = (Queue<List<Map<String, Object>>>) servletContext.getAttribute("score");
+        if (mScore == null) {
+            mScore = new LinkedList<>();
+        }
+        mScore.add(scoreData);
+        servletContext.setAttribute("score", scoreData);
+        Queue<StuInfoModel> mStuinfo = (Queue<StuInfoModel>) servletContext.getAttribute("stuinfo");
+        if (mStuinfo == null) {
+            mStuinfo = new LinkedList<>();
+        }
+        mStuinfo.add(stuInfoData);
+        servletContext.setAttribute("stuinfo", mStuinfo);
+    }
+
+    private void reflectStuInfo(StuInfoModel e) throws Exception {
+        Class cls = e.getClass();
+        Field[] fields = cls.getDeclaredFields();
+        for (int i = 0; i < fields.length; i++) {
+            Field f = fields[i];
+            f.setAccessible(true);
+            System.out.println(f.getName() + ":" + f.get(e));
+        }
+    }
+}
Index: .idea/libraries/Maven__org_apache_logging_log4j_log4j_api_2_11_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__org_apache_logging_log4j_log4j_api_2_11_2.xml	(date 1552120973000)
+++ .idea/libraries/Maven__org_apache_logging_log4j_log4j_api_2_11_2.xml	(date 1552120973000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.apache.logging.log4j:log4j-api:2.11.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/logging/log4j/log4j-api/2.11.2/log4j-api-2.11.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/logging/log4j/log4j-api/2.11.2/log4j-api-2.11.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/logging/log4j/log4j-api/2.11.2/log4j-api-2.11.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/com/lntuplus/controller/TimeController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/controller/TimeController.java	(date 1555233452000)
+++ src/main/java/com/lntuplus/controller/TimeController.java	(date 1555233452000)
@@ -0,0 +1,19 @@
+package com.lntuplus.controller;
+
+import com.lntuplus.utils.TimeUtils;
+import org.springframework.stereotype.Controller;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.ResponseBody;
+
+@Controller
+@RequestMapping(value = "/time")
+public class TimeController {
+
+    @ResponseBody
+    @RequestMapping(value = "/week")
+    public String week() {
+        return String.valueOf(TimeUtils.weekNo());
+    }
+
+
+}
Index: .idea/libraries/Maven__org_slf4j_slf4j_api_1_7_7.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__org_slf4j_slf4j_api_1_7_7.xml	(date 1553149194000)
+++ .idea/libraries/Maven__org_slf4j_slf4j_api_1_7_7.xml	(date 1553149194000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.slf4j:slf4j-api:1.7.7">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/com/lntuplus/controller/ChooseTableController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/controller/ChooseTableController.java	(date 1555233452000)
+++ src/main/java/com/lntuplus/controller/ChooseTableController.java	(date 1555233452000)
@@ -0,0 +1,447 @@
+package com.lntuplus.controller;
+
+import com.google.gson.Gson;
+import com.lntuplus.action.LoginAction;
+import com.lntuplus.utils.Constants;
+import com.lntuplus.utils.GsonUtils;
+import com.lntuplus.utils.OkHttpUtils;
+import com.lntuplus.utils.TimeUtils;
+import com.sun.org.apache.bcel.internal.generic.IF_ACMPEQ;
+import okhttp3.Call;
+import okhttp3.Response;
+import org.jsoup.Jsoup;
+import org.jsoup.nodes.Document;
+import org.jsoup.nodes.Element;
+import org.jsoup.select.Elements;
+import org.springframework.stereotype.Controller;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.ResponseBody;
+
+import javax.servlet.http.HttpServletRequest;
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+@Controller
+@RequestMapping(value = "/choose")
+public class ChooseTableController {
+
+    private String mShowPostUrl = "/student/tiyu_xk/xx_xk.jsp?groupId=&moduleId=1510";
+    private String mShowUrl = "/student/tiyu_xk/xx_xk1.jsp";
+    private String mPostUrl = "/student/tiyu_xk/";
+    private String mChooseCheckPostUrl = "/student/tiyu_xk/xx_xk.jsp?menchi=";
+    private OkHttpUtils mOkHttpUtils = OkHttpUtils.getInstance();
+    private Call mCall;
+    private Response mResponse;
+
+    @ResponseBody
+    @RequestMapping({"/get"})
+    public String get(HttpServletRequest req) {
+        String number = req.getParameter("number");
+        String password = req.getParameter("password");
+        Map<String, Object> map = new HashMap<>();
+        Gson gson = GsonUtils.getInstance();
+        Map<String, String> loginMap = mOkHttpUtils.login(number, password);
+        if (!loginMap.get(Constants.STRING_SUCCESS).equals(Constants.STRING_SUCCESS)) {
+            map.put(Constants.STRING_SUCCESS, loginMap.get(Constants.STRING_SUCCESS));
+            return gson.toJson(map);
+        }
+        String port = loginMap.get(Constants.STRING_PORT);
+        String session = loginMap.get(Constants.STRING_SESSION);
+        String showPostUrl = port + mShowPostUrl;
+        mCall = mOkHttpUtils.getInfoCall(showPostUrl, session);
+        try {
+            mResponse = mCall.execute();
+            if (mResponse.isSuccessful()) {
+                String shwoUrl = port + mShowUrl;
+                mResponse.close();
+                mCall = mOkHttpUtils.getInfoCall(shwoUrl, session);
+                System.out.println("test success");
+                try {
+                    mResponse = mCall.execute();
+                    if (mResponse.isSuccessful()) {
+                        System.out.println("choose success");
+                        String html = mResponse.body().string();
+                        Map<String, Object> maps = parseChoose(html);
+                        return gson.toJson(maps);
+                    }
+                } catch (IOException e) {
+
+                }
+            }
+        } catch (IOException e) {
+
+        }
+        return "??";
+
+    }
+
+    @ResponseBody
+    @RequestMapping(value = "/choose")
+    public String choose(HttpServletRequest req) {
+        String number = req.getParameter("number");
+        String password = req.getParameter("password");
+        String select = req.getParameter("select");
+        String cNumber = req.getParameter("cNumber");
+        Map<String, Object> map = new HashMap<>();
+        Gson gson = GsonUtils.getInstance();
+        Map<String, String> loginMap = mOkHttpUtils.login(number, password);
+        if (!loginMap.get(Constants.STRING_SUCCESS).equals(Constants.STRING_SUCCESS)) {
+            map.put(Constants.STRING_SUCCESS, loginMap.get(Constants.STRING_SUCCESS));
+            return gson.toJson(map);
+        }
+        String port = loginMap.get(Constants.STRING_PORT);
+        String session = loginMap.get(Constants.STRING_SESSION);
+        String choosePostUrl = port + mPostUrl + select;
+        mCall = mOkHttpUtils.getInfoCall(choosePostUrl, session);
+        try {
+            mResponse = mCall.execute();
+            if (mResponse.isSuccessful()) {
+                System.out.println("choose post success");
+                mResponse.close();
+                mCall.cancel();
+
+            }
+        } catch (IOException e) {
+            System.out.println("post error");
+        }
+        String showUrl = port + mShowUrl;
+        mCall = mOkHttpUtils.getInfoCall(showUrl, session);
+        try {
+            mResponse = mCall.execute();
+            if (mResponse.isSuccessful()) {
+                String html = mResponse.body().string();
+                boolean check = checkSuccess(cNumber, html);
+                System.out.println("add success");
+                return check + "";
+            }
+        } catch (IOException e) {
+            System.out.println("add error");
+        }
+        return "error";
+    }
+
+    @ResponseBody
+    @RequestMapping(value = "/delete")
+    public String delete(HttpServletRequest req) {
+        String number = req.getParameter("number");
+        String password = req.getParameter("password");
+        String delete = req.getParameter("delete");
+        String cNumber = req.getParameter("cNumber");
+        Map<String, Object> map = new HashMap<>();
+        Gson gson = GsonUtils.getInstance();
+        Map<String, String> loginMap = mOkHttpUtils.login(number, password);
+        if (!loginMap.get(Constants.STRING_SUCCESS).equals(Constants.STRING_SUCCESS)) {
+            map.put(Constants.STRING_SUCCESS, loginMap.get(Constants.STRING_SUCCESS));
+            return gson.toJson(map);
+        }
+        String port = loginMap.get(Constants.STRING_PORT);
+        String session = loginMap.get(Constants.STRING_SESSION);
+        String postUrl = port + mPostUrl + delete;
+        mCall = mOkHttpUtils.getInfoCall(postUrl, session);
+        try {
+            mResponse = mCall.execute();
+            if (mResponse.isSuccessful()) {
+                System.out.println("delete post success");
+                mResponse.close();
+                mCall.cancel();
+
+            }
+        } catch (IOException e) {
+            System.out.println("post error");
+        }
+
+        String showUrl = port + mShowUrl;
+        mCall = mOkHttpUtils.getInfoCall(showUrl, session);
+        try {
+            mResponse = mCall.execute();
+            if (mResponse.isSuccessful()) {
+                String html = mResponse.body().string();
+                boolean check = checkSuccess(cNumber, html);
+                System.out.println("delete success");
+                return check + "";
+            }
+        } catch (IOException e) {
+            System.out.println("delete error");
+        }
+        return "error";
+    }
+
+    private boolean checkSuccess(String cNumber, String html) {
+        Document document = Jsoup.parse(html);
+        Element table = document.getElementsByClass("infolist_tab").get(0);
+        Elements trs = table.getElementsByTag("tr");
+        Elements tds = trs.get(trs.size() - 1).getElementsByTag("td");
+        Element td = tds.get(1);
+        String number = td.text();
+        if (cNumber.equals(number)) {
+            return true;
+        }
+        return false;
+    }
+
+    private Map<String, Object> parseChoose(String html) {
+        Document document = Jsoup.parse(html);
+        Elements tables = document.getElementsByClass("infolist_tab");
+        Element oldTable = tables.get(0);
+        Elements oldTrs = oldTable.getElementsByTag("tr");
+        List<OldTableModel> oldList = new ArrayList<>();
+        if (oldTrs.size() > 1) {
+            for (int i = 1; i < oldTrs.size(); i++) {
+                Elements tds = oldTrs.get(i).getElementsByTag("td");
+                OldTableModel oldTableModel = new OldTableModel();
+                oldTableModel.setYear(tds.get(0).text());
+                oldTableModel.setcNumber(tds.get(1).text());
+                oldTableModel.setcNo(tds.get(2).text());
+                oldTableModel.setCourse(tds.get(3).text());
+                oldTableModel.setTeacher(tds.get(4).text());
+                oldTableModel.setCredit(tds.get(5).text());
+                oldTableModel.setType(tds.get(6).text());
+                if (!tds.get(7).text().equals("")) {
+                    oldTableModel.setDelete(tds.get(7).getElementsByTag("a").get(0).attr("href"));
+                }
+                oldList.add(oldTableModel);
+            }
+        }
+        Map<String, Object> map = new HashMap<>();
+        map.put("old", oldList);
+        Element newTable = tables.get(1);
+        Elements newTrs = newTable.getElementsByTag("tr");
+        if (newTrs.size() == 1) {
+            return new HashMap<>();
+        }
+        List<NewTableModel> newList = new ArrayList<>();
+        for (int i = 1; i < newTrs.size(); i++) {
+            Elements tds = newTrs.get(i).getElementsByTag("td");
+            NewTableModel newTableModel = new NewTableModel();
+            newTableModel.setYear(tds.get(0).text());
+            newTableModel.setcNumber(tds.get(1).text());
+            newTableModel.setcNo(tds.get(2).text());
+            newTableModel.setCourse(tds.get(3).text());
+            newTableModel.setTeacher(tds.get(4).text());
+            newTableModel.setType(tds.get(5).text());
+            newTableModel.setTime(tds.get(6).text());
+            newTableModel.setAddress(tds.get(7).text());
+            newTableModel.setHours(tds.get(8).text());
+            newTableModel.setCredit(tds.get(9).text());
+            newTableModel.setAllNum(tds.get(10).text());
+            newTableModel.setSelNum(tds.get(11).text());
+            newTableModel.setSex(tds.get(12).text());
+            if (!tds.get(13).text().equals("")) {
+                newTableModel.setSelect(tds.get(13).getElementsByTag("a").get(0).attr("href"));
+            }
+            newList.add(newTableModel);
+        }
+        map.put("new", newList);
+
+        return map;
+    }
+}
+
+class OldTableModel {
+    private String year;
+    private String cNumber;
+    private String cNo;
+    private String course;
+    private String teacher;
+    private String credit;
+    private String type;
+    private String delete;
+
+    public String getYear() {
+        return year;
+    }
+
+    public void setYear(String year) {
+        this.year = year;
+    }
+
+    public String getcNumber() {
+        return cNumber;
+    }
+
+    public void setcNumber(String cNumber) {
+        this.cNumber = cNumber;
+    }
+
+    public String getcNo() {
+        return cNo;
+    }
+
+    public void setcNo(String cNo) {
+        this.cNo = cNo;
+    }
+
+    public String getCourse() {
+        return course;
+    }
+
+    public void setCourse(String course) {
+        this.course = course;
+    }
+
+    public String getTeacher() {
+        return teacher;
+    }
+
+    public void setTeacher(String teacher) {
+        this.teacher = teacher;
+    }
+
+    public String getCredit() {
+        return credit;
+    }
+
+    public void setCredit(String credit) {
+        this.credit = credit;
+    }
+
+    public String getType() {
+        return type;
+    }
+
+    public void setType(String type) {
+        this.type = type;
+    }
+
+    public String getDelete() {
+        return delete;
+    }
+
+    public void setDelete(String delete) {
+        this.delete = delete;
+    }
+
+
+}
+
+class NewTableModel {
+    private String year;
+    private String cNumber;
+    private String cNo;
+    private String course;
+    private String teacher;
+    private String type;
+    private String time;
+    private String address;
+    private String hours;
+    private String credit;
+    private String allNum;
+    private String selNum;
+    private String sex;
+    private String select;
+
+    public String getYear() {
+        return year;
+    }
+
+    public void setYear(String year) {
+        this.year = year;
+    }
+
+    public String getcNumber() {
+        return cNumber;
+    }
+
+    public void setcNumber(String cNumber) {
+        this.cNumber = cNumber;
+    }
+
+    public String getcNo() {
+        return cNo;
+    }
+
+    public void setcNo(String cNo) {
+        this.cNo = cNo;
+    }
+
+    public String getCourse() {
+        return course;
+    }
+
+    public void setCourse(String course) {
+        this.course = course;
+    }
+
+    public String getTeacher() {
+        return teacher;
+    }
+
+    public void setTeacher(String teacher) {
+        this.teacher = teacher;
+    }
+
+    public String getType() {
+        return type;
+    }
+
+    public void setType(String type) {
+        this.type = type;
+    }
+
+    public String getTime() {
+        return time;
+    }
+
+    public void setTime(String time) {
+        this.time = time;
+    }
+
+    public String getAddress() {
+        return address;
+    }
+
+    public void setAddress(String address) {
+        this.address = address;
+    }
+
+    public String getHours() {
+        return hours;
+    }
+
+    public void setHours(String hours) {
+        this.hours = hours;
+    }
+
+    public String getCredit() {
+        return credit;
+    }
+
+    public void setCredit(String credit) {
+        this.credit = credit;
+    }
+
+    public String getAllNum() {
+        return allNum;
+    }
+
+    public void setAllNum(String allNum) {
+        this.allNum = allNum;
+    }
+
+    public String getSelNum() {
+        return selNum;
+    }
+
+    public void setSelNum(String selNum) {
+        this.selNum = selNum;
+    }
+
+    public String getSex() {
+        return sex;
+    }
+
+    public void setSex(String sex) {
+        this.sex = sex;
+    }
+
+    public String getSelect() {
+        return select;
+    }
+
+    public void setSelect(String select) {
+        this.select = select;
+    }
+}
Index: src/main/java/com/lntuplus/model/ActivityModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/model/ActivityModel.java	(date 1552729568000)
+++ src/main/java/com/lntuplus/model/ActivityModel.java	(date 1552729568000)
@@ -0,0 +1,40 @@
+package com.lntuplus.model;
+
+public class ActivityModel {
+    private String updateTime;
+    private String title;
+    private String imgUrl;
+    private String url;
+
+    public String getUpdateTime() {
+        return updateTime;
+    }
+
+    public void setUpdateTime(String updateTime) {
+        this.updateTime = updateTime;
+    }
+
+    public String getTitle() {
+        return title;
+    }
+
+    public void setTitle(String title) {
+        this.title = title;
+    }
+
+    public String getImgUrl() {
+        return imgUrl;
+    }
+
+    public void setImgUrl(String imgUrl) {
+        this.imgUrl = imgUrl;
+    }
+
+    public String getUrl() {
+        return url;
+    }
+
+    public void setUrl(String url) {
+        this.url = url;
+    }
+}
Index: src/main/java/com/lntuplus/controller/CETController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/controller/CETController.java	(date 1555233452000)
+++ src/main/java/com/lntuplus/controller/CETController.java	(date 1555233452000)
@@ -0,0 +1,434 @@
+package com.lntuplus.controller;
+
+import com.google.gson.Gson;
+import com.lntuplus.action.LoginAction;
+import com.lntuplus.utils.Constants;
+import com.lntuplus.utils.GsonUtils;
+import com.lntuplus.utils.OkHttpUtils;
+import com.lntuplus.utils.TimeUtils;
+import com.sun.tools.internal.jxc.ap.Const;
+import okhttp3.Call;
+import okhttp3.FormBody;
+import okhttp3.RequestBody;
+import okhttp3.Response;
+import org.jsoup.Jsoup;
+import org.jsoup.nodes.Document;
+import org.jsoup.nodes.Element;
+import org.jsoup.select.Elements;
+import org.springframework.stereotype.Controller;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.ResponseBody;
+
+import javax.servlet.http.HttpServletRequest;
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+@Controller
+@RequestMapping(value = "/cet")
+public class CETController {
+    private String mCetUrl = "/student/skilltest/skilltest.jsdo?groupId=&moduleId=2090";
+    private String mEnrollUrl = "/foreignlanguage/foreignlanguage_do.jsp";
+    private String mPostUrl = "/foreignlanguage/foreignlanguage_win.jsp";
+    private OkHttpUtils mOkHttpUtils = OkHttpUtils.getInstance();
+    private Call mCall;
+    private Response mResponse;
+
+    @ResponseBody
+    @RequestMapping(value = "/get")
+    public String get(HttpServletRequest req) {
+        String session;
+        String port;
+        Map<String, Object> map = new HashMap<>();
+        Gson gson = GsonUtils.getInstance();
+        String number = req.getParameter("number");
+        String password = req.getParameter("password");
+        Map<String, String> loginMap = new LoginAction().login(number, password);
+        if (!loginMap.get("success").equals("success")) {
+            map.put("success", loginMap.get("success"));
+            System.out.println(TimeUtils.getTime() + " Login失败：" + loginMap.get("success"));
+            return gson.toJson(map);
+        } else {
+            session = loginMap.get("session");
+            port = loginMap.get("port");
+        }
+        String cetUrl = port + mCetUrl;
+        mCall = mOkHttpUtils.getInfoCall(cetUrl, session);
+        try {
+            mResponse = mCall.execute();
+            if (mResponse.isSuccessful()) {
+                String html = mResponse.body().string();
+                List<CetModel> list = parseCet(html);
+                map.put(Constants.STRING_DATA, list);
+                map.put(Constants.STRING_SUCCESS, Constants.STRING_SUCCESS);
+                return gson.toJson(map);
+            }
+        } catch (IOException e) {
+            map.put(Constants.STRING_SUCCESS, Constants.STRING_FAILED);
+            System.out.println("get cet failed");
+        }
+        map.put(Constants.STRING_SUCCESS, Constants.STRING_FAILED);
+        return gson.toJson(map);
+    }
+
+    @ResponseBody
+    @RequestMapping(value = "/enroll")
+    public String enroll(HttpServletRequest req) {
+        String number = req.getParameter("number");
+        String password = req.getParameter("password");
+        Map<String, Object> map = new HashMap<>();
+        Gson gson = GsonUtils.getInstance();
+        Map<String, String> loginMap = mOkHttpUtils.login(number, password);
+        if (!loginMap.get(Constants.STRING_SUCCESS).equals(Constants.STRING_SUCCESS)) {
+            map.put(Constants.STRING_SUCCESS, loginMap.get(Constants.STRING_SUCCESS));
+            return gson.toJson(map);
+        }
+        String port = loginMap.get(Constants.STRING_PORT);
+        String session = loginMap.get(Constants.STRING_SESSION);
+        String enrollUrl = port + mEnrollUrl;
+        mCall = mOkHttpUtils.getInfoCall(enrollUrl, session);
+        try {
+            mResponse = mCall.execute();
+            if (mResponse.isSuccessful()) {
+                String html = mResponse.body().string();
+                EnrollModel enrollModel = parseEnroll(html);
+                map.put(Constants.STRING_DATA, enrollModel);
+                map.put(Constants.STRING_SUCCESS, Constants.STRING_SUCCESS);
+                return gson.toJson(map);
+            }
+        } catch (IOException e) {
+            System.out.println("get cet failed");
+        }
+        map.put(Constants.STRING_SUCCESS, Constants.STRING_FAILED);
+        return gson.toJson(map);
+    }
+
+    @ResponseBody
+    @RequestMapping(value = "/post")
+    public String post(HttpServletRequest req) {
+        Map<String, Object> map = new HashMap<>();
+        Gson gson = GsonUtils.getInstance();
+        String number = req.getParameter("number");
+        String password = req.getParameter("password");
+        String notifyid = req.getParameter("notifyid");
+        String id = req.getParameter("id");
+        String rz = req.getParameter("rz");
+        Map<String, String> loginMap = mOkHttpUtils.login(number, password);
+        if (!loginMap.get(Constants.STRING_SUCCESS).equals(Constants.STRING_SUCCESS)) {
+            map.put(Constants.STRING_SUCCESS, loginMap.get(Constants.STRING_SUCCESS));
+            return gson.toJson(map);
+        }
+        String port = loginMap.get(Constants.STRING_PORT);
+        String session = loginMap.get(Constants.STRING_SESSION);
+        String postUrl = port + mPostUrl;
+        FormBody.Builder builder = new FormBody.Builder();
+        builder.add("notifyid", notifyid);
+        builder.add("id", id);
+        builder.add("rz", rz);
+        RequestBody requestBody = builder.build();
+        mCall = mOkHttpUtils.getInfoCallRequestBody(postUrl, session, requestBody);
+        try {
+            mResponse = mCall.execute();
+            if (mResponse.isSuccessful()) {
+                map.put(Constants.STRING_SUCCESS, Constants.STRING_SUCCESS);
+            } else {
+                map.put(Constants.STRING_SUCCESS, Constants.STRING_FAILED);
+            }
+        } catch (IOException e) {
+            map.put(Constants.STRING_SUCCESS, Constants.STRING_ERROR);
+        }
+        return gson.toJson(map);
+    }
+
+    private List<CetModel> parseCet(String html) {
+        Document document = Jsoup.parse(html);
+        Element table = document.getElementsByClass("infolist_tab").get(1);
+        Elements trs = table.getElementsByTag("tr");
+        if (trs.size() == 2) {
+            return new ArrayList<>();
+        }
+        List<CetModel> list = new ArrayList<>();
+        for (int i = 1; i < trs.size() - 1; i++) {
+            Elements tds = trs.get(i).getElementsByTag("td");
+            CetModel cetModel = new CetModel();
+            cetModel.setName(tds.get(0).text());
+            cetModel.setDate(tds.get(1).text());
+            cetModel.setNumber(tds.get(2).text());
+            cetModel.setCard(tds.get(3).text());
+            cetModel.setScore(tds.get(4).text());
+            cetModel.setCancel(tds.get(5).text());
+            list.add(cetModel);
+        }
+        return list;
+    }
+
+    private EnrollModel parseEnroll(String html) {
+        Document document = Jsoup.parse(html);
+        Element table = document.getElementsByClass("t13").get(1);
+        Elements tds = table.getElementsByTag("td");
+        EnrollModel enrollModel = new EnrollModel();
+        enrollModel.setNumber(tds.get(1).text());
+        enrollModel.setImgUrl(tds.get(2).getElementsByTag("img").get(0).attr("src"));
+        enrollModel.setName(tds.get(4).text());
+        enrollModel.setSex(tds.get(6).text());
+        enrollModel.setiClass(tds.get(8).text());
+        enrollModel.setProfession(tds.get(10).text());
+        enrollModel.setFaculty(tds.get(12).text());
+        enrollModel.setCome(tds.get(14).text());
+        enrollModel.setGrade(tds.get(16).text());
+        enrollModel.setLength(tds.get(18).text());
+        enrollModel.setEducation(tds.get(20).text());
+        enrollModel.setCard(tds.get(22).text());
+        enrollModel.setYear(tds.get(24).text());
+        enrollModel.setTerm(tds.get(26).text());
+        enrollModel.setTime(tds.get(28).text());
+        enrollModel.setRegistered(tds.get(30).text());
+        enrollModel.setChoose(tds.get(32).getElementsByTag("input").get(1).text());
+        enrollModel.setNotifiyid(tds.get(32).getElementsByTag("input").get(1).attr("value"));
+        enrollModel.setId(table.getElementsByTag("input").get(2).attr("value"));
+        enrollModel.setRz(table.getElementsByTag("input").get(3).attr("value"));
+        return enrollModel;
+    }
+}
+
+class CetModel {
+    private String name;
+    private String date;
+    private String number;
+    private String card;
+    private String score;
+    private String cancel;
+
+    public String getName() {
+        return name;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    public String getDate() {
+        return date;
+    }
+
+    public void setDate(String date) {
+        this.date = date;
+    }
+
+    public String getNumber() {
+        return number;
+    }
+
+    public void setNumber(String number) {
+        this.number = number;
+    }
+
+    public String getCard() {
+        return card;
+    }
+
+    public void setCard(String card) {
+        this.card = card;
+    }
+
+    public String getScore() {
+        return score;
+    }
+
+    public void setScore(String score) {
+        this.score = score;
+    }
+
+    public String getCancel() {
+        return cancel;
+    }
+
+    public void setCancel(String cancel) {
+        this.cancel = cancel;
+    }
+}
+
+class EnrollModel {
+    private String number;
+    private String imgUrl;
+    private String name;
+    private String sex;
+    private String iClass;
+    private String profession;
+    private String faculty;
+    private String come;
+    private String grade;
+    private String length;
+    private String education;
+    private String card;
+    private String year;
+    private String term;
+    private String time;
+    private String registered;
+    private String choose;
+    private String notifiyid;
+    private String id;
+    private String rz;
+
+    public String getNumber() {
+        return number;
+    }
+
+    public void setNumber(String number) {
+        this.number = number;
+    }
+
+    public String getImgUrl() {
+        return imgUrl;
+    }
+
+    public void setImgUrl(String imgUrl) {
+        this.imgUrl = imgUrl;
+    }
+
+    public String getName() {
+        return name;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    public String getSex() {
+        return sex;
+    }
+
+    public void setSex(String sex) {
+        this.sex = sex;
+    }
+
+    public String getiClass() {
+        return iClass;
+    }
+
+    public void setiClass(String iClass) {
+        this.iClass = iClass;
+    }
+
+    public String getProfession() {
+        return profession;
+    }
+
+    public void setProfession(String profession) {
+        this.profession = profession;
+    }
+
+    public String getFaculty() {
+        return faculty;
+    }
+
+    public void setFaculty(String faculty) {
+        this.faculty = faculty;
+    }
+
+    public String getCome() {
+        return come;
+    }
+
+    public void setCome(String come) {
+        this.come = come;
+    }
+
+    public String getGrade() {
+        return grade;
+    }
+
+    public void setGrade(String grade) {
+        this.grade = grade;
+    }
+
+    public String getLength() {
+        return length;
+    }
+
+    public void setLength(String length) {
+        this.length = length;
+    }
+
+    public String getEducation() {
+        return education;
+    }
+
+    public void setEducation(String education) {
+        this.education = education;
+    }
+
+    public String getCard() {
+        return card;
+    }
+
+    public void setCard(String card) {
+        this.card = card;
+    }
+
+    public String getYear() {
+        return year;
+    }
+
+    public void setYear(String year) {
+        this.year = year;
+    }
+
+    public String getTerm() {
+        return term;
+    }
+
+    public void setTerm(String term) {
+        this.term = term;
+    }
+
+    public String getTime() {
+        return time;
+    }
+
+    public void setTime(String time) {
+        this.time = time;
+    }
+
+    public String getRegistered() {
+        return registered;
+    }
+
+    public void setRegistered(String registered) {
+        this.registered = registered;
+    }
+
+    public String getChoose() {
+        return choose;
+    }
+
+    public void setChoose(String choose) {
+        this.choose = choose;
+    }
+
+    public String getNotifiyid() {
+        return notifiyid;
+    }
+
+    public void setNotifiyid(String notifiyid) {
+        this.notifiyid = notifiyid;
+    }
+
+    public String getId() {
+        return id;
+    }
+
+    public void setId(String id) {
+        this.id = id;
+    }
+
+    public String getRz() {
+        return rz;
+    }
+
+    public void setRz(String rz) {
+        this.rz = rz;
+    }
+}
Index: src/main/java/com/lntuplus/controller/ExamController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/controller/ExamController.java	(date 1555233452000)
+++ src/main/java/com/lntuplus/controller/ExamController.java	(date 1555233452000)
@@ -0,0 +1,48 @@
+package com.lntuplus.controller;
+
+import com.google.gson.Gson;
+import com.lntuplus.action.ExamAction;
+import com.lntuplus.action.LoginAction;
+import com.lntuplus.model.ExamModel;
+import com.lntuplus.utils.Constants;
+import com.lntuplus.utils.GsonUtils;
+import com.lntuplus.utils.OkHttpUtils;
+import com.lntuplus.utils.TimeUtils;
+import org.springframework.stereotype.Controller;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.ResponseBody;
+
+import javax.servlet.http.HttpServletRequest;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+@Controller
+@RequestMapping(value = "/exam")
+public class ExamController {
+    private OkHttpUtils mOkHttpUtils = OkHttpUtils.getInstance();
+
+    @ResponseBody
+    @RequestMapping(value = "/get")
+    public String get(HttpServletRequest req) {
+        String number = req.getParameter("number");
+        String password = req.getParameter("password");
+        Map<String, Object> map = new HashMap<>();
+        Gson gson = GsonUtils.getInstance();
+        Map<String, String> loginMap = mOkHttpUtils.login(number, password);
+        if (!loginMap.get(Constants.STRING_SUCCESS).equals(Constants.STRING_SUCCESS)) {
+            map.put(Constants.STRING_SUCCESS, loginMap.get(Constants.STRING_SUCCESS));
+            return gson.toJson(map);
+        }
+        String port = loginMap.get(Constants.STRING_PORT);
+        String session = loginMap.get(Constants.STRING_SESSION);
+        Map<String, Object> examMap = new ExamAction().get(port, session, number);
+        if (!examMap.get(Constants.STRING_SUCCESS).equals(Constants.STRING_SUCCESS)) {
+            map.put(Constants.STRING_SUCCESS, examMap.get(Constants.STRING_SUCCESS));
+            return gson.toJson(map);
+        }
+        List<ExamModel> examData = (List<ExamModel>) examMap.get(Constants.STRING_DATA);
+        map.put(Constants.STRING_DATA, examData);
+        return gson.toJson(examData);
+    }
+}
Index: src/main/resources/mappers/notice-mapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/mappers/notice-mapper.xml	(date 1555233452000)
+++ src/main/resources/mappers/notice-mapper.xml	(date 1555233452000)
@@ -0,0 +1,46 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper
+        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
+        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<!-- mapper:根标签，namespace：命名空间，随便写，一般保证命名空间唯一 -->
+<mapper namespace="NoticeMapper">
+    <!-- statement，内容：sql语句。id：唯一标识，随便写，在同一个命名空间下保持唯一
+       resultType：sql语句查询结果集的封装类型,tb_user即为数据库中的表
+     -->
+    <select id="count_all_hashcode" resultType="int">
+      select count(hashcode) from notice where pNo = 0 and rNo = 0
+   </select>
+
+    <select id="hashcode" resultType="int">
+      select hashcode from notice where pNo = 0 and rNo = 0
+   </select>
+
+    <insert id="insert_hashcode" parameterType="com.lntuplus.model.NoticeModel">
+      insert into notice values ( #{hashcode}, 0, 0, 0, #{datetime} )
+   </insert>
+
+    <select id="select_hashcode" resultType="int" parameterType="com.lntuplus.model.NoticeModel">
+      select hashcode from notice where pNo = #{pNo} and rNo = #{rNo}
+   </select>
+
+    <select id="count_hashcode" resultType="int" parameterType="com.lntuplus.model.NoticeModel">
+      select count(hashcode) from notice where pNo = #{pNo} and rNo = #{rNo}
+   </select>
+
+    <insert id="insert" parameterType="com.lntuplus.model.NoticeModel">
+      insert into notice values ( #{hashcode}, #{pNo}, #{rNo}, #{notices}, #{datetime} )
+   </insert>
+
+    <update id="update" parameterType="com.lntuplus.model.NoticeModel">
+        update notice set hashcode = #{hashcode} ,notices = #{notices} ,datetime = #{datetime} where pNo = #{pNo} and rNo = #{rNo}
+    </update>
+
+    <update id="update_hashcode" parameterType="com.lntuplus.model.NoticeModel">
+        update notice set hashcode = #{hashcode} ,datetime = #{datetime} where pNo = 0 and rNo = 0
+    </update>
+
+    <select id="select_notices" resultType="com.lntuplus.model.NoticeModel"
+            parameterType="com.lntuplus.model.NoticeModel">
+        select * from notice where pNo = #{pNo} and rNo = #{rNo}
+    </select>
+</mapper>
\ No newline at end of file
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pom.xml	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ pom.xml	(date 1553931753000)
@@ -55,10 +55,23 @@
             <version>2.8.5</version>
         </dependency>
 
+        <dependency>
+            <groupId>com.fasterxml.jackson.core</groupId>
+            <artifactId>jackson-core</artifactId>
+            <version>2.9.8</version>
+        </dependency>
+
+        <dependency>
+            <groupId>com.fasterxml.jackson.core</groupId>
+            <artifactId>jackson-databind</artifactId>
+            <version>2.9.8</version>
+        </dependency>
+
+
         <dependency>
             <groupId>org.quartz-scheduler</groupId>
             <artifactId>quartz</artifactId>
-            <version>2.4.0</version>
+            <version>2.3.0</version>
         </dependency>
 
         <dependency>
@@ -66,6 +79,17 @@
             <artifactId>mybatis</artifactId>
             <version>3.5.0</version>
         </dependency>
+
+        <dependency>
+            <groupId>org.apache.logging.log4j</groupId>
+            <artifactId>log4j-api</artifactId>
+            <version>2.11.2</version>
+        </dependency>
+        <dependency>
+            <groupId>org.apache.logging.log4j</groupId>
+            <artifactId>log4j-core</artifactId>
+            <version>2.11.2</version>
+        </dependency>
 
     </dependencies>
 
Index: .idea/libraries/Maven__com_fasterxml_jackson_core_jackson_core_2_9_8.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__com_fasterxml_jackson_core_jackson_core_2_9_8.xml	(date 1552549973000)
+++ .idea/libraries/Maven__com_fasterxml_jackson_core_jackson_core_2_9_8.xml	(date 1552549973000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.fasterxml.jackson.core:jackson-core:2.9.8">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-core/2.9.8/jackson-core-2.9.8.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-core/2.9.8/jackson-core-2.9.8-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-core/2.9.8/jackson-core-2.9.8-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/com/lntuplus/model/ArticleModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/model/ArticleModel.java	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ src/main/java/com/lntuplus/model/ArticleModel.java	(date 1550900996000)
@@ -1,25 +1,67 @@
 package com.lntuplus.model;
 
-import java.util.List;
-import java.util.Map;
-
 public class ArticleModel {
-    private String success;
-    private List<Map<String, Object>> data;
+    private String updateTime;
+    private String title;
+    private String imgUrl;
+    private String text;
+    private String time;
+    private String address;
+    private String url;
+
+    public String getUpdateTime() {
+        return updateTime;
+    }
+
+    public void setUpdateTime(String updateTime) {
+        this.updateTime = updateTime;
+    }
+
+    public String getTitle() {
+        return title;
+    }
+
+    public void setTitle(String title) {
+        this.title = title;
+    }
+
+    public String getImgUrl() {
+        return imgUrl;
+    }
+
+    public void setImgUrl(String imgUrl) {
+        this.imgUrl = imgUrl;
+    }
+
+    public String getText() {
+        return text;
+    }
+
+    public void setText(String text) {
+        this.text = text;
+    }
 
-    public String getSuccess() {
-        return success;
+    public String getTime() {
+        return time;
     }
 
-    public void setSuccess(String success) {
-        this.success = success;
+    public void setTime(String time) {
+        this.time = time;
     }
 
-    public List<Map<String, Object>> getData() {
-        return data;
+    public String getAddress() {
+        return address;
     }
 
-    public void setData(List<Map<String, Object>> data) {
-        this.data = data;
+    public void setAddress(String address) {
+        this.address = address;
+    }
+
+    public String getUrl() {
+        return url;
+    }
+
+    public void setUrl(String url) {
+        this.url = url;
     }
 }
Index: src/main/resources/mappers/port-mapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/mappers/port-mapper.xml	(date 1551946658000)
+++ src/main/resources/mappers/port-mapper.xml	(date 1551946658000)
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper
+        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
+        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<!-- mapper:根标签，namespace：命名空间，随便写，一般保证命名空间唯一 -->
+<mapper namespace="PortMapper">
+    <!-- statement，内容：sql语句。id：唯一标识，随便写，在同一个命名空间下保持唯一
+       resultType：sql语句查询结果集的封装类型,tb_user即为数据库中的表
+     -->
+    <insert id="insert" parameterType="String">
+        insert ignore into port values (0, #{port})
+    </insert>
+
+    <select id="selectCount" resultType="int">
+        select count(*) from port
+    </select>
+
+    <select id="select" resultType="String">
+        select port from port
+    </select>
+
+    <update id="update" parameterType="String">
+        update port set port = #{port}
+    </update>
+</mapper>
Index: src/main/resources/mappers/everyday-mapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/mappers/everyday-mapper.xml	(date 1550903023000)
+++ src/main/resources/mappers/everyday-mapper.xml	(date 1550903023000)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper
+        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
+        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<!-- mapper:根标签，namespace：命名空间，随便写，一般保证命名空间唯一 -->
+<mapper namespace="EverydayMapper">
+    <!-- statement，内容：sql语句。id：唯一标识，随便写，在同一个命名空间下保持唯一
+       resultType：sql语句查询结果集的封装类型,tb_user即为数据库中的表
+     -->
+    <select id="select" resultType="com.lntuplus.model.EverydayModel">
+      select * from everyday
+   </select>
+</mapper>
Index: .idea/libraries/Maven__com_mchange_c3p0_0_9_5_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__com_mchange_c3p0_0_9_5_2.xml	(date 1553149194000)
+++ .idea/libraries/Maven__com_mchange_c3p0_0_9_5_2.xml	(date 1553149194000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.mchange:c3p0:0.9.5.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/mchange/c3p0/0.9.5.2/c3p0-0.9.5.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/mchange/c3p0/0.9.5.2/c3p0-0.9.5.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/mchange/c3p0/0.9.5.2/c3p0-0.9.5.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/resources/mappers/article-mapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/mappers/article-mapper.xml	(date 1552729458000)
+++ src/main/resources/mappers/article-mapper.xml	(date 1552729458000)
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper
+        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
+        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<!-- mapper:根标签，namespace：命名空间，随便写，一般保证命名空间唯一 -->
+<mapper namespace="ArticleMapper">
+    <!-- statement，内容：sql语句。id：唯一标识，随便写，在同一个命名空间下保持唯一
+       resultType：sql语句查询结果集的封装类型,tb_user即为数据库中的表
+     -->
+    <select id="article" resultType="com.lntuplus.model.ArticleModel">
+      select * from article order by updateTime desc
+   </select>
+
+    <select id="activity" resultType="com.lntuplus.model.ArticleModel">
+      select * from activity order by updateTime desc
+   </select>
+</mapper>
Index: web/META-INF/MANIFEST.MF
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/META-INF/MANIFEST.MF	(date 1553147966000)
+++ web/META-INF/MANIFEST.MF	(date 1553147966000)
@@ -0,0 +1,2 @@
+Manifest-Version: 1.0
+
Index: src/main/java/com/lntuplus/controller/TableController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/controller/TableController.java	(date 1555233452000)
+++ src/main/java/com/lntuplus/controller/TableController.java	(date 1555233452000)
@@ -0,0 +1,49 @@
+package com.lntuplus.controller;
+
+import com.google.gson.Gson;
+import com.lntuplus.action.LoginAction;
+import com.lntuplus.action.ScoreAction;
+import com.lntuplus.action.TableAction;
+import com.lntuplus.model.TableModel;
+import com.lntuplus.utils.Constants;
+import com.lntuplus.utils.GsonUtils;
+import com.lntuplus.utils.OkHttpUtils;
+import com.lntuplus.utils.TimeUtils;
+import org.springframework.stereotype.Controller;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.ResponseBody;
+
+import javax.servlet.http.HttpServletRequest;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+@Controller
+@RequestMapping(value = "/table")
+public class TableController {
+    private OkHttpUtils mOkHttpUtils = OkHttpUtils.getInstance();
+
+    @ResponseBody
+    @RequestMapping(value = "/get")
+    public String get(HttpServletRequest req) {
+        String number = req.getParameter("number");
+        String password = req.getParameter("password");
+        Map<String, Object> map = new HashMap<>();
+        Gson gson = GsonUtils.getInstance();
+        Map<String, String> loginMap = mOkHttpUtils.login(number, password);
+        if (!loginMap.get(Constants.STRING_SUCCESS).equals(Constants.STRING_SUCCESS)) {
+            map.put(Constants.STRING_SUCCESS, loginMap.get(Constants.STRING_SUCCESS));
+            return gson.toJson(map);
+        }
+        String port = loginMap.get(Constants.STRING_PORT);
+        String session = loginMap.get(Constants.STRING_SESSION);
+        Map<String, Object> tableMap = new TableAction().get(port, session);
+        if (!tableMap.get(Constants.STRING_SUCCESS).equals(Constants.STRING_SUCCESS)) {
+            map.put(Constants.STRING_SUCCESS, tableMap.get(Constants.STRING_SUCCESS));
+            return gson.toJson(map);
+        }
+        List<List<List<TableModel>>> tableData = (List<List<List<TableModel>>>) tableMap.get(Constants.STRING_DATA);
+        map.put(Constants.STRING_DATA, tableData);
+        return gson.toJson(map);
+    }
+}
Index: src/main/java/com/lntuplus/utils/Constants.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/utils/Constants.java	(date 1555233452000)
+++ src/main/java/com/lntuplus/utils/Constants.java	(date 1555233452000)
@@ -0,0 +1,24 @@
+package com.lntuplus.utils;
+
+public class Constants {
+
+    public static final String STRING_SUCCESS = "success";
+    public static final String STRING_FAILED = "failed";
+    public static final String STRING_ERROR = "error";
+    public static final String STRING_PORT = "port";
+    public static final String STRING_POST = "post";
+    public static final String STRING_PASSWORD = "password";
+    public static final String STRING_SESSION = "session";
+    public static final String STRING_NEW_STU = "newstu";
+    public static final String STRING_HASHCODE = "hashcode";
+    public static final String STRING_500 = "500";
+    public static final String STRING_DATA = "data";
+    public static final String STRING_NAME = "name";
+    public static final String STRING_YEAR = "year";
+    public static final String STRING_STU_INFO = "stuinfo";
+    public static final String STRING_SCORE = "score";
+    public static final String STRING_TABLE = "table";
+    public static final String STRING_EXAM = "exam";
+    public static final String STRING_GPA = "gpa";
+
+}
Index: src/main/java/com/lntuplus/controller/WeekController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/controller/WeekController.java	(date 1555233452000)
+++ src/main/java/com/lntuplus/controller/WeekController.java	(date 1555233452000)
@@ -0,0 +1,17 @@
+package com.lntuplus.controller;
+
+import com.lntuplus.utils.TimeUtils;
+import org.springframework.stereotype.Controller;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.ResponseBody;
+
+@Controller
+@RequestMapping(value = "/week")
+public class WeekController {
+
+    @ResponseBody
+    @RequestMapping(value = "/get")
+    public Object get() {
+        return TimeUtils.weekNo();
+    }
+}
Index: src/main/java/com/lntuplus/controller/ArticleController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/controller/ArticleController.java	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ src/main/java/com/lntuplus/controller/ArticleController.java	(date 1555233452000)
@@ -1,22 +1,21 @@
 package com.lntuplus.controller;
 
-import com.google.gson.Gson;
 import com.lntuplus.action.ArticleAction;
-import com.lntuplus.model.ArticleModel;
 import org.springframework.stereotype.Controller;
 import org.springframework.web.bind.annotation.RequestMapping;
 import org.springframework.web.bind.annotation.ResponseBody;
 
+import java.util.Map;
+
 @Controller
 @RequestMapping(value = "/article")
 public class ArticleController {
 
     @ResponseBody
     @RequestMapping(value = "/get")
-    private String get() {
-        Gson gson = new Gson();
+    public Object get() {
         ArticleAction articleAction = new ArticleAction();
-        ArticleModel articleModel = articleAction.get();
-        return gson.toJson(articleModel);
+        Map<String, Object> map = articleAction.get();
+        return map;
     }
 }
Index: src/main/resources/mappers/save-mapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/mappers/save-mapper.xml	(date 1555233452000)
+++ src/main/resources/mappers/save-mapper.xml	(date 1555233452000)
@@ -0,0 +1,109 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper
+        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
+        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<!-- mapper:根标签，namespace：命名空间，随便写，一般保证命名空间唯一 -->
+<mapper namespace="SaveMapper">
+    <!-- statement，内容：sql语句。id：唯一标识，随便写，在同一个命名空间下保持唯一
+       resultType：sql语句查询结果集的封装类型,tb_user即为数据库中的表
+     -->
+
+    <select id="stuinfoCount" parameterType="com.lntuplus.model.StuInfoModel" resultType="int">
+        select count(*) from stuInfo where number = #{number}
+    </select>
+
+    <select id="stuinfoInsert" parameterType="com.lntuplus.model.StuInfoModel">
+        insert ignore into stuInfo values (
+        #{number},
+        #{password},
+        #{nationality},
+        #{name},
+        #{place},
+        #{engName},
+        #{birth},
+        #{typeOfID},
+        #{politicalStatus},
+        #{card},
+        #{vehicleInterval},
+        #{sex},
+        #{nation},
+        #{academic},
+        #{professional},
+        #{iClass},
+        #{stuType},
+        #{examArea},
+        #{score},
+        #{registrationNumber},
+        #{school},
+        #{languageType},
+        #{comeDate},
+        #{enrollmentType},
+        #{goDate},
+        #{trainingMode},
+        #{address},
+        #{phone},
+        #{email},
+        #{origin},
+        #{imgUrl})
+    </select>
+
+    <select id="scoreCount" parameterType="com.lntuplus.model.ScoreModel" resultType="int">
+        select count(*) from score where number = #{number}
+    </select>
+
+    <insert id="scoreInsert" parameterType="com.lntuplus.model.ScoreModel">
+        insert into score values (#{number},#{course},#{mode},#{year},#{score},#{credit},#{cNumber},#{cNo},#{examType},#{properties},#{remark},#{delayed},#{openUnit},#{teacher},#{scoreInfo},#{normalScore},#{midScore},#{endScore},#{examRoom},#{seatNum},#{datetime})
+    </insert>
+
+    <insert id="scoreForeach" parameterType="List" useGeneratedKeys="false">
+        insert ignore into score values
+        <foreach collection="list" item="item" index="index" separator=",">
+            (
+            #{item.number},
+            #{item.course},
+            #{item.mode},
+            #{item.year},
+            #{item.score},
+            #{item.credit},
+            #{item.cNumber},
+            #{item.cNo},
+            #{item.examType},
+            #{item.properties},
+            #{item.remark},
+            #{item.delayed},
+            #{item.openUnit},
+            #{item.teacher},
+            #{item.scoreInfo},
+            #{item.normalScore},
+            #{item.midScore},
+            #{item.endScore},
+            #{item.examRoom},
+            #{item.seatNum},
+            #{item.datetime}
+            )
+        </foreach>
+    </insert>
+
+    <insert id="examForeach" parameterType="List" useGeneratedKeys="false">
+        insert ignore into exam values
+        <foreach collection="list" item="item" index="index" separator=",">
+            (
+            #{item.number},
+            #{item.course},
+            #{item.date},
+            #{item.time},
+            #{item.address},
+            #{item.datetime}
+            )
+        </foreach>
+    </insert>
+
+    <delete id="scoreDelete" parameterType="com.lntuplus.model.ScoreModel">
+        DELETE FROM score WHERE number = #{number}
+    </delete>
+
+    <insert id="gpaInsert" parameterType="com.lntuplus.model.GPAModel">
+        INSERT IGNORE INTO gpa VALUES(#{number},#{gpa},#{date})
+    </insert>
+
+</mapper>
\ No newline at end of file
Index: src/main/java/com/lntuplus/model/SchoolNoticeModel.java
===================================================================
--- src/main/java/com/lntuplus/model/SchoolNoticeModel.java	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ src/main/java/com/lntuplus/model/NoticeModel.java	(date 1550755165000)
@@ -1,38 +1,49 @@
 package com.lntuplus.model;
 
-import java.util.ArrayList;
-import java.util.List;
-import java.util.Map;
-
-public class SchoolNoticeModel {
-    private String success = "null";
-    private List<List<Map>> noticeMains;
+public class NoticeModel {
     private int hashcode;
-
-    public String getSuccess() {
-        return success;
-    }
-
-    public void setSuccess(String success) {
-        this.success = success;
-    }
-
-    public List<Map> getNoitceItem(int index) {
-        return noticeMains.get(index);
-    }
-
-    public void addNoticeMain(List<Map> noticeMain) {
-        if (noticeMains == null) {
-            noticeMains = new ArrayList<>();
-        }
-        this.noticeMains.add(noticeMain);
-    }
+    private int pNo;
+    private int rNo;
+    private String notices;
+    private String datetime;
 
     public int getHashcode() {
         return hashcode;
     }
 
-    public void setHashcode() {
-        this.hashcode = noticeMains.hashCode();
+    public void setHashcode(int hashcode) {
+        this.hashcode = hashcode;
+    }
+
+    public int getpNo() {
+        return pNo;
+    }
+
+    public void setpNo(int pNo) {
+        this.pNo = pNo;
+    }
+
+    public int getrNo() {
+        return rNo;
+    }
+
+    public void setrNo(int rNo) {
+        this.rNo = rNo;
+    }
+
+    public String getNotices() {
+        return notices;
+    }
+
+    public void setNotices(String notices) {
+        this.notices = notices;
+    }
+
+    public String getDatetime() {
+        return datetime;
+    }
+
+    public void setDatetime(String datetime) {
+        this.datetime = datetime;
     }
 }
Index: src/main/java/com/lntuplus/controller/ClassRoomController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/controller/ClassRoomController.java	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ src/main/java/com/lntuplus/controller/ClassRoomController.java	(date 1553411751000)
@@ -16,14 +16,13 @@
 
     @ResponseBody
     @RequestMapping({"/get"})
-    public String get(HttpServletRequest req, HttpServletResponse resp) {
+    public Object get(HttpServletRequest req, HttpServletResponse resp) {
         resp.setContentType("application/json; charset=utf-8");
         String weeks = req.getParameter("weeks");
         String name = req.getParameter("buildingname");
         String campus = req.getParameter("campus");
-        Gson gson = new Gson();
         ClassRoomAction classRoomAction = new ClassRoomAction();
         ClassRoomModel classRoomModel = classRoomAction.get(weeks, name, campus);
-        return gson.toJson(classRoomModel);
+        return classRoomModel;
     }
 }
Index: src/main/java/com/lntuplus/controller/EverydayTextController.java
===================================================================
--- src/main/java/com/lntuplus/controller/EverydayTextController.java	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ src/main/java/com/lntuplus/controller/EverydayController.java	(date 1552728777000)
@@ -1,22 +1,26 @@
 package com.lntuplus.controller;
 
 import com.google.gson.Gson;
-import com.lntuplus.action.EverydayTextAction;
-import com.lntuplus.model.EverydayTextModel;
+import com.lntuplus.action.EverydayAction;
+import com.lntuplus.model.EverydayModel;
+import com.lntuplus.utils.GsonUtils;
 import org.springframework.stereotype.Controller;
 import org.springframework.web.bind.annotation.RequestMapping;
 import org.springframework.web.bind.annotation.ResponseBody;
 
+import java.util.HashMap;
+import java.util.Map;
+
 @Controller
-@RequestMapping(value = "/everydaytext")
-public class EverydayTextController {
+@RequestMapping(value = "/everyday")
+public class EverydayController {
 
     @RequestMapping(value = "/get")
     @ResponseBody
-    public String get() {
-        EverydayTextAction everydayTextAction = new EverydayTextAction();
-        Gson gson = new Gson();
-        String everydayText = gson.toJson(everydayTextAction.get(), EverydayTextModel.class);
-        return everydayText;
+    public Object get() {
+        EverydayAction everydayAction = new EverydayAction();
+        Gson gson = GsonUtils.getInstance();
+        EverydayModel everydayModel = everydayAction.get();
+        return everydayModel;
     }
 }
Index: src/main/java/com/lntuplus/action/ClassRoomAction.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/action/ClassRoomAction.java	(revision ec7b9b8d4744a2c0ea300ec058ae1e7ba7729a2d)
+++ src/main/java/com/lntuplus/action/ClassRoomAction.java	(date 1553411751000)
@@ -1,6 +1,7 @@
 package com.lntuplus.action;
 
 import com.lntuplus.model.ClassRoomModel;
+import com.lntuplus.utils.TimeUtils;
 import okhttp3.Call;
 import okhttp3.OkHttpClient;
 import okhttp3.Request;
@@ -30,7 +31,7 @@
         String id = nameToID(name, campus);
         if (id.equals("-1")) {
             classRoomModel.setSuccess("nameError");
-            System.out.println("校区名错误！");
+            System.out.println(TimeUtils.getTime() + " 校区名错误！");
             return classRoomModel;
         }
         String newUrl = url + "?weeks=" + weeks + "&buildingid1=" + id + "&sBuildingName=" + sBuildingName;
@@ -41,18 +42,18 @@
             Response roomResp = call.execute();
             if (roomResp.isSuccessful()) {
                 Response data = roomResp;
-                classRoomModel.setSuccess("true");
+                classRoomModel.setSuccess("success");
                 classRoomModel.setData(parseClassRoom(data.body().string()));
-                System.out.println("查询空教室成功!name:" + name + ",weeks:" + weeks);
+                System.out.println(TimeUtils.getTime() + " 查询空教室成功!name:" + name + ",weeks:" + weeks);
                 roomResp.close();
             } else {
                 classRoomModel.setSuccess("failed");
-                System.out.println("获取空教室失败！");
+                System.out.println(TimeUtils.getTime() + ":获取空教室失败！");
             }
             roomResp.close();
         } catch (IOException e1) {
-            classRoomModel.setSuccess("connect");
-            System.out.println("连接超时，获取空教室失败！");
+            classRoomModel.setSuccess("error");
+            System.out.println(TimeUtils.getTime() + " 连接超时，获取空教室失败！");
         }
         return classRoomModel;
     }
Index: src/main/java/com/lntuplus/controller/FeedbackController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lntuplus/controller/FeedbackController.java	(date 1555233452000)
+++ src/main/java/com/lntuplus/controller/FeedbackController.java	(date 1555233452000)
@@ -0,0 +1,24 @@
+package com.lntuplus.controller;
+
+import com.lntuplus.action.FeedbackAction;
+import org.springframework.stereotype.Controller;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.ResponseBody;
+
+import javax.servlet.http.HttpServletRequest;
+import java.util.Map;
+
+@Controller
+@RequestMapping({"/feedback"})
+public class FeedbackController {
+
+    @ResponseBody
+    @RequestMapping({"/post"})
+    public Object post(HttpServletRequest req) {
+        String number = req.getParameter("number");
+        String text = req.getParameter("text");
+        String qq = req.getParameter("qq");
+        Map<String, String> map = new FeedbackAction().post(number, text, qq);
+        return map;
+    }
+}
